{
  "components": {
    "buttons": {
      "description": "Create a button with a `button` or `a` element to retain the native click\nfunction.\n\nUse a disabled attribute when a button can’t be clicked.",
      "annotations": {
        "summary": "Buttons are used to invoke an event",
        "layout": "responsive",
        "name": "buttons",
        "support": "dev-ready",
        "base": true,
        "role": "button",
        "type": "action",
        "category": "base",
        "selector": ".slds-button"
      },
      "id": "buttons",
      "restrictees": [
        {
          "description": "The base `.slds-button` looks like a plain text link. It removes all the\nstyling of the native button. It’s typically used to trigger a modal or\ndisplay a “like” link. All button variations are built by adding another\nclass to `.slds-button`.\n\nAdd the `.slds-button_neutral` class to create a neutral button, which\nhas a white background and gray border.\n\nUse a neutral icon button is for buttons with an icon on the left or\nright (not for stateful buttons). Add the `.slds-button_neutral` class\nto `.slds-button`.\n\nThe SVG inside receives the `.slds-button__icon` class. You can position\nthe icon on the right or the left using `.slds-button__icon_right` or\n`.slds-button__icon_left` , which apply the correct amount of space\nbetween the icon and the text.\n\nTo create the brand button, add the `.slds-button_brand` class to\nthe `.slds-button` class.\n\nTo create the destructive button, add the `.slds-button_destructive`\nclass to the `.slds-button` class.\n\nUse the inverse button on dark backgrounds. Add the `.slds-button_inverse`\nclass to the `.slds-button` class.",
          "annotations": {
            "summary": "This neutralizes all the base styles making it look like a text link",
            "name": "base",
            "selector": ".slds-button",
            "restrict": "button, a, span",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Creates the gray border with white background default style",
              "annotations": {
                "selector": ".slds-button_neutral",
                "restrict": ".slds-button",
                "modifier": true,
                "group": "theme"
              },
              "id": ".slds-button_neutral",
              "restrictees": []
            },
            {
              "description": "Creates the brand blue Salesforce style",
              "annotations": {
                "selector": ".slds-button_brand",
                "restrict": ".slds-button",
                "modifier": true,
                "group": "theme"
              },
              "id": ".slds-button_brand",
              "restrictees": []
            },
            {
              "description": "Creates the inverse style for dark backgrounds",
              "annotations": {
                "selector": ".slds-button_inverse",
                "restrict": ".slds-button",
                "modifier": true,
                "group": "theme"
              },
              "id": ".slds-button_inverse",
              "restrictees": []
            },
            {
              "description": "Creates a red button style",
              "annotations": {
                "selector": ".slds-button_destructive",
                "restrict": ".slds-button",
                "group": "theme",
                "modifier": true
              },
              "id": ".slds-button_destructive",
              "restrictees": []
            },
            {
              "description": "Creates a green button style",
              "annotations": {
                "selector": ".slds-button_success",
                "restrict": ".slds-button",
                "group": "theme",
                "modifier": true
              },
              "id": ".slds-button_success",
              "restrictees": []
            },
            {
              "description": "Creates a smaller button style",
              "annotations": {
                "selector": ".slds-button_small",
                "restrict": ".slds-button",
                "deprecated": true
              },
              "id": ".slds-button_small",
              "restrictees": []
            },
            {
              "description": "The stateful button requires the `.slds-button--neutral` class in addition to the `.slds-button` class.\n\nThe stateful inverse button works just like the stateful button. It requires the `.slds-button--inverse` class in addition to the `.slds-button` class.\n\nIt uses the class `.slds-not-selected` in its initial state. When the user activates the button, use JavaScript to toggle the class to `.slds-is-selected`. The button contains three spans with classes that hide or show the content of the spans based on the class on the button. Each span contains text and a corresponding icon. The SVG will have the `.slds-button__icon--stateful` class as well as the `.slds-button__icon--left` class setting the icon on the left.\n\nStateful icons can be toggled on and off and retain their state. Like stateful buttons, the initial state is `.slds-not-selected`, and JavaScript is used to toggle it to `.slds-is-selected` when activated.\n\n#### Accessibility\n\nFor accessibility, include the attribute `aria-live=\"assertive\"` on the button. The `aria-live=\"assertive\"` attribute means the value of the `<span>` inside the button will be spoken whenever it changes.",
              "annotations": {
                "summary": "Initiates a stateful button",
                "name": "stateful",
                "selector": ".slds-button_stateful",
                "restrict": ".slds-button",
                "variant": true
              },
              "id": "stateful",
              "restrictees": [
                {
                  "description": "Default state of a stateful button",
                  "annotations": {
                    "selector": ".slds-not-selected",
                    "restrict": ".slds-button_stateful",
                    "notes": "This class should be toggled with JavaScript",
                    "modifier": true,
                    "group": "interaction"
                  },
                  "id": ".slds-not-selected",
                  "restrictees": []
                },
                {
                  "description": "When button is selected and still has focus from click",
                  "annotations": {
                    "selector": ".slds-is-selected-clicked",
                    "restrict": ".slds-button_stateful",
                    "notes": "This class should be toggled with JavaScript",
                    "modifier": true,
                    "group": "interaction"
                  },
                  "id": ".slds-is-selected-clicked",
                  "restrictees": []
                },
                {
                  "description": "When button is pressed and selected",
                  "annotations": {
                    "selector": ".slds-is-selected",
                    "restrict": ".slds-button_stateful",
                    "notes": "This class should be toggled with JavaScript",
                    "modifier": true,
                    "group": "interaction"
                  },
                  "id": ".slds-is-selected",
                  "restrictees": []
                }
              ],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Sizing for icon that sits inside button__icon",
              "annotations": {
                "name": "with-icon",
                "selector": ".slds-button__icon",
                "restrict": ".slds-button svg",
                "variant": true
              },
              "id": "with-icon",
              "restrictees": [
                {
                  "description": "Large size button icon svg",
                  "annotations": {
                    "selector": ".slds-button__icon_large",
                    "restrict": ".slds-button__icon",
                    "modifier": true,
                    "group": "icon-size"
                  },
                  "id": ".slds-button__icon_large",
                  "restrictees": []
                },
                {
                  "description": "Small size button icon svg",
                  "annotations": {
                    "selector": ".slds-button__icon_small",
                    "restrict": ".slds-button__icon",
                    "modifier": true,
                    "group": "icon-size"
                  },
                  "id": ".slds-button__icon_small",
                  "restrictees": []
                },
                {
                  "description": "x-small size button icon svg",
                  "annotations": {
                    "selector": ".slds-button__icon_x-small",
                    "restrict": ".slds-button__icon",
                    "modifier": true,
                    "group": "icon-size"
                  },
                  "id": ".slds-button__icon_x-small",
                  "restrictees": []
                }
              ],
              "showcase": [
                {
                  "title": "examples",
                  "items": [
                    {
                      "id": "icon-right",
                      "label": "Neutral with right icon"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "neutral",
                  "label": "Neutral"
                },
                {
                  "id": "brand",
                  "label": "Brand"
                },
                {
                  "id": "destructive",
                  "label": "Destructive"
                },
                {
                  "id": "success",
                  "label": "Success"
                },
                {
                  "id": "disabled",
                  "label": "Disabled"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "dueling-picklist": {
      "description": "#### Accessibility\nThis component is essentially 2 ARIA listboxes side by side, so we follow the [ARIA practices guide](https://www.w3.org/TR/wai-aria-practices/#Listbox) to help implement their interaction in an accessible way. Some additional details, supplementary to the ARIA guide include:\n\n**Notable attributes**\n- `aria-multiselectable=\"true\"` should be set on each listbox\n- `aria-selected` should be placed on each `role=\"option`, and only set to `true` when selected\n- `aria-labelledby` is used to identify the list to the user and should point to the list label\n- `aria-describedby` is used to provide operation instructions for the Drag and Drop interaction\n\n- *Keyboard navigation**\n- Each list is a tab stop. This provides identification and operation instruction as provided by `aria-describedby` and `aria-labelledby`. State of the overall list is also provided, including total number and number of selected options in the list when focused.\n- Because we support drag and drop re-ordering, we implement the second multi-select keyboard model.\n  - Up and Down arrows move focus _and_ selection, with `aria-selected=\"true\"`\n  - `shift + up` and `shift + down` moved focus and creates addition selections\n  - `ctrl + down` or `ctrl + up` moves focus but selection remains where it is\n  - `ctrl + space` toggles selection on the focused option, in addition to previous selections\n  - `ctrl + a` selects all options in the list\n  - `cmd/ctrl + right` and `cmd/ctrl + left` Moves selected items between lists\n  - `space` toggles \"Drag and Drop\" mode. When in \"Drag and Drop\" mode:\n    - Up and Down arrows move the selected items _within_ the current list\n\n**Updating Operation and State**\n- As a user interacts with the component, pay close attention to the content of the `aria-live` region and the `option-drag-label` assistive text. This is to provide clear instruction to the user on how to proceed, and what has happened in each State the component will be in",
      "annotations": {
        "summary": "Dueling picklist are used to move options between two lists. The list options can be re-ordered.",
        "name": "dueling-picklist",
        "support": "prototype",
        "base": true,
        "role": "listbox",
        "type": "data-entry",
        "category": "experience",
        "s1": "false",
        "selector": ".slds-dueling-list"
      },
      "id": "dueling-picklist",
      "restrictees": [
        {
          "description": "A dueling picklist inherits styles from the listbox component",
          "annotations": {
            "summary": "Initializes a dueling picklist",
            "name": "base",
            "selector": ".slds-dueling-list",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Handles the layout of the dueling picklist",
                "selector": ".slds-dueling-list__column",
                "restrict": ".slds-dueling-list div"
              },
              "id": ".slds-dueling-list__column",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Bounding visual container for listbox of options",
                "selector": ".slds-dueling-list__options",
                "restrict": ".slds-dueling-list div"
              },
              "id": ".slds-dueling-list__options",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "multi-select-selected-item",
                  "label": "Selected Item"
                },
                {
                  "id": "multi-select-multi-selected-items",
                  "label": "Multiple Selected Items"
                },
                {
                  "id": "multi-select-grabbed",
                  "label": "Grabbed"
                },
                {
                  "id": "multi-select-moved-in",
                  "label": "Moved in list"
                },
                {
                  "id": "multi-select-dropped",
                  "label": "Dropped"
                },
                {
                  "id": "multi-select-moved-to",
                  "label": "Moved to list"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "cards": {
      "description": "To initialize a card, apply the `.slds-card` class to a containing `<article>`.\nA card is made up of three sections, a header, a body, and a footer.\nThe card header will get the `.slds-card__header` class.\nThe card body will get the `.slds-card__body` class. The card footer will\nget the `.slds-card__footer` class.",
      "annotations": {
        "summary": "Cards are used to apply a container around a related grouping of information.",
        "layout": "responsive",
        "name": "cards",
        "support": "dev-ready",
        "base": true,
        "role": "presentation",
        "type": "data-display, layout",
        "category": "structure",
        "selector": ".slds-card"
      },
      "id": "cards",
      "restrictees": [
        {
          "description": "The base card is used primarily on desktop within a &ldquo;wide&rdquo; column\nor &ldquo;main content area&rdquo;, which uses two-thirds of the viewport.\nIn addition, the `.slds-card` class is used for layout purposes\nwhen a card has an adjacent card, those proceeding the initial will provide margin\nto give the cards spacing between each other.",
          "annotations": {
            "summary": "Initializes card",
            "name": "base",
            "selector": ".slds-card",
            "restrict": "article, div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Initializes card header",
              "annotations": {
                "selector": ".slds-card__header",
                "restrict": ".slds-card div"
              },
              "id": ".slds-card__header",
              "restrictees": []
            },
            {
              "description": "Initializes card body",
              "annotations": {
                "selector": ".slds-card__body",
                "restrict": ".slds-card div"
              },
              "id": ".slds-card__body",
              "restrictees": []
            },
            {
              "description": "Initializes card footer",
              "annotations": {
                "selector": ".slds-card__footer",
                "restrict": ".slds-card footer"
              },
              "id": ".slds-card__footer",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "empty",
                  "label": "Empty"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "related-list-table",
                  "label": "With data-table"
                },
                {
                  "id": "related-list-tiles",
                  "label": "With tiles"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "checkbox": {
      "description": "The ability to style checkboxes with CSS varies across browsers.\nTo ensure that checkboxes look the same everywhere, we use a custom DOM.\nPay close attention to the markup, because all elements must exist for the\nstyles to work.\n\n#### Accessibility\n\nGroups of checkboxes should be marked up using the fieldset and legend\nelement. This helps someone using assistive technology to understand the\nquestion they're answering with the group of checkboxes. The fieldset is\nplaced around the whole group and the legend contains the question.\n\nCustom checkboxes are created by applying the `.slds-checkbox` class to\na `<label>` element. To remain accessible to all user agents, place\n`<input>` with `type=\"checkbox\"` inside the `<label>` element.  The `<input>`\nis then visually hidden, and the styling is placed on a span with\nthe `.slds-checkbox_faux` class. The styling of the span changes based\non whether the checkbox is selected or focused by using a pseudo-element.\nA second span with `.slds-form-element__label` contains the label text.\n\nWhen a single checkbox is required, `<div class=\"slds-checkbox\">` should\nget `<abbr class=\"required\" title=\"required\">*</abbr>` added to the DOM,\ndirectly before the `<input type=\"checkbox\" />` for visual indication\nthat the checkbox is required.\n\nWhen a checkbox group is required, the `<fieldset>` should receive the\nclass `.slds-is-required`. The `<legend>` should then get\n`<abbr class=\"required\" title=\"required\">*</abbr>` added to the DOM for\nvisual indication that the checkbox group is required.\n\nAs SLDS checkboxes rely on the :checked psuedo selector, and the\nindeterminate state is only accessible via JavaScript, the use of a\nCSS class on the input will be necessary to implement this in SLDS.\nUse JavaScript to add the class when the indeterminate property is set to\ntrue on the input.\n\nThe following JavaScript demonstrates how to set a checkbox to be indeterminate:\n```js\nvar checkbox = document.getElementById('checkbox-indeterminate-01');\ncheckbox.indeterminate = true;\n```",
      "annotations": {
        "summary": "A checkable input that communicates if an option is true, false or indeterminate",
        "base": true,
        "name": "checkbox",
        "selector": ".slds-checkbox",
        "support": "dev-ready",
        "category": "base",
        "type": "data-entry",
        "role": "checkbox"
      },
      "id": "checkbox",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes checkbox",
            "name": "base",
            "selector": ".slds-checkbox",
            "restrict": "span, label",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "indeterminate",
                  "label": "Indeterminate",
                  "script": "\n      var checkbox = document.getElementById('checkbox-indeterminate-01')\n      checkbox.indeterminate = true\n    "
                },
                {
                  "id": "required",
                  "label": "Required"
                },
                {
                  "id": "error",
                  "label": "Error"
                },
                {
                  "id": "disabled",
                  "label": "Disabled"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "group",
                  "label": "Group"
                },
                {
                  "id": "group-required",
                  "label": "Group Required"
                },
                {
                  "id": "group-error",
                  "label": "Group with error"
                },
                {
                  "id": "group-disabled",
                  "label": "Group Disabled"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "prompt": {
      "description": "A prompt uses the base modal component and then adds the class `.slds-modal_prompt` to the overall `.slds-modal`. The utilities > themes > colors class is placed on the `.slds-modal__head` to create the color of the header. In the example, we illustrate using `.slds-theme_error`. The class `.slds-theme_alert-texture` should be applied to create the striped gradient. The `.slds-modal__footer` receives the class `.slds-theme_default`.\n\n#### Accessibility\n\nPrompt notifications are similar to modals, in that they are a focus trap, but they should take a slightly different `role` of `alertdialog` to indicate their severity. Like modals they should be labelled by their headings, but additonally they should be desscribed by the message details of the prompt.\n\nThe element containing the prompt message should be the target focus of the browser when it is displayed, which is why we add `tab-index=\"0\"` to `slds-modal__container`.\n\nThere is no requirement for a close button, as the confirmation button should be used to dismiss the prompt, along with the usual Esc key dismissal.\n\n**Expected markup (same as Modals, but with the following differences):**\n- Modal has `role=\"alertdialog\"`\n- Modal has an `aria-describedby` attribute that matches the id of the modal message container.\n- Modal message container container should have `tab-index=\"0\"`\n\n**Expected keyboard interaction (sme as Modal, with the addition of):**\n- Modal message container should take initial focus",
      "annotations": {
        "summary": "Prompt notice grabs the user’s attention & alert them of system-related issues/updates.",
        "base": true,
        "name": "prompt",
        "selector": ".slds-modal_prompt",
        "support": "dev-ready",
        "category": "experience",
        "type": "messaging",
        "role": "alert"
      },
      "id": "prompt",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes Prompt style notification",
            "name": "base",
            "selector": ".slds-modal_prompt",
            "restrict": ".slds-modal",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "path": {
      "description": "#### Accessibility\n\nThis component importantly changes role depending on what state it is in. If a Sales Path comes with Stage Coaching information, this pattern lends itself perfectly to being a traditional Tab Set. As you navigate the Sales Stages, it&rsquo;s associated content changes with it.\n\nOn the other hand, if a Sales Path doesn&rsquo;t have Stage Coaching information, we can no longer use the Tab Set role, as we would effectively be misleading our users because each Tab has no associated content. This may lead to users trying to find absent content. In this situation, this component is much more suited to being a Listbox component.\n\nThe markup structure is identical, just some attributes change their values.\n\n<div class=\"slds-scrollable--x slds-p-bottom--large\">\n  <table class=\"slds-table slds-table--bordered slds-max-medium-table--stacked slds-no-row-hover\">\n    <thead>\n      <tr class=\"site-text-heading--label\">\n        <th class=\"slds-theme--shade\" scope=\"col\">DOM Node</th>\n        <th class=\"slds-theme--shade\" scope=\"col\">Without Coaching</th>\n        <th class=\"slds-theme--shade\" scope=\"col\">With Coaching</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <th class=\"slds-align-top\" scope=\"row\">\n          <code>.slds-tabs_path__nav</code>\n        </th>\n        <td class=\"slds-cell-wrap slds-align-top\">\n          <code>role=\"listbox\"</code>\n        </td>\n        <td class=\"slds-cell-wrap slds-align-top\">\n          <code>role=\"tabset\"</code>\n        </td>\n      </tr>\n      <tr>\n        <th class=\"slds-align-top\" scope=\"row\">\n          <code>.slds-tabs_path__link</code>\n        </th>\n        <td class=\"slds-cell-wrap slds-align-top\">\n          <code>role=\"option\"</code>\n        </td>\n        <td class=\"slds-cell-wrap slds-align-top\">\n          <code>role=\"tab\"</code>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n**Notable Attributes - Without Coaching**\n- `aria-orientation=\"horizontal\"` should be applied to the `slds-tabs_path__nav` element to indicate to the user to use horizontal navigation\n- `aria-selected=\"true\"` should be applied to the selected Sales Stage as you navigate through the Stages\n\n**Notable Attributes - With Coaching**\n- When the Stage Coaching is not visible, `aria-expanded=\"false\"` should be set on each `slds-tabs_path__link` Tab\n- When the Stage Coaching is visible, `aria-expanded` should be set to `true`\n- `aria-selected=\"true\"` is used to describe the currently active `slds-tabs_path__link` Tab, not the Stage the Sale is currently set to\n\n**Keyboard navigation**\n- For both with and without Stage Coaching variants, the following keyboard navigation applies\n- `left` and `right` arrow keys move focus _and_ selection, with `aria-selected=\"true\"`",
      "annotations": {
        "summary": "A process component communicates to the user the progress of a particular process.",
        "base": true,
        "name": "path",
        "selector": ".slds-path-coach",
        "support": "dev-ready",
        "category": "feature",
        "type": "process",
        "role": "tablist"
      },
      "id": "path",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-path-coach",
            "restrict": "div",
            "required": true,
            "variant": true,
            "s1": "false"
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Creates the container for tabs in a path",
              "annotations": {
                "selector": ".slds-tabs_path",
                "restrict": ".slds-path-coach div",
                "required": true
              },
              "id": ".slds-tabs_path",
              "restrictees": [
                {
                  "description": "Horizontal list of stages in path component",
                  "annotations": {
                    "selector": ".slds-tabs_path__nav",
                    "restrict": ".slds-tabs_path ul",
                    "required": true
                  },
                  "id": ".slds-tabs_path__nav",
                  "restrictees": [
                    {
                      "description": "Individual stages of a path",
                      "annotations": {
                        "selector": ".slds-tabs_path__item",
                        "restrict": ".slds-tabs_path__nav li",
                        "required": true
                      },
                      "id": ".slds-tabs_path__item",
                      "restrictees": [
                        {
                          "description": "Creates the completed stage of the path",
                          "annotations": {
                            "selector": ".slds-is-complete",
                            "restrict": ".slds-tabs_path__item",
                            "modifier": true
                          },
                          "id": ".slds-is-complete",
                          "restrictees": []
                        },
                        {
                          "description": "Creates the current stage of the path",
                          "annotations": {
                            "selector": ".slds-is-current",
                            "restrict": ".slds-tabs_path__item",
                            "modifier": true
                          },
                          "id": ".slds-is-current",
                          "restrictees": []
                        },
                        {
                          "description": "Creates the incomplete stage of the path",
                          "annotations": {
                            "selector": ".slds-is-incomplete",
                            "restrict": ".slds-tabs_path__item",
                            "modifier": true
                          },
                          "id": ".slds-is-incomplete",
                          "restrictees": []
                        },
                        {
                          "description": "Creates lost stage of the path",
                          "annotations": {
                            "selector": ".slds-is-lost",
                            "restrict": ".slds-tabs_path__item",
                            "notes": "This class must be added to the \"closed\" stage with JS when the Sales Path is over by losing the opportunity",
                            "modifier": true
                          },
                          "id": ".slds-is-lost",
                          "restrictees": []
                        },
                        {
                          "description": "Creates the active stage of the sales path",
                          "annotations": {
                            "selector": ".slds-is-active",
                            "restrict": ".slds-tabs_path__item",
                            "notes": "This class must be placed on the item programatically when the guidance section is used",
                            "modifier": true
                          },
                          "id": ".slds-is-active",
                          "restrictees": []
                        },
                        {
                          "description": "Creates success stage of the path",
                          "annotations": {
                            "selector": ".slds-is-won",
                            "restrict": ".slds-tabs_path__item",
                            "modifier": true
                          },
                          "id": ".slds-is-won",
                          "restrictees": []
                        },
                        {
                          "description": "Creates actionable element inside of each path tab",
                          "annotations": {
                            "selector": ".slds-tabs_path__link",
                            "restrict": ".slds-tabs_path__item a",
                            "required": true
                          },
                          "id": ".slds-tabs_path__link",
                          "restrictees": [
                            {
                              "description": "Contains the name of the stage",
                              "annotations": {
                                "selector": ".slds-tabs_path__title",
                                "restrict": ".slds-tabs_path__link span",
                                "required": true
                              },
                              "id": ".slds-tabs_path__title",
                              "restrictees": []
                            },
                            {
                              "description": "Contains the check mark when the stage is completed",
                              "annotations": {
                                "selector": ".slds-tabs_path__stage",
                                "restrict": ".slds-tabs_path__link span",
                                "required": true
                              },
                              "id": ".slds-tabs_path__stage",
                              "restrictees": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "description": "Button that toggles visibility of stage's tabpanel",
              "annotations": {
                "selector": ".slds-path__trigger",
                "restrict": ".slds-path-coach button",
                "required": true
              },
              "id": ".slds-path__trigger",
              "restrictees": []
            },
            {
              "description": "Actionable button that invokes a completion of the path",
              "annotations": {
                "selector": ".slds-path__mark-complete",
                "restrict": ".slds-path-coach button",
                "required": true
              },
              "id": ".slds-path__mark-complete",
              "restrictees": []
            },
            {
              "description": "Actionable button that invokes a current stage of the path",
              "annotations": {
                "selector": ".slds-path__mark-current",
                "restrict": ".slds-path-coach button",
                "required": true
              },
              "id": ".slds-path__mark-current",
              "restrictees": []
            },
            {
              "description": "Tabpanel of each stage of the path",
              "annotations": {
                "selector": ".slds-tabs_path__content",
                "restrict": ".slds-path-coach div",
                "required": true
              },
              "id": ".slds-tabs_path__content",
              "restrictees": [
                {
                  "description": "Key field section of expanded tabpanel",
                  "annotations": {
                    "selector": ".slds-coach__keys",
                    "restrict": ".slds-tabs_path__content div",
                    "required": true
                  },
                  "id": ".slds-coach__keys",
                  "restrictees": [
                    {
                      "description": "Name or label of name/value pair inside of key fields section",
                      "annotations": {
                        "selector": ".slds-coach__item",
                        "restrict": ".slds-coach__keys dt",
                        "required": true
                      },
                      "id": ".slds-coach__item",
                      "restrictees": []
                    },
                    {
                      "description": "Value of name/value pair inside of key fields section",
                      "annotations": {
                        "selector": ".slds-coach__value",
                        "restrict": ".slds-coach__keys dd",
                        "required": true
                      },
                      "id": ".slds-coach__value",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "Guidance section of expanded tabpanel",
                  "annotations": {
                    "selector": ".slds-coach__guidance",
                    "restrict": ".slds-tabs_path__content div",
                    "required": true
                  },
                  "id": ".slds-coach__guidance",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "with-coaching",
                  "label": "With Coaching Available"
                },
                {
                  "id": "current-coaching",
                  "label": "Current Stage Coaching Visible"
                },
                {
                  "id": "different-coaching",
                  "label": "With Different Stage Selected"
                },
                {
                  "id": "lost",
                  "label": "Lost"
                },
                {
                  "id": "won",
                  "label": "Won"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "tiles": {
      "description": "Tiles are setup to be displayed with or without an image/icon. The default\npattern for tiles has an image/icon, a detail body which contains a list of\ninformation and action overflow menu dropdown. The detail body list, by\ndefault, comes as a name/value pairing but can be swapped out with a string\nof text or an inline horizontal list.\n\nTiles can have different groupings of information based on its context.\nPay close attention to the markup, as each tile layout is constructed differently.",
      "annotations": {
        "summary": "A tile is a grouping of related information associated with a record.",
        "base": true,
        "name": "tiles",
        "selector": ".slds-tile",
        "support": "dev-ready",
        "category": "structure",
        "type": "data-display"
      },
      "id": "tiles",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes tile",
            "name": "base",
            "selector": ".slds-tile",
            "restrict": "article",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Use class if card consumes any form of a tile",
              "annotations": {
                "selector": ".slds-card__tile",
                "restrict": ".slds-tile"
              },
              "id": ".slds-card__tile",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-tile__detail",
                "restrict": ".slds-tile div"
              },
              "id": ".slds-tile__detail",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-tile__meta",
                "restrict": ".slds-tile div"
              },
              "id": ".slds-tile__meta",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "examples",
              "items": [
                {
                  "id": "with-action",
                  "label": "Default with actions"
                },
                {
                  "id": "with-icon",
                  "label": "With icon"
                },
                {
                  "id": "with-avatar",
                  "label": "With avatar"
                },
                {
                  "id": "task",
                  "label": "Task"
                },
                {
                  "id": "article",
                  "label": "Article"
                },
                {
                  "id": "article-liker-bar",
                  "label": "Article With like bar"
                },
                {
                  "id": "board",
                  "label": "Board"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "modals": {
      "description": "Default modals are used in the vast majority of cases. They are as wide as\n50% of the viewport, but include a minimum and maximum width to avoid going\ntoo narrow or too wide.\n\nModals always have an equal amount of space at the top and bottom to account\nfor the height of the close button.\n\nModals grow according to how much content is within, but once the modal\nreaches full height (including the previously mentioned space on top and\nbottom), the content area will begin to scroll. (This scrolling is currently\nnot available in Salesforce1 Mobile.)\n\nModals can have a tagline in the header, simply by adding a paragraph after\nthe heading.\n\nBy default, the content area of the modal does not have spacing. This allows\nfor content such as Tables to be full-width to the modal. To get spacing\nwhen you need it, apply a padding utility (`.slds-p-around_medium`).\n\nModal headers can also have taglines, if you need to provide additional\ncontext. This tagline can also contain links, or the whole thing could be a\nlink in and of itself.\n\nLarge modals call for large amounts of content. The height follows the same\nbehavior and styles of other modals. The width changes to 90% of the viewport,\nand uses a wider minimum width and no maximum width.\n\nThese are modals that require a linearly directional paradigm of navigation\n(“Next” and “Back”, etc.) — the actionable buttons in the modal footer live\non the left and right, rather than all on the right. These can either be\nwithin a large or default modal, depending on the use case.\n\n#### Accessibility\n\nModals, by definition, trap focus. This means that if a user presses Tab or\nShift+Tab while their keyboard focus is in the modal, their focus should\nstay in and cycle through the modal’s content. Focus shouldn’t return to\nthe underlying page until the user presses the Esc key, presses an explicit\n“Cancel” or “Close” button in the modal, or performs another action that\ncloses the modal.\n\n**Expected markup:**\n\n- Modal has `role=\"dialog\"`\n- When the modal is open, everything behind it has HTML attribute `aria-hidden=\"true\"`, so assistive technology won't read out the underlying page. The best way to do this is to give the modal and the page separate wrapper elements and toggle `aria-hidden=\"true\"`/`aria-hidden=\"false\"` on the main page's wrapper depending on whether or not the modal is open.\n- Modal contains an HTML heading\n- Modal has an `aria-labelledby` attribute whose value is the id of the modal’s heading\n\n**Expected keyboard interactions:**\n\n- Esc key closes the modal and moves focus to whatever triggered the modal to open\n- Tab key at bottom of modal cycles focus back to first focusable element at top of modal\n- Shift+Tab keys at top of modal cycle focus back to last focusable element at bottom of modal\n- Enter key submits modal’s form data, if applicable",
      "annotations": {
        "summary": "Modals are used to display content in a layer above the app. This paradigm is used in cases such as the creation or editing of a record, as well as various types of messaging and wizards.",
        "name": "modals",
        "support": "dev-ready",
        "base": true,
        "role": "modal-dialog",
        "type": "layout",
        "category": "structure",
        "s1": "false",
        "selector": ".slds-modal"
      },
      "id": "modals",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-modal",
            "restrict": "section",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Centers and sizes the modal horizontally and confines modal within viewport height",
              "annotations": {
                "selector": ".slds-modal__container",
                "restrict": ".slds-modal div",
                "notes": "This should be nested immediately inside `.slds-modal` with nothing else nested on the same level.",
                "required": true
              },
              "id": ".slds-modal__container",
              "restrictees": []
            },
            {
              "description": "Creates the Modal Header container.",
              "annotations": {
                "selector": ".slds-modal__header",
                "restrict": ".slds-modal header",
                "notes": "This should be nested immediately inside `.slds-modal__container` as the first element.",
                "required": true
              },
              "id": ".slds-modal__header",
              "restrictees": [
                {
                  "description": "Use when modal header has no content",
                  "annotations": {
                    "selector": ".slds-modal__header_empty",
                    "restrict": ".slds-modal__header"
                  },
                  "id": ".slds-modal__header_empty",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Creates the scrollable content area for the modal.",
              "annotations": {
                "selector": ".slds-modal__content",
                "restrict": ".slds-modal div",
                "required": true
              },
              "id": ".slds-modal__content",
              "restrictees": []
            },
            {
              "description": "Creates the shaded menu area for the modal.",
              "annotations": {
                "selector": ".slds-modal__menu",
                "restrict": ".slds-modal div",
                "notes": "Either `.slds-modal__menu` or `.slds-modal__content` must be used. If you’re using this class, you do not need the other. This should be nested immediately inside `.slds-modal_container` and immediately after `.slds-modal__header`.",
                "required": true
              },
              "id": ".slds-modal__menu",
              "restrictees": []
            },
            {
              "description": "Creates the Modal Footer container.",
              "annotations": {
                "selector": ".slds-modal__footer",
                "restrict": ".slds-modal footer",
                "notes": "This should be nested immediately inside `.slds-modal_container` and immediately after `.slds-modal__container`. Nothing should follow it. Note that by default, elements will be aligned to the right.",
                "required": true
              },
              "id": ".slds-modal__footer",
              "restrictees": [
                {
                  "description": "Makes buttons inside the footer spread to both left and right.",
                  "annotations": {
                    "selector": ".slds-modal__footer_directional",
                    "restrict": ".slds-modal__footer",
                    "notes": "This is only needed when you have two buttons that indicate a back and forward navigation.",
                    "modifier": true,
                    "group": "direction"
                  },
                  "id": ".slds-modal__footer_directional",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Positions the close button to the top right outside of the modal.",
              "annotations": {
                "selector": ".slds-modal__close",
                "restrict": ".slds-modal button",
                "notes": "Either `.slds-modal__content` or `.slds-modal__menu` must be used. If you’re using this class, you do not need the other. This should be nested immediately inside `.slds-modal_container` and immediately after `.slds-modal__header`.",
                "required": true
              },
              "id": ".slds-modal__close",
              "restrictees": []
            },
            {
              "description": "Widens the modal to take more horizontal space",
              "annotations": {
                "selector": ".slds-modal_large",
                "restrict": ".slds-modal",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-modal_large",
              "restrictees": []
            },
            {
              "description": "Allows the modal to be visible.",
              "annotations": {
                "selector": ".slds-fade-in-open",
                "restrict": ".slds-modal",
                "notes": "Apply this class to a modal with JavaScript to make it visible.",
                "modifier": true,
                "group": "animation"
              },
              "id": ".slds-fade-in-open",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-slide-up-open",
                "restrict": ".slds-modal",
                "modifier": true,
                "group": "animation"
              },
              "id": ".slds-slide-up-open",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-slide-up-saving",
                "restrict": ".slds-modal",
                "modifier": true,
                "group": "animation"
              },
              "id": ".slds-slide-up-saving",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-slide-down-cancel",
                "restrict": ".slds-modal",
                "modifier": true,
                "group": "animation"
              },
              "id": ".slds-slide-down-cancel",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Initializes Prompt style notification",
                "name": "base",
                "selector": ".slds-modal_prompt",
                "restrict": ".slds-modal",
                "required": true,
                "variant": true
              },
              "id": "base",
              "restrictees": [],
              "showcase": [
                {
                  "title": "examples",
                  "items": [
                    {
                      "id": "taglines",
                      "label": "Taglines"
                    },
                    {
                      "id": "headless",
                      "label": "Header empty"
                    },
                    {
                      "id": "footless",
                      "label": "Footer removed"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Creates the shaded backdrop used behind the modal.",
              "annotations": {
                "selector": ".slds-backdrop",
                "restrict": ".slds-modal ~ div",
                "notes": "This should follow after the `.slds-modal` as an empty element.",
                "required": true
              },
              "id": ".slds-backdrop",
              "restrictees": [
                {
                  "description": "Allows the backdrop to be visible.",
                  "annotations": {
                    "selector": ".slds-backdrop_open",
                    "restrict": ".slds-backdrop",
                    "notes": "Apply this class to a modal backdrop with JavaScript to make it visible.",
                    "modifier": true,
                    "required": true
                  },
                  "id": ".slds-backdrop_open",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "examples",
              "items": [
                {
                  "id": "taglines",
                  "label": "Taglines"
                },
                {
                  "id": "headless",
                  "label": "Header empty"
                },
                {
                  "id": "footless",
                  "label": "Footer removed"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "toast": {
      "description": "#### Accessibility\n\nNotifications should contain `role=\"alert\"` on the container to signal to\nassistive technology that they require the user’s immediate attention. Use a\nspan with `.slds-assistive-text` to let the user know what type of notification it is.",
      "annotations": {
        "summary": "Toast serves as a feedback & confirmation mechanism after the user takes an action.",
        "base": true,
        "name": "toast",
        "selector": ".slds-notify_container",
        "support": "dev-ready",
        "category": "experience",
        "type": "messaging",
        "role": "alert"
      },
      "id": "toast",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-notify_container",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Initializes toast notification",
              "annotations": {
                "selector": ".slds-notify_toast",
                "restrict": ".slds-notify_container div",
                "required": true
              },
              "id": ".slds-notify_toast",
              "restrictees": [
                {
                  "description": "Alert close button",
                  "annotations": {
                    "selector": ".slds-notify__close",
                    "restrict": ".slds-notify_toast button",
                    "required": true
                  },
                  "id": ".slds-notify__close",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "success",
                  "label": "Success"
                },
                {
                  "id": "warning",
                  "label": "Warning"
                },
                {
                  "id": "error",
                  "label": "Error"
                },
                {
                  "id": "error-with-details",
                  "label": "Error With Details"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "small",
                  "label": "Small Column"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "accordion": {
      "description": "",
      "annotations": {
        "summary": "An accordion allows a user to toggle the display of a section of content.",
        "base": true,
        "name": "accordion",
        "selector": ".slds-accordion",
        "support": "dev-ready",
        "category": "experience",
        "type": "expandable-panel"
      },
      "id": "accordion",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes an accordion list with more than one section that will have its display toggled by invoking an interaction on the summary title",
            "name": "base",
            "selector": ".slds-accordion",
            "restrict": "ul",
            "variant": true,
            "required": true,
            "support": "dev-ready"
          },
          "id": "base",
          "restrictees": [
            {
              "description": "List item for each accordion section",
              "annotations": {
                "selector": ".slds-accordion__list-item",
                "restrict": ".slds-accordion li",
                "required": true
              },
              "id": ".slds-accordion__list-item",
              "restrictees": []
            },
            {
              "description": "Each expandable panel inside of an accordion",
              "annotations": {
                "selector": ".slds-accordion__section",
                "restrict": ".slds-accordion section",
                "required": true
              },
              "id": ".slds-accordion__section",
              "restrictees": [
                {
                  "description": "Summary title for each expandable panel inside of an accordion",
                  "annotations": {
                    "selector": ".slds-accordion__summary",
                    "restrict": ".slds-accordion__section div",
                    "required": true
                  },
                  "id": ".slds-accordion__summary",
                  "restrictees": [
                    {
                      "description": "Actionable button inside of accordion summary that would toggle the visibility of each section",
                      "annotations": {
                        "selector": ".slds-accordion__summary-action",
                        "restrict": ".slds-accordion__summary button",
                        "required": true
                      },
                      "id": ".slds-accordion__summary-action",
                      "restrictees": [
                        {
                          "description": "Icon inside of actionable button within an accordion section",
                          "annotations": {
                            "selector": ".slds-accordion__summary-action-icon",
                            "restrict": ".slds-accordion__summary-action svg",
                            "required": true
                          },
                          "id": ".slds-accordion__summary-action-icon",
                          "restrictees": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "description": "Summary title for each expandable panel inside of an accordion",
                  "annotations": {
                    "selector": ".slds-accordion__summary-heading",
                    "restrict": ".slds-accordion__section h3",
                    "required": true
                  },
                  "id": ".slds-accordion__summary-heading",
                  "restrictees": []
                },
                {
                  "description": "Each expandable panel inside of an accordion",
                  "annotations": {
                    "selector": ".slds-accordion__content",
                    "restrict": ".slds-accordion__section div",
                    "required": true
                  },
                  "id": ".slds-accordion__content",
                  "restrictees": []
                },
                {
                  "description": "Toggle visibility of accordion section + rotate icon",
                  "annotations": {
                    "selector": ".slds-is-open",
                    "restrict": ".slds-accordion__section",
                    "modifier": true
                  },
                  "id": ".slds-is-open",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "section-one-open",
                  "label": "Section one open"
                },
                {
                  "id": "section-two-open",
                  "label": "Section two open"
                },
                {
                  "id": "section-three-open",
                  "label": "Section three open"
                },
                {
                  "id": "styled",
                  "label": "Styled"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "data-tables": {
      "description": "To initialize a data table, apply the `slds-table` class to the\n`table` element. This class creates a `table`\nwith formatted cells and allows you to use data table utilities.\n\n#### Accessibility\nTo create an accessible table, the top row of column headers (`th`)\nare placed in a `thead`. Each one receives the `scope=\"col\"`\nattribute. The first non-actionable (meaning that doesn't contain a checkbox\nor menu) column in each row should be marked as a `th` with a\n`scope=\"row\"` attribute.",
      "annotations": {
        "summary": "Data tables are an enhanced version of an HTML table and are used to display tabular data.",
        "layout": "adaptive",
        "name": "data-tables",
        "support": "dev-ready",
        "base": true,
        "role": "grid",
        "type": "data-display, data-entry, navigation",
        "category": "structure",
        "s1": "false",
        "selector": ".slds-table"
      },
      "id": "data-tables",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes data table",
            "name": "base",
            "selector": ".slds-table",
            "restrict": "table",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Default Table Row Hover",
              "annotations": {
                "selector": ".slds-no-row-hover",
                "restrict": ".slds-table",
                "modifier": true
              },
              "id": ".slds-no-row-hover",
              "restrictees": []
            },
            {
              "description": "Selected Table Row + Hover",
              "annotations": {
                "selector": ".slds-is-selected",
                "restrict": ".slds-table tr",
                "modifier": true
              },
              "id": ".slds-is-selected",
              "restrictees": []
            },
            {
              "description": "By default, nowrap is applied",
              "annotations": {
                "selector": ".slds-cell-wrap",
                "restrict": ".slds-table th, .slds-table td",
                "modifier": true
              },
              "id": ".slds-cell-wrap",
              "restrictees": []
            },
            {
              "description": "Use to add a left padding buffer to cells",
              "annotations": {
                "selector": ".slds-cell-buffer_left",
                "restrict": ".slds-table th, .slds-table td",
                "modifier": true
              },
              "id": ".slds-cell-buffer_left",
              "restrictees": []
            },
            {
              "description": "Use to add a right padding buffer to cells",
              "annotations": {
                "selector": ".slds-cell-buffer_right",
                "restrict": ".slds-table th, .slds-table td",
                "modifier": true
              },
              "id": ".slds-cell-buffer_right",
              "restrictees": []
            },
            {
              "description": "Focus state on a cell",
              "annotations": {
                "selector": ".slds-has-focus",
                "restrict": ".slds-table th, .slds-table td",
                "modifier": true
              },
              "id": ".slds-has-focus",
              "restrictees": []
            },
            {
              "description": "Add left and right padding to the first and last cells of a table",
              "annotations": {
                "selector": ".slds-table_cell-buffer",
                "restrict": ".slds-table",
                "required": true,
                "modifier": true
              },
              "id": ".slds-table_cell-buffer",
              "restrictees": []
            },
            {
              "description": "Add vertical borders to a table",
              "annotations": {
                "selector": ".slds-table_bordered",
                "restrict": ".slds-table",
                "modifier": true
              },
              "id": ".slds-table_bordered",
              "restrictees": []
            },
            {
              "description": "Add column borders",
              "annotations": {
                "selector": ".slds-table_col-bordered",
                "restrict": ".slds-table",
                "modifier": true
              },
              "id": ".slds-table_col-bordered",
              "restrictees": []
            },
            {
              "description": "Add alternating strips to rows",
              "annotations": {
                "selector": ".slds-table_striped",
                "restrict": ".slds-table",
                "modifier": true
              },
              "id": ".slds-table_striped",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Set table to use fixed layout for width and truncation purposes",
                "name": "advanced",
                "selector": ".slds-table_fixed-layout",
                "restrict": ".slds-table",
                "variant": true
              },
              "id": "advanced",
              "restrictees": [
                {
                  "description": "If the column is sortable than lets handle the actionable\nregion of the `<th>` cell",
                  "annotations": {
                    "selector": ".slds-is-sortable",
                    "restrict": ".slds-table_fixed-layout th"
                  },
                  "id": ".slds-is-sortable",
                  "restrictees": [
                    {
                      "description": "Icon inside sortable th",
                      "annotations": {
                        "selector": ".slds-is-sortable__icon",
                        "restrict": ".slds-is-sortable .slds-icon"
                      },
                      "id": ".slds-is-sortable__icon",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "Actionable area inside th",
                  "annotations": {
                    "selector": ".slds-th__action",
                    "restrict": ".slds-table_fixed-layout th div, .slds-table_fixed-layout th a"
                  },
                  "id": ".slds-th__action",
                  "restrictees": [
                    {
                      "description": "Allows for alignment of form element, such as a checkbox",
                      "annotations": {
                        "selector": ".slds-th__action_form",
                        "restrict": ".slds-th__action"
                      },
                      "id": ".slds-th__action_form",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "Active state of sorted column",
                  "annotations": {
                    "selector": ".slds-is-sorted",
                    "restrict": ".slds-table_fixed-layout th"
                  },
                  "id": ".slds-is-sorted",
                  "restrictees": [
                    {
                      "description": "Change direction of arrow",
                      "annotations": {
                        "name": "sorted-ascending",
                        "selector": ".slds-is-sorted_asc",
                        "restrict": ".slds-is-sorted",
                        "modifier": true
                      },
                      "id": "sorted-ascending",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "Resizable data table columns",
                  "annotations": {
                    "selector": ".slds-table_resizable-cols",
                    "restrict": ".slds-table_fixed-layout"
                  },
                  "id": ".slds-table_resizable-cols",
                  "restrictees": [
                    {
                      "description": "Provide an indicator that resizing is available",
                      "annotations": {
                        "selector": ".slds-is-resizable",
                        "restrict": ".slds-table_resizable-cols th"
                      },
                      "id": ".slds-is-resizable",
                      "restrictees": [
                        {
                          "description": "Resizable handle",
                          "annotations": {
                            "selector": ".slds-resizable",
                            "restrict": ".slds-is-resizable div"
                          },
                          "id": ".slds-resizable",
                          "restrictees": [
                            {
                              "description": "Grab handle to resize column",
                              "annotations": {
                                "selector": ".slds-resizable__handle",
                                "restrict": ".slds-resizable span"
                              },
                              "id": ".slds-resizable__handle",
                              "restrictees": [
                                {
                                  "description": "Grab handle divider indicator when resizing column",
                                  "annotations": {
                                    "selector": ".slds-resizable__divider",
                                    "restrict": ".slds-resizable__handle span"
                                  },
                                  "id": ".slds-resizable__divider",
                                  "restrictees": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "description": "Inline edit plugin for advanced tables\n\n#### Accessibility\nThe Advanced Data Table and Inline Edit Data Table are based on the semantics,\nroles and interaction model of the [ARIA Grid](http://w3c.github.io/aria/practices/aria-practices.html#grid).\nIn SLDS we overlay the ARIA Grid on top of native HTML table semantics.\n\nThe role of Grid comes with 2 distinct modes, Navigation mode and Actionable\nmode. Both come with very specific keyboard interaction modals. Navigation\nmode is the default mode of the Grid.\n\n**Navigation Mode**\n- Tabbing into the grid focuses the first data cell in the table.\n- The second tab key press takes the user focus out of the grid onto the next focusable element on the page.\n- Once the user has tabbed out of the grid, tabbing back into the grid will return focus to the last cell the user was focused on.\n- Navigation in the grid is accomplished via the arrow keys.\n- No actionable items in cell contents are focusable.\n- Pressing the Enter key on a chosen grid cell, places the entire Grid into Actionable mode.\n\n**Actionable Mode**\n- Once in Actionable mode, all focusable items in the entire grid can be tabbed to.\n- Arrow navigation still takes the user cell to cell in any direction, but focuses on the first actionable item in the cell, if there is one.\n- Pressing the Escape key exits Actionable mode, placing the user back into Navigation mode, keeping the users cursor on the same cell they were focused in.\n- When interacting with a component in a cell, such as a Menu, that also uses the Escape key as an exit action, pressing Escape will take the user back to the triggering element in the current cell. A subsequent press of Escape will return the user to Navigation mode.\n\nFor the purposes of these docs, the Default state of Inline Edit is\nrepresentative of Navigation mode, all other states are assumed to be in Actionable Mode.",
                  "annotations": {
                    "summary": "Initiates inline-edit mode for data-tables",
                    "name": "inline-edit",
                    "selector": ".slds-table_edit",
                    "restrict": ".slds-table_fixed-layout",
                    "required": true,
                    "variant": true
                  },
                  "id": "inline-edit",
                  "restrictees": [
                    {
                      "description": "Cell that has error icon appear within",
                      "annotations": {
                        "selector": ".slds-cell-error",
                        "restrict": ".slds-table_edit td",
                        "required": true
                      },
                      "id": ".slds-cell-error",
                      "restrictees": []
                    },
                    {
                      "description": "Informs a table cell that it has editing capabilities",
                      "annotations": {
                        "selector": ".slds-cell-edit",
                        "restrict": ".slds-table_edit th, .slds-table_edit td"
                      },
                      "id": ".slds-cell-edit",
                      "restrictees": [
                        {
                          "description": "Informs a cell that it has been edited but not saved",
                          "annotations": {
                            "selector": ".slds-is-edited",
                            "restrict": ".slds-cell-edit",
                            "modifier": true
                          },
                          "id": ".slds-is-edited",
                          "restrictees": []
                        },
                        {
                          "description": "Informs a cell that it has an error inside of it",
                          "annotations": {
                            "selector": ".slds-has-error",
                            "restrict": ".slds-cell-edit",
                            "modifier": true
                          },
                          "id": ".slds-has-error",
                          "restrictees": []
                        },
                        {
                          "description": "",
                          "annotations": {
                            "selector": ".slds-cell-edit__button",
                            "restrict": ".slds-cell-edit button"
                          },
                          "id": ".slds-cell-edit__button",
                          "restrictees": []
                        }
                      ]
                    },
                    {
                      "description": "Handles children of the table where we don't want any focusable cells",
                      "annotations": {
                        "selector": ".slds-no-cell-focus",
                        "restrict": ".slds-table_edit",
                        "modifier": true
                      },
                      "id": ".slds-no-cell-focus",
                      "restrictees": []
                    }
                  ],
                  "showcase": [
                    {
                      "title": "states",
                      "items": [
                        {
                          "id": "with-link",
                          "label": "Cell focused - Link",
                          "script": "\n      document.getElementById('link-01').focus()\n    "
                        },
                        {
                          "id": "checkbox",
                          "label": "Cell focused - Checkbox",
                          "script": "\n      document.getElementById('checkbox-01').focus()\n    "
                        },
                        {
                          "id": "focused",
                          "label": "Cell focused",
                          "script": "\n      document.getElementById('button-01').focus()\n    "
                        },
                        {
                          "id": "edit",
                          "label": "Cell edit",
                          "script": "\n      document.getElementById('company-01').focus()\n      document.getElementById('company-01').select()\n    "
                        },
                        {
                          "id": "required",
                          "label": "Cell edit — Required",
                          "script": "\n      document.getElementById('company-01').focus()\n      document.getElementById('company-01').select()\n    "
                        },
                        {
                          "id": "error",
                          "label": "Cell edit — Error",
                          "script": "\n      document.getElementById('company-01').focus()\n      document.getElementById('company-01').select()\n    "
                        },
                        {
                          "id": "edited",
                          "label": "Cell edited"
                        },
                        {
                          "id": "row-error",
                          "label": "Error - Row level on save",
                          "script": "\n      document.getElementById('button-01').focus()\n    "
                        },
                        {
                          "id": "row-error-focused",
                          "label": "Error indicator - Focused",
                          "script": "\n      document.getElementById('error-01').focus()\n    "
                        },
                        {
                          "id": "header-cell-focused",
                          "label": "Header cell focused"
                        },
                        {
                          "id": "header-cell-marked",
                          "label": "Header cell marked"
                        }
                      ]
                    },
                    {
                      "title": "default",
                      "items": [
                        {
                          "id": "default"
                        }
                      ]
                    }
                  ]
                }
              ],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "row-selected",
                      "label": "Row Selected"
                    },
                    {
                      "id": "all-row-selected",
                      "label": "All Rows Selected"
                    },
                    {
                      "id": "sorted-column-asc",
                      "label": "Sorted Ascending"
                    },
                    {
                      "id": "sorted-column-desc",
                      "label": "Sorted Descending"
                    },
                    {
                      "id": "resized-column",
                      "label": "Column resized"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "data-table-striped-rows",
                  "label": "With striped rows"
                },
                {
                  "id": "data-table-no-hover",
                  "label": "With no row hovers"
                },
                {
                  "id": "data-table-vertical-borders",
                  "label": "With vertical borders"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "page-headers": {
      "description": "",
      "annotations": {
        "summary": "Page headers are used at the top of several page types. They use the `.slds-page-header` class as a base and are comprised of multiple components.",
        "base": true,
        "name": "page-headers",
        "selector": ".slds-page-header",
        "support": "dev-ready",
        "category": "structure",
        "type": "data-display",
        "role": "presentation"
      },
      "id": "page-headers",
      "restrictees": [
        {
          "description": "The page header is a masthead that contains the Title of the page, and supporting details. For large form factors, it may include actions.",
          "annotations": {
            "summary": "Initializes page header",
            "variant": true,
            "name": "base",
            "selector": ".slds-page-header",
            "restrict": "div",
            "support": "dev-ready"
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Page title (header text).",
              "annotations": {
                "selector": ".slds-page-header__title",
                "restrict": ".slds-page-header h1",
                "required": true
              },
              "id": ".slds-page-header__title",
              "restrictees": []
            },
            {
              "description": "The title for the Object Home page header is sorting component.\nThe `.slds-text-focus` class is placed on the media object that\ncontains the title and down icon to simulate a hover and\nfocus state of a link.\n\nThis component is created entirely of existing components\nlike grids, buttons, button groups, and\nicons.",
              "annotations": {
                "summary": "Initializes object home page header",
                "variant": true,
                "name": "object-home",
                "selector": ".slds-page-header_object-home",
                "restrict": ".slds-page-header",
                "support": "dev-ready"
              },
              "id": "object-home",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Vertical page header record home contains up to seven compact layout fields. They're contained in the `.slds-page-header__detail-row` div.\nThe heading does not truncate. This is typically used in more compact layouts where more vertical space is desired.",
              "annotations": {
                "summary": "Initializes vertical page header",
                "variant": true,
                "name": "record-home-vertical",
                "selector": ".slds-page-header_vertical",
                "restrict": ".slds-page-header",
                "support": "dev-ready"
              },
              "id": "record-home-vertical",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Page header record home contains up to four\ncompact layout fields. They're contained in the `.slds-page-header__detail-row` div.\nThat div contains the top and bottom spacing needed for this version of the page header.\n\nWhen text is truncated, the full text should be placed in\na tooltip on hover (currently shown in the title\nattribute). One line truncation is created by using the\n`.slds-truncate` class. Two line truncation must be achieved\nusing JavaScript.\n\nThe page header is located at the top of every record home. It includes the record title and compact layout for a record. Excluding the title, the page header displays 4 compact layout fields. Similar data types can be rolled up and be displayed as a single field.\n\n**Record Title**\n\n- Display Record Type icon to the left of the title\n- Record Type is displayed above the title\n- When required, follow action is displayed to the right of the record title\n- Display one line of text, truncate when the length conflicts with the page level actions\n\nAs shown in Field 3, web addresses and email addresses should be parsed and displayed as hyperlinks linking to the appropriate mailto: or web url. Do not modify the user's input, display as intended.\n\nWhen text is truncated, display full field text in browser tooltip on hover.\n\nDisplay addresses in two lines. Street address on first line, City, State and Postal Code on line 2. For lengthy addresses, truncate each line individually based on the available width of the area using the `.slds-truncate` class. Display the full address via browser tooltip.",
              "annotations": {
                "summary": "Bottom section containing record details",
                "variant": true,
                "name": "record-home",
                "selector": ".slds-page-header__detail",
                "restrict": ".slds-page-header div",
                "support": "dev-ready",
                "required": true
              },
              "id": "record-home",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Creates margins around the detail section of record home",
              "annotations": {
                "selector": ".slds-page-header__detail-row",
                "restrict": ".slds-page-header ul",
                "notes": "Only the record home page header contains this detail area",
                "required": true
              },
              "id": ".slds-page-header__detail-row",
              "restrictees": [
                {
                  "description": "Creates margins around the detail section of record home",
                  "annotations": {
                    "selector": ".slds-page-header__detail-block",
                    "restrict": ".slds-page-header__detail-row li",
                    "notes": "Only the record home page header contains this detail area",
                    "required": true
                  },
                  "id": ".slds-page-header__detail-block",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "docked-form-footer": {
      "description": "",
      "annotations": {
        "summary": "Docked form footer is used to dock form actions to the bottom of the viewport",
        "base": true,
        "name": "docked-form-footer",
        "selector": ".slds-docked-form-footer",
        "support": "dev-ready"
      },
      "id": "docked-form-footer",
      "restrictees": [
        {
          "description": "The popover should be positioned with JavaScript.\n\nWhen errors are found within a form, the user will be notified with a popover\nwith the page-level errors listed out. Please provide a contextually specific\ntitle for the dialog with the aria-label attribute. e.g. \"Acme Global edit\nform errors\"",
          "annotations": {
            "summary": "Creates a docked form footer",
            "name": "base",
            "selector": ".slds-docked-form-footer",
            "restrict": "div",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "docked-form-footer-with-error",
                  "label": "With error(s)"
                },
                {
                  "id": "docked-form-footer-with-popover",
                  "label": "With error popover"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "input": {
      "description": "You can style the HTML `<input>` element to align with the Salesforce brand\nby using the `.slds-input` class on the `<input>` element.\n\nThe `<input>` element includes support for all HTML5 types: `text`,\n`password`, `datetime`, `datetime-local`, `date`, `month`, `time`, `week`,\n`number`, `email`, `url`, `search`, `tel`, and `color`.\n\n#### Accessibility\n\nInputs with errors should have `aria-describedby` to insure that the\nassociated field level error message is read by assistive technology.\nIf the error message has an `id=\"my-error-message\"`, then the input should\nhave `aria-describedby=\"my-error-message\"`.\n\nIf you're needing some type of field level help and if your tooltips are\navailable on hover, make sure they’re also available on keyboard focus. The\nhelp icon needs to be associated to the tooltip so that when the user focuses\non the icon, assistive technology reads out the content of the tooltip. If\nthe tooltip has an `id=\"help\"`, then the `<button>` containing the icon should\nhave `aria-describedby=\"help\"`.",
      "annotations": {
        "summary": "Text inputs are used for freeform data entry",
        "base": true,
        "name": "input",
        "selector": ".slds-input",
        "support": "dev-ready",
        "category": "base",
        "type": "data-entry",
        "layout": "responsive"
      },
      "id": "input",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes text input",
            "name": "base",
            "selector": ".slds-input",
            "restrict": "input",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Removes aesthetic nature from an input",
              "annotations": {
                "selector": ".slds-input_bare",
                "restrict": ".slds-input, input, textarea",
                "modifier": true
              },
              "id": ".slds-input_bare",
              "restrictees": []
            },
            {
              "description": "Used to apply an input size to another element thats a non input\nBecause sometimes I need elements the same height as inputs",
              "annotations": {
                "selector": ".slds-input_height",
                "restrict": ".slds-input"
              },
              "id": ".slds-input_height",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "input-required",
                  "label": "Required"
                },
                {
                  "id": "input-disabled",
                  "label": "Disabled"
                },
                {
                  "id": "input-error",
                  "label": "Error"
                },
                {
                  "id": "input-error-icon",
                  "label": "Error with icon"
                },
                {
                  "id": "read-only",
                  "label": "Readonly"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "left-icon",
                  "label": "Left Icon"
                },
                {
                  "id": "right-icon",
                  "label": "Right Icon"
                },
                {
                  "id": "double-icon",
                  "label": "Left & Right Icon"
                },
                {
                  "id": "double-icon-spinner",
                  "label": "Icons with Spinner"
                },
                {
                  "id": "fixed-text",
                  "label": "Fixed text"
                },
                {
                  "id": "field-level-help",
                  "label": "Field level help"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "vertical-navigation": {
      "description": "",
      "annotations": {
        "summary": "Navigation represents a list of links that either take the user to another page or parts of the page the user is in.",
        "base": true,
        "name": "vertical-navigation",
        "selector": ".slds-nav-vertical",
        "support": "dev-ready",
        "category": "structure",
        "type": "navigation",
        "role": "navigation"
      },
      "id": "vertical-navigation",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-nav-vertical",
            "restrict": "nav",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Modifer to reduce spacing between navigation items",
              "annotations": {
                "selector": ".slds-nav-vertical_compact",
                "restrict": ".slds-nav-vertical",
                "modifier": true
              },
              "id": ".slds-nav-vertical_compact",
              "restrictees": []
            },
            {
              "description": "Modifier to adjust list item when vertical navigation is sitting on top of a shaded background",
              "annotations": {
                "selector": ".slds-nav-vertical_shade",
                "restrict": ".slds-nav-vertical",
                "modifier": true
              },
              "id": ".slds-nav-vertical_shade",
              "restrictees": []
            },
            {
              "description": "Section title of the vertical navigation",
              "annotations": {
                "selector": ".slds-nav-vertical__title",
                "restrict": ".slds-nav-vertical h2"
              },
              "id": ".slds-nav-vertical__title",
              "restrictees": []
            },
            {
              "description": "List of the vertical navigation",
              "annotations": {
                "selector": ".slds-nav-vertical__item",
                "restrict": ".slds-nav-vertical li"
              },
              "id": ".slds-nav-vertical__item",
              "restrictees": [
                {
                  "description": "Active state of a list item within a vertical navigation",
                  "annotations": {
                    "selector": ".slds-is-active",
                    "restrict": ".slds-nav-vertical__item",
                    "modifier": true
                  },
                  "id": ".slds-is-active",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Actionable element inside of vertical navigation list item",
              "annotations": {
                "selector": ".slds-nav-vertical__action",
                "restrict": ".slds-nav-vertical a, .slds-nav-vertical button"
              },
              "id": ".slds-nav-vertical__action",
              "restrictees": [
                {
                  "description": "Actionable element that toggles visibility of overflown list items",
                  "annotations": {
                    "selector": ".slds-nav-vertical__action_overflow",
                    "restrict": ".slds-nav-vertical__action"
                  },
                  "id": ".slds-nav-vertical__action_overflow",
                  "restrictees": [
                    {
                      "description": "Text inside of actionable element that toggles visibility of overflown list items",
                      "annotations": {
                        "selector": ".slds-nav-vertical__action-text",
                        "restrict": ".slds-nav-vertical__action_overflow span"
                      },
                      "id": ".slds-nav-vertical__action-text",
                      "restrictees": []
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "collapsed",
                  "label": "Collapsed"
                },
                {
                  "id": "expanded",
                  "label": "Expanded"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "compact",
                  "label": "Compact"
                },
                {
                  "id": "items-with-icons",
                  "label": "Items with icon"
                },
                {
                  "id": "items-with-notifications",
                  "label": "Items with notification"
                },
                {
                  "id": "shade",
                  "label": "Shaded Background"
                },
                {
                  "id": "quickfind",
                  "label": "Quickfind"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "dynamic-icons": {
      "description": "",
      "annotations": {
        "summary": "A set of delightful animated icons",
        "base": true,
        "name": "dynamic-icons",
        "selector": ".slds-icon-ellie, .slds-icon-score, .slds-icon-eq, .slds-icon-strength, .slds-icon-trend, .slds-icon-waffle_container",
        "category": "experience",
        "type": "messaging",
        "support": "dev-ready"
      },
      "id": "dynamic-icons",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "ellie",
            "selector": ".slds-icon-ellie",
            "restrict": "span",
            "variant": true
          },
          "id": "ellie",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Add .slds-is-animated to the SVG to enhance the icon with an animation.",
                "selector": ".slds-is-animated",
                "restrict": ".slds-icon-ellie"
              },
              "id": ".slds-is-animated",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Add .slds-is-paused to the SVG to pause the icon with an animation.",
                "selector": ".slds-is-paused",
                "restrict": ".slds-icon-ellie"
              },
              "id": ".slds-is-paused",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "paused",
                  "label": "Paused"
                },
                {
                  "id": "static",
                  "label": "Static (no animation)"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        },
        {
          "description": "",
          "annotations": {
            "name": "eq",
            "selector": ".slds-icon-eq",
            "restrict": "div",
            "variant": true
          },
          "id": "eq",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Turn animation on for animated icon",
                "selector": ".slds-is-animated",
                "restrict": ".slds-icon-eq"
              },
              "id": ".slds-is-animated",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Vertical bar for equalizer icon",
                "selector": ".slds-icon-eq__bar",
                "restrict": ".slds-icon-eq div"
              },
              "id": ".slds-icon-eq__bar",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        },
        {
          "description": "",
          "annotations": {
            "summary": "Initializes score icon",
            "name": "score",
            "selector": ".slds-icon-score",
            "restrict": "span",
            "variant": true
          },
          "id": "score",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Positive score icon",
                "selector": ".slds-icon-score__positive",
                "restrict": ".slds-icon-score svg"
              },
              "id": ".slds-icon-score__positive",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Negative score icon",
                "selector": ".slds-icon-score__negative",
                "restrict": ".slds-icon-score svg"
              },
              "id": ".slds-icon-score__negative",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "positive",
                  "label": "Positive"
                },
                {
                  "id": "negative",
                  "label": "Negative"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        },
        {
          "description": "",
          "annotations": {
            "summary": "Initializes strength icon",
            "name": "strength",
            "selector": ".slds-icon-strength",
            "restrict": "span",
            "variant": true
          },
          "id": "strength",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Add .slds-is-animated to the SVG to enhance the icon with an animation.",
                "selector": ".slds-is-animated",
                "restrict": ".slds-icon-strength"
              },
              "id": ".slds-is-animated",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Add .slds-is-paused to the SVG to pause the icon with an animation.",
                "selector": ".slds-is-paused",
                "restrict": ".slds-icon-strength"
              },
              "id": ".slds-is-paused",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "strength-1",
                  "label": "Strength: 1"
                },
                {
                  "id": "strength-2",
                  "label": "Strength: 2"
                },
                {
                  "id": "strength-3",
                  "label": "Strength: 3"
                },
                {
                  "id": "strength-negative-1",
                  "label": "Strength: -1"
                },
                {
                  "id": "strength-negative-2",
                  "label": "Strength: -2"
                },
                {
                  "id": "strength-negative-3",
                  "label": "Strength: -3"
                },
                {
                  "id": "animated",
                  "label": "Animated on load"
                },
                {
                  "id": "animated-negative",
                  "label": "Animated on load (negative)"
                },
                {
                  "id": "paused",
                  "label": "Paused"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        },
        {
          "description": "",
          "annotations": {
            "summary": "Initializes trend icon",
            "name": "trend",
            "selector": ".slds-icon-trend",
            "restrict": "span",
            "variant": true
          },
          "id": "trend",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Add .slds-is-animated to the SVG to enhance the icon with an animation.",
                "selector": ".slds-is-animated",
                "restrict": ".slds-icon-trend"
              },
              "id": ".slds-is-animated",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Add .slds-is-paused to the SVG to pause the icon with an animation.",
                "selector": ".slds-is-paused",
                "restrict": ".slds-icon-trend"
              },
              "id": ".slds-is-paused",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Arrow element inside of trend icon",
                "selector": ".slds-icon-trend__arrow",
                "restrict": ".slds-icon-trend path"
              },
              "id": ".slds-icon-trend__arrow",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Circle element inside of trend icon",
                "selector": ".slds-icon-trend__circle",
                "restrict": ".slds-icon-trend circle"
              },
              "id": ".slds-icon-trend__circle",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "down",
                  "label": "Down"
                },
                {
                  "id": "up",
                  "label": "Up"
                },
                {
                  "id": "static",
                  "label": "Static (no animation)"
                },
                {
                  "id": "paused",
                  "label": "Paused"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        },
        {
          "description": "",
          "annotations": {
            "summary": "Containing actionable element that holds the waffle icon",
            "name": "waffle",
            "selector": ".slds-icon-waffle_container",
            "restrict": "button",
            "variant": true
          },
          "id": "waffle",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Element container circles for the waffle icon",
                "selector": ".slds-icon-waffle",
                "restrict": ".slds-icon-waffle_container > span"
              },
              "id": ".slds-icon-waffle",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "expandable-section": {
      "description": "Section Titles are interactive titles that open and close sections, typically on a form.\n\n#### Accessibility\nIf the Section Title is interactive, the button needs to be associated with the section so that assistive technology knows what the button opens and closes. The button and section also need aria attributes to indicate the open and closed state of the section.\n\n#### Notable attributes\n\n**Button:**\n- `aria-controls` is used to create an association between the button and the section. If the section has an `id=\"content\"`, then the button should have `aria-controls=\"content\"`.\n- `aria-expanded` indicates if the section is open or closed and is read aloud by assitive technology when the button is focused.\n\n**Section:**\n- `aria-hidden` indicates if the section is open or closed, and if set to `true`, assistive technology hides the section.\n\n##### Keyboard navigation\n- The button should behave as a normal button. The user should be able to tab to focus it and press enter/space to activate it.\n\n#### Updating Operation and State\n- When the user interacts with the button to open the section, `aria-expanded` on the button should be `true` and `aria-hidden` on the section should be `false`.\n- When the user interacts with the button to close the section, `aria-expanded` on the button should be `false` and `aria-hidden` on the section should be `true`.",
      "annotations": {
        "summary": "Toggle visibility a section content",
        "base": true,
        "name": "expandable-section",
        "selector": ".slds-section",
        "category": "experience",
        "support": "dev-ready",
        "layout": "responsive"
      },
      "id": "expandable-section",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Container for a expandable section",
            "name": "base",
            "selector": ".slds-section",
            "restrict": "article, div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Element containing the title of a section",
                "selector": ".slds-section__title",
                "restrict": ".slds-section h3"
              },
              "id": ".slds-section__title",
              "restrictees": [
                {
                  "description": "",
                  "annotations": {
                    "summary": "Element containing the action inside of an expandable section title",
                    "selector": ".slds-section__title-action",
                    "restrict": ".slds-section__title button"
                  },
                  "id": ".slds-section__title-action",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "summary": "Element containing the content of an expandable section",
                "selector": ".slds-section__content",
                "restrict": ".slds-section div"
              },
              "id": ".slds-section__content",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Toggle visibility of section content",
                "selector": ".slds-is-open",
                "restrict": ".slds-section",
                "modifier": true,
                "group": "visibility"
              },
              "id": ".slds-is-open",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "examples",
              "items": [
                {
                  "id": "non-collapsable",
                  "label": "Non-collapsable"
                }
              ]
            },
            {
              "title": "states",
              "items": [
                {
                  "id": "closed",
                  "label": "Closed"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "list-builder": {
      "description": "The List builder relies heavily on utility classes to piece together the layout so please pay close attention to the markup and classes.",
      "annotations": {
        "summary": "The List builder is a quick, visual and efficient ‘shopping cart’ approach to adding multiple items to a parent object.",
        "base": true,
        "name": "list-builder",
        "selector": ".slds-list-builder",
        "support": "dev-ready",
        "s1": "false"
      },
      "id": "list-builder",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-list-builder",
            "restrict": "div",
            "variant": true,
            "support": "dev-ready"
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "items-selected",
                  "label": "Items selected"
                },
                {
                  "id": "filtered",
                  "label": "Filtered Results"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "app-launcher": {
      "description": "",
      "annotations": {
        "summary": "The App Launcher allows the user to quickly access all the apps and functionality with their organization.",
        "base": true,
        "name": "app-launcher",
        "selector": ".slds-app-launcher",
        "support": "prototype",
        "category": "experience"
      },
      "id": "app-launcher",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Creates styles for app-launcher",
            "name": "base",
            "selector": ".slds-app-launcher",
            "restrict": "section",
            "support": "prototype",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Defines the header region of the app launcher modal",
              "annotations": {
                "selector": ".slds-app-launcher__header",
                "restrict": ".slds-app-launcher header",
                "required": true
              },
              "id": ".slds-app-launcher__header",
              "restrictees": [
                {
                  "description": "Sets styles to search box, things like width and such",
                  "annotations": {
                    "selector": ".slds-app-launcher__header-search",
                    "restrict": ".slds-app-launcher__header div",
                    "required": true
                  },
                  "id": ".slds-app-launcher__header-search",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Defines the body region of the app launcher modal",
              "annotations": {
                "selector": ".slds-app-launcher__content",
                "restrict": ".slds-app-launcher div",
                "required": true
              },
              "id": ".slds-app-launcher__content",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "grabbed",
                  "label": "Tile grabbed"
                },
                {
                  "id": "moved",
                  "label": "Tile moved in list"
                },
                {
                  "id": "dropped",
                  "label": "Tile dropped"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "radio-group": {
      "description": "Radio buttons are shown in a group of two or more. The user can only select\none radio button at a time. You should use the same `name` attribute on all\nradio buttons in the group. This ensures that if there is more than one\ngroup in the form, each one stays associated with its own group.\n\nThe ability to style radio buttons with CSS varies across browsers. To\nensure that radio buttons look the same everywhere, we use a custom DOM.\nPay close attention to the markup, because all elements must exist for the\nstyles to work.\n\n#### Accessibility\n\nGroups of radio buttons should be marked up using the fieldset and legend\nelement. This helps someone using assistive technology to understand\nthe question they're answering with the group of radio buttons. The fieldset\nis placed around the whole group and the legend contains the question.\n\nCustom radio buttons are created by applying the `.slds-radio` class to a\n`<label>` element. To remain accessible to all user agents, place an\n`<input>` with `type=\"radio\"` inside the `<label>` element. The `<input>`\nis then visually hidden, and the styling is placed on a span with the\n`.slds-radio_faux` class. The styling of the span changes based on whether\nthe radio button is selected or focused by using a pseudo-element. A second\nspan with `.slds-form-element__label` contains the label text.\n\nWhen a radio group is required, the `<fieldset>` should receive the class\n`.slds-is-required`. The `<legend>` should then get\n`<abbr class=\"required\" title=\"required\">*</abbr>` added to the DOM for\nvisual indication that the radio group is required.",
      "annotations": {
        "summary": "A select list that can have a single entry checked at any one time.",
        "base": true,
        "name": "radio-group",
        "selector": ".slds-radio",
        "support": "dev-ready",
        "category": "base",
        "type": "data-entry",
        "role": "radiogroup"
      },
      "id": "radio-group",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes radio button",
            "name": "base",
            "selector": ".slds-radio",
            "restrict": "span",
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "disabled",
                  "label": "Disabled"
                },
                {
                  "id": "required",
                  "label": "Required"
                },
                {
                  "id": "error",
                  "label": "Error"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "checkbox-button-group": {
      "description": "",
      "annotations": {
        "summary": "A styled checkable input group that communicates if an option(s) are true, false or indeterminate",
        "base": true,
        "name": "checkbox-button-group",
        "selector": ".slds-checkbox_button-group",
        "support": "dev-ready",
        "category": "experience",
        "type": "data-entry",
        "role": "checkbox"
      },
      "id": "checkbox-button-group",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes checkbox button group",
            "name": "base",
            "selector": ".slds-checkbox_button-group",
            "restrict": "div, span",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Initializes checkbox inside a button group",
              "annotations": {
                "selector": ".slds-checkbox_button",
                "restrict": ".slds-checkbox_button-group span",
                "required": true
              },
              "id": ".slds-checkbox_button",
              "restrictees": [
                {
                  "description": "Creates a custom styled checkbox",
                  "annotations": {
                    "selector": ".slds-checkbox_button__label",
                    "restrict": ".slds-checkbox_button label",
                    "required": true
                  },
                  "id": ".slds-checkbox_button__label",
                  "restrictees": [
                    {
                      "description": "Creates a custom styled checkbox",
                      "annotations": {
                        "selector": ".slds-checkbox_faux",
                        "restrict": ".slds-checkbox__label span, .slds-checkbox_button__label span",
                        "required": true
                      },
                      "id": ".slds-checkbox_faux",
                      "restrictees": []
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "has-error",
                  "label": "Error"
                },
                {
                  "id": "disabled",
                  "label": "Disabled"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "popovers": {
      "description": "A popover is used to display contextual information to the user.\n\nA popover can accept the following nubbin position classes, `.slds-nubbin_left`, `.slds-nubbin_left-top`, `.slds-nubbin_left-bottom`, `.slds-nubbin_top-left`, `.slds-nubbin_top-right`, `.slds-nubbin_right-top`, `.slds-nubbin_right-bottom`, `.slds-nubbin_bottom-left`, `.slds-nubbin_bottom-right`.\n\n#### Accessibility\n\n##### Notable features\n\n- Popovers **must** come with a triggering button\n- They **must** have at least one focusable element inside\n- They **should** be implemented as a keyboard focus trap\n- When triggered, user focus should be placed on the first focusable element that isn't the close button. If the close button is the only focusable element, focus should be placed there\n- Pressing the Escape the key as well as clicking the close button should close the Popover\n- User focus should be placed back on the triggering button when the popover is closed\n\nPanel Popovers can be shown on mouse hover but for keyboard or screen reader users, a button should be present **in addition** and next to the hover trigger.\nThis is due to the focus moving and trapping nature of non-modal dialogs. You **should not** move a user's focus without their expressed intent.\n\n##### Notable attributes\n\n- The Popover element should have `role=\"dialog\"` applied\n- The `dialog` should be labelled, this can be achieved in two ways:\n  - Apply the `aria-labelledby` attribute to the `dialog` element and set the value to be the ID of the main Heading element in the Popover (if it provides a good and meaningful title to the `dialog`)\n  - If no Heading element is present, use the `aria-label` attribute and set the value to be a meaningful title of the `dialog`\n- The `dialog` should be described where possible. This can be achieved by applying the `aria-describedby` attribute to the `dialog` element and set the value to be the id of the Popover body",
      "annotations": {
        "summary": "A popover is a non-modal dialog. The component should be paired with a clickable trigger element and contain at least one focusable element.",
        "base": true,
        "name": "popovers",
        "selector": ".slds-popover",
        "support": "dev-ready",
        "category": "structure",
        "type": "messaging",
        "role": "non-modal-dialog"
      },
      "id": "popovers",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-popover",
            "restrict": "section",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Dialog specific for inline-edit popover",
              "annotations": {
                "selector": ".slds-popover_edit",
                "restrict": ".slds-popover",
                "required": true
              },
              "id": ".slds-popover_edit",
              "restrictees": [
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-form-element__label_edit",
                    "restrict": ".slds-popover_edit label"
                  },
                  "id": ".slds-form-element__label_edit",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Applies syles for primary content area of popover",
              "annotations": {
                "selector": ".slds-popover__body",
                "restrict": ".slds-popover div",
                "required": true
              },
              "id": ".slds-popover__body",
              "restrictees": []
            },
            {
              "description": "Applies styles for top area of popover",
              "annotations": {
                "selector": ".slds-popover__header",
                "restrict": ".slds-popover header, .slds-popover div",
                "required": true
              },
              "id": ".slds-popover__header",
              "restrictees": []
            },
            {
              "description": "Applies styles for footer area of popover",
              "annotations": {
                "selector": ".slds-popover__footer",
                "restrict": ".slds-popover footer",
                "required": true
              },
              "id": ".slds-popover__footer",
              "restrictees": []
            },
            {
              "description": "Close button within a popover",
              "annotations": {
                "selector": ".slds-popover__close",
                "restrict": ".slds-popover button",
                "required": true
              },
              "id": ".slds-popover__close",
              "restrictees": []
            },
            {
              "description": "Width modifier for popover - small",
              "annotations": {
                "selector": ".slds-popover_small",
                "restrict": ".slds-popover",
                "modifier": true,
                "group": "width"
              },
              "id": ".slds-popover_small",
              "restrictees": []
            },
            {
              "description": "Width modifier for popover - medium",
              "annotations": {
                "selector": ".slds-popover_medium",
                "restrict": ".slds-popover",
                "modifier": true,
                "group": "width"
              },
              "id": ".slds-popover_medium",
              "restrictees": []
            },
            {
              "description": "Width modifier for popover - large",
              "annotations": {
                "selector": ".slds-popover_large",
                "restrict": ".slds-popover",
                "modifier": true,
                "group": "width"
              },
              "id": ".slds-popover_large",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "name": "panels",
                "selector": ".slds-popover_panel",
                "restrict": ".slds-popover",
                "variant": true
              },
              "id": "panels",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Walkthrough components are used to provide an interactive and educational prospect experience for setup.",
              "annotations": {
                "summary": "Initializes a walkthrough non-modal dialog",
                "name": "walkthrough",
                "selector": ".slds-popover_walkthrough",
                "restrict": ".slds-popover",
                "variant": true
              },
              "id": "walkthrough",
              "restrictees": [
                {
                  "description": "Alternate background for walkthrough non-modal dialog",
                  "annotations": {
                    "selector": ".slds-popover_walkthrough-alt",
                    "restrict": ".slds-popover_walkthrough",
                    "modifier": true
                  },
                  "id": ".slds-popover_walkthrough-alt",
                  "restrictees": []
                }
              ],
              "showcase": [
                {
                  "title": "examples",
                  "items": [
                    {
                      "id": "micro-setup",
                      "label": "Micro Setup"
                    },
                    {
                      "id": "micro-setup-alternate",
                      "label": "Micro Setup - Alternate"
                    },
                    {
                      "id": "micro-setup-in-page",
                      "label": "Micro Setup - In Page"
                    },
                    {
                      "id": "micro-setup-inline-form",
                      "label": "Micro Setup - Inline Form"
                    },
                    {
                      "id": "action-popover",
                      "label": "Action Popover"
                    },
                    {
                      "id": "action-popover-heading",
                      "label": "Action Popover - With Heading"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_top",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_top",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_top-left",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_top-left",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_top-right",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_top-right",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_bottom",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_bottom",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_bottom-left",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_bottom-left",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_bottom-right",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_bottom-right",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_left",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_left",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_left-top",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_left-top",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_left-bottom",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_left-bottom",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_right",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_right",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_right-top",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_right-top",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-nubbin_right-bottom",
                "restrict": ".slds-popover, .slds-dropdown",
                "modifier": true,
                "group": "nubbins"
              },
              "id": ".slds-nubbin_right-bottom",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "examples",
              "items": [
                {
                  "id": "header",
                  "label": "With Header"
                },
                {
                  "id": "footer",
                  "label": "With Footer"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "button-groups": {
      "description": "Buttons in a group are surrounded by a parent with the `.slds-button-group` class, unless they are in a list (in which case they use `.slds-button-group-list`. If the last button is an icon, like the down triangle, use the `.slds-button_icon-border-filled` class when accompanying a `.slds-button_neutral` group.\n\nIf the last button in a group needs to be wrapped in another element (for example, a drop-down trigger), add the `.slds-button_last` class to the wrapper element to create proper spacing and borders.\n\n#### Accessibility\n\nUnless you are using the list version, include the Aria role `role=\"group\"` so that assistive technologies are alerted to the grouping.",
      "annotations": {
        "summary": "Button groups are used to bunch together buttons with similar actions",
        "layout": "responsive",
        "name": "button-groups",
        "support": "dev-ready",
        "base": true,
        "role": "button",
        "type": "action",
        "category": "base",
        "selector": ".slds-button-group"
      },
      "id": "button-groups",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Creates button group container",
            "name": "base",
            "selector": ".slds-button-group",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "These selectors must remain in long hand in order to zero out borders that\nwe don't want on last-child or :only-child wrapped buttons",
              "annotations": {
                "selector": ".slds-button_last",
                "restrict": ".slds-button-group div, .slds-button-group-list div"
              },
              "id": ".slds-button_last",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "disabled",
                  "label": "Disabled"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "list",
                  "label": "List"
                },
                {
                  "id": "overflow",
                  "label": "Overflow menu icon"
                },
                {
                  "id": "button-group-more-open",
                  "label": "Overflow menu icon - Open"
                },
                {
                  "id": "button-group-icon-disabled",
                  "label": "Overflow menu icon - Disabled"
                },
                {
                  "id": "button-group-inverse",
                  "label": "Inverse"
                },
                {
                  "id": "button-group-inverse-disabled",
                  "label": "Inverse Disabled"
                },
                {
                  "id": "button-group-icon-inverse-disabled",
                  "label": "Inverse More Icon Disabled"
                },
                {
                  "id": "button-group-icon",
                  "label": "Icon group"
                },
                {
                  "id": "button-group-icon-selected",
                  "label": "Icon group - Selected"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "progress-indicator": {
      "description": "The progress indicator communicates to the user which step of a process they\nmay be on. The length of the progress bar can be changed by modifying the\nvalue on `<progress class=\"slds-progress-bar\" />` with JavaScript. The\n`.slds-progress-bar` accepts a range from 0% to 100%.\n\nWhen a step becomes active, the `.slds-progress__item` should get the class\n`.slds-is-active`. This class should be applied through JavaScript. When the\nstep is completed, the `.slds-is-active` class should be replaced with the\nclass `.slds-is-completed` on `.slds-progress__item`. At that point, the\n`.slds-progress__item` element should receive a \"success\" icon, providing\nfeedback that the step has been completed.",
      "annotations": {
        "summary": "A progress indicator component communicates to the user the progress of a particular process.",
        "base": true,
        "name": "progress-indicator",
        "selector": ".slds-progress",
        "support": "dev-ready",
        "category": "experience",
        "type": "process"
      },
      "id": "progress-indicator",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-progress",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "When on a shaded background such as the modal footer",
              "annotations": {
                "selector": ".slds-progress_shade",
                "restrict": ".slds-progress",
                "modifier": true
              },
              "id": ".slds-progress_shade",
              "restrictees": []
            },
            {
              "description": "An ordered list containing steps of a process",
              "annotations": {
                "selector": ".slds-progress__list",
                "restrict": ".slds-progress ol",
                "required": true
              },
              "id": ".slds-progress__list",
              "restrictees": []
            },
            {
              "description": "A list item for each step of the process",
              "annotations": {
                "selector": ".slds-progress__item",
                "restrict": ".slds-progress ol li",
                "required": true
              },
              "id": ".slds-progress__item",
              "restrictees": [
                {
                  "description": "Stateful class for a completed step, `.slds-progress__item` should receive a success icon at this point",
                  "annotations": {
                    "selector": ".slds-is-completed",
                    "restrict": ".slds-progress__item",
                    "notes": "Class should be applied thought JavaScript",
                    "required": true,
                    "modifier": true,
                    "group": "state"
                  },
                  "id": ".slds-is-completed",
                  "restrictees": []
                },
                {
                  "description": "Stateful class for the active step",
                  "annotations": {
                    "selector": ".slds-is-active",
                    "restrict": ".slds-progress__item",
                    "notes": "Class should be applied thought JavaScript",
                    "required": true,
                    "modifier": true,
                    "group": "state"
                  },
                  "id": ".slds-is-active",
                  "restrictees": []
                },
                {
                  "description": "Indicates error state for a step in the progress",
                  "annotations": {
                    "selector": ".slds-has-error",
                    "restrict": ".slds-progress__item",
                    "required": true,
                    "modifier": true
                  },
                  "id": ".slds-has-error",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Dot indicator for each step",
              "annotations": {
                "selector": ".slds-progress__marker",
                "restrict": ".slds-progress ol li button",
                "required": true
              },
              "id": ".slds-progress__marker",
              "restrictees": [
                {
                  "description": "Modifier that notifies the marker indicator that the step has been completed and its getting an icon",
                  "annotations": {
                    "selector": ".slds-progress__marker_icon",
                    "restrict": ".slds-progress__marker",
                    "required": true
                  },
                  "id": ".slds-progress__marker_icon",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "next-step",
                  "label": "Next Step"
                },
                {
                  "id": "has-error",
                  "label": "Step - Error"
                },
                {
                  "id": "tooltip",
                  "label": "Tooltip"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "modal",
                  "label": "In a modal"
                },
                {
                  "id": "shade",
                  "label": "On a gray background"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "panels": {
      "description": "",
      "annotations": {
        "summary": "A panel provides contextual and detailed information based on an click or hover interaction of data by a user.",
        "base": true,
        "name": "panels",
        "selector": ".slds-panel",
        "support": "dev-ready",
        "category": "experience",
        "type": "data-display, user-input",
        "s1": "false"
      },
      "id": "panels",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initiates a panel",
            "name": "detail",
            "selector": ".slds-panel",
            "restrict": "div",
            "variant": true
          },
          "id": "detail",
          "restrictees": [
            {
              "description": "Contains sub sections of a panel",
              "annotations": {
                "selector": ".slds-panel__section",
                "restrict": ".slds-panel div",
                "required": true
              },
              "id": ".slds-panel__section",
              "restrictees": []
            },
            {
              "description": "Contains form actions at the bottom of a panel",
              "annotations": {
                "selector": ".slds-panel__actions",
                "restrict": ".slds-panel div",
                "required": true
              },
              "id": ".slds-panel__actions",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "name": "filtering",
                "selector": ".slds-panel_filters",
                "restrict": ".slds-panel",
                "variant": true,
                "s1": "false"
              },
              "id": "filtering",
              "restrictees": [
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-filters",
                    "restrict": ".slds-panel_filters div",
                    "required": true
                  },
                  "id": ".slds-filters",
                  "restrictees": []
                },
                {
                  "description": "Filters Header",
                  "annotations": {
                    "selector": ".slds-filters__header",
                    "restrict": ".slds-panel_filters div",
                    "required": true
                  },
                  "id": ".slds-filters__header",
                  "restrictees": []
                },
                {
                  "description": "Filters Body",
                  "annotations": {
                    "selector": ".slds-filters__body",
                    "restrict": ".slds-panel_filters div",
                    "required": true
                  },
                  "id": ".slds-filters__body",
                  "restrictees": []
                },
                {
                  "description": "Filters Footer",
                  "annotations": {
                    "selector": ".slds-filters__footer",
                    "restrict": ".slds-panel_filters div",
                    "required": true
                  },
                  "id": ".slds-filters__footer",
                  "restrictees": []
                },
                {
                  "description": "Filterable Item",
                  "annotations": {
                    "selector": ".slds-filters__item",
                    "restrict": ".slds-panel_filters li div",
                    "required": true
                  },
                  "id": ".slds-filters__item",
                  "restrictees": [
                    {
                      "description": "Indicates that a filter is new and hasn't been saved",
                      "annotations": {
                        "selector": ".slds-is-new",
                        "restrict": ".slds-filters__item",
                        "modifier": true
                      },
                      "id": ".slds-is-new",
                      "restrictees": []
                    },
                    {
                      "description": "Indicates that a filter has an error",
                      "annotations": {
                        "selector": ".slds-has-error",
                        "restrict": ".slds-filters__item",
                        "modifier": true
                      },
                      "id": ".slds-has-error",
                      "restrictees": []
                    },
                    {
                      "description": "Indicates that a filter is locked",
                      "annotations": {
                        "selector": ".slds-is-locked",
                        "restrict": ".slds-filters__item",
                        "modifier": true
                      },
                      "id": ".slds-is-locked",
                      "restrictees": []
                    }
                  ]
                }
              ],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "filtering-new-object",
                      "label": "New filter"
                    },
                    {
                      "id": "filtering-error",
                      "label": "Error"
                    },
                    {
                      "id": "filtering-locked",
                      "label": "Locked Filters"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "panel-form-edit-mode",
                  "label": "Form with Inline Edit"
                },
                {
                  "id": "panel-form-edit-mode-active",
                  "label": "Form with Inline Edit Active"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "tooltips": {
      "description": "Nubbins are indicators that inform the user of the direction of the content associated with the tooltip. A tooltip can accept the following nubbin position classes, `.slds-nubbin_left`, `.slds-nubbin_left-top`, `.slds-nubbin_left-bottom`, `.slds-nubbin_top-left`, `.slds-nubbin_top-right`, `.slds-nubbin_right-top`, `.slds-nubbin_right-bottom`, `.slds-nubbin_bottom-left`, `.slds-nubbin_bottom-right`.\n\nLearn more about how to use them at the [Nubbins documentation](/components/popovers/#flavor-nubbins).\n\n#### Accessibility\n\nShowing the tooltip on hover or on keyboard focus of a focusable element ensures that all users can access it, even if they aren’t using a mouse. Examples of focusable elements include links, buttons, and inputs. Give the tooltip an ID and use that as the value of the `aria-describedby` attribute of the DOM element it describes. This helps users of assistive technology read the tooltip content.",
      "annotations": {
        "summary": "A Tooltip is a small piece of contextual information about an element on the screen, which is displayed when a user hovers or focuses on the element it is describing. It is not focusable and cannot contain focusable content.",
        "base": true,
        "name": "tooltips",
        "selector": ".slds-popover_tooltip",
        "support": "dev-ready",
        "category": "base",
        "type": "messaging",
        "role": "tooltip"
      },
      "id": "tooltips",
      "restrictees": [
        {
          "description": "The tooltip should be positioned with JavaScript.\n\nYou can include inline help tooltips for form elements and any focusable items, such as anchor links, buttons, etc. If your tooltips are available on hover, also make sure that they’re available on keyboard focus. To allow screen readers to access the tooltip, the HTML form field element must  have an `aria-describedby` attribute that points to the tooltip `ID` of the tooltip.",
          "annotations": {
            "summary": "Initializes a tooltip",
            "variant": true,
            "name": "base",
            "selector": ".slds-popover_tooltip",
            "restrict": "div",
            "support": "dev-ready"
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "selector": ".slds-rise-from-ground",
                "restrict": ".slds-popover_tooltip",
                "modifier": true,
                "group": "toggle"
              },
              "id": ".slds-rise-from-ground",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-fall-into-ground",
                "restrict": ".slds-popover_tooltip",
                "modifier": true,
                "group": "toggle"
              },
              "id": ".slds-fall-into-ground",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "breadcrumbs": {
      "description": "Breadcrumbs are typically constructed with an `ol` because their order\nmatters. You mark up breadcrumbs with classes from the horizontal list\nutility. When you add the `.slds-breadcrumb` class, the separators are\nautomatically generated.\n\n#### Accessibility\n\nPlace the breadcrumb in a `nav` element with `role=\"navigation\"`.\nThe `nav` element is also marked-up with `aria-label=\"Breadcrumbs\"` to\ndescribe the type of navigation.",
      "annotations": {
        "summary": "Use breadcrumbs to note the path of a record and help the user to navigate back to the parent.",
        "base": true,
        "name": "breadcrumbs",
        "selector": ".slds-breadcrumb",
        "support": "dev-ready",
        "category": "base",
        "type": "navigation",
        "role": "navigation"
      },
      "id": "breadcrumbs",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Create breadcrumbs component",
            "name": "base",
            "selector": ".slds-breadcrumb",
            "restrict": "ol",
            "support": "dev-ready",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Item of the breadcrumb list",
              "annotations": {
                "selector": ".slds-breadcrumb__item",
                "restrict": ".slds-breadcrumb li",
                "required": true
              },
              "id": ".slds-breadcrumb__item",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "file-selector": {
      "description": "",
      "annotations": {
        "summary": "The File selector component allows the user to select file(s) from a user’s file system. Either natively using an file input or drag and drop.",
        "base": true,
        "name": "file-selector",
        "selector": ".slds-file-selector",
        "support": "dev-ready",
        "category": "experience",
        "type": "user-input"
      },
      "id": "file-selector",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-file-selector",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Region that a file can be dropped within",
              "annotations": {
                "selector": ".slds-file-selector__dropzone",
                "restrict": ".slds-file-selector div",
                "required": true
              },
              "id": ".slds-file-selector__dropzone",
              "restrictees": [
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-has-drag-over",
                    "restrict": ".slds-file-selector__dropzone",
                    "modifier": true
                  },
                  "id": ".slds-has-drag-over",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Hidden input element",
              "annotations": {
                "selector": ".slds-file-selector__input",
                "restrict": ".slds-file-selector input",
                "required": true
              },
              "id": ".slds-file-selector__input",
              "restrictees": []
            },
            {
              "description": "Faux button",
              "annotations": {
                "selector": ".slds-file-selector__button",
                "restrict": ".slds-file-selector button, .slds-file-selector span",
                "required": true
              },
              "id": ".slds-file-selector__button",
              "restrictees": []
            },
            {
              "description": "Modifications based on context\n\nSingle Line\nDedicated dropzone when there are multiple dropzones in the form or when\nthe input is positioned among other form inputs.",
              "annotations": {
                "selector": ".slds-file-selector_files",
                "restrict": ".slds-file-selector",
                "required": true
              },
              "id": ".slds-file-selector_files",
              "restrictees": []
            },
            {
              "description": "Container for file selector content, specifically within the dropzone",
              "annotations": {
                "selector": ".slds-file-selector__body",
                "restrict": ".slds-file-selector label",
                "required": true
              },
              "id": ".slds-file-selector__body",
              "restrictees": []
            },
            {
              "description": "Descriptive call back text",
              "annotations": {
                "selector": ".slds-file-selector__text",
                "restrict": ".slds-file-selector span",
                "required": true
              },
              "id": ".slds-file-selector__text",
              "restrictees": []
            },
            {
              "description": "Multi Line / Image\n\nUse as a dedicated dropzone for image files only. May require a\ncropping control.",
              "annotations": {
                "name": "image",
                "selector": ".slds-file-selector_images",
                "restrict": ".slds-file-selector",
                "required": true,
                "variant": true
              },
              "id": "image",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "file-selector-images-error",
                      "label": "Error"
                    },
                    {
                      "id": "file-selector-images-draggover",
                      "label": "Dragover"
                    },
                    {
                      "id": "file-selector-images-draggover-error",
                      "label": "Dragover with error"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Invisible Dropzone (Container)\n\nUse when an entire container should be droppable.\nThe container should have a visible boundary, like a modal, composer, or page.",
              "annotations": {
                "name": "integrated",
                "selector": ".slds-file-selector_integrated",
                "restrict": ".slds-file-selector",
                "required": true,
                "variant": true
              },
              "id": "integrated",
              "restrictees": [
                {
                  "description": "Specific to integrated file selector — region that a file can be dropped within",
                  "annotations": {
                    "selector": ".slds-file-selector__dropzone_integrated",
                    "restrict": ".slds-file-selector_integrated div",
                    "required": true
                  },
                  "id": ".slds-file-selector__dropzone_integrated",
                  "restrictees": [
                    {
                      "description": "Informs dropzone that file has been dragged into the viewport",
                      "annotations": {
                        "selector": ".slds-has-drag",
                        "restrict": ".slds-file-selector__dropzone_integrated",
                        "notes": "To be added with JavaScript",
                        "required": true,
                        "modifier": true
                      },
                      "id": ".slds-has-drag",
                      "restrictees": []
                    },
                    {
                      "description": "Informs dropzone that file has been dragged into its region",
                      "annotations": {
                        "selector": ".slds-has-drag-over",
                        "restrict": ".slds-file-selector__dropzone_integrated",
                        "notes": "To be added with JavaScript",
                        "required": true,
                        "modifier": true
                      },
                      "id": ".slds-has-drag-over",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "Specific to integrated file selector — container for file selector\ncontent, specifically within the dropzone",
                  "annotations": {
                    "selector": ".slds-file-selector__body_integrated",
                    "restrict": ".slds-file-selector_integrated label",
                    "required": true
                  },
                  "id": ".slds-file-selector__body_integrated",
                  "restrictees": []
                },
                {
                  "description": "Specific to integrated file selector — Descriptive call back text",
                  "annotations": {
                    "selector": ".slds-file-selector__text_integrated",
                    "restrict": ".slds-file-selector_integrated span",
                    "required": true
                  },
                  "id": ".slds-file-selector__text_integrated",
                  "restrictees": []
                }
              ],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "integrated-file-selector-drag",
                      "label": "Drag"
                    },
                    {
                      "id": "integrated-file-selector-draggover",
                      "label": "Dragover"
                    },
                    {
                      "id": "integrated-file-selector-draggover-error",
                      "label": "Dragover with error"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "file-selector-files-error",
                  "label": "Error"
                },
                {
                  "id": "file-selector-files-draggover",
                  "label": "Dragover"
                },
                {
                  "id": "file-selector-files-draggover-error",
                  "label": "Dragover with error"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "badges": {
      "description": "",
      "annotations": {
        "summary": "Badges are labels which hold small amounts of information.",
        "base": true,
        "name": "badges",
        "selector": ".slds-badge",
        "support": "dev-ready",
        "category": "base",
        "type": "navigation"
      },
      "id": "badges",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Create badge component",
            "name": "base",
            "selector": ".slds-badge",
            "restrict": "span",
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "form-layout": {
      "description": "To vertically stack `<label>` and `<input>` pairs, place `.slds-form--stacked` on the wrapper of the form for optimal spacing.\n\nTo horizontally align a `<label>` and `<input>`, use the `.slds-form--horizontal` class on the wrapper around the form. A `.slds-form-element__label` takes up 33% of the width, and the `.slds-form-element__control` uses the remaining 66%.\n\nFor optimum spacing and layout, wrap each element in `.slds-form-element`. Layout helper classes are available through the following class names, `.slds-form--stacked`, `.slds-form--horizontal` and `.slds-form--inline`.\n\nThe read-only state is for form elements that can’t be modified. It is used for small, non-editable form fields that sit next to inputs and allows the size and height to align. It is not meant for large paragraphs of text.\n\nBecause the read-only field state has no `<input>`, don’t use a `<label>` to provide better accessibility for screen readers and keyboard navigators. Instead, use a `<span>` with the `.slds-form-element__label` class. Instead of an `<input>`, use the `.slds-form-element__static` class inside the `.slds-form-element__control` wrapper.\n\nError states alert the user when content in the form is invalid. The `.slds-has-error` class is placed on the `<div class=\"slds-form-element\">`. Place the error message for the user in a `<span>` with the `.slds-form-element__help` class.\n\nThe native form elements, `<input>`, `<textarea>`, `<select>`, `<input type='checkbox'>`, and `<input type='radio'>`, receive validation styling for `disabled`, `checked`, and `checked disabled`, if applicable.\n\n#### Accessibility\n\nEvery field requires an associated, non-empty `<label>` element. The label should have a `for` attribute that references the `id` of the field. For example, `<label for=\"emailAddress\">Enter email address:</label>` and `<input id=\"emailAddress\">`. This association ensures that assistive technology informs users what information to enter where.\n\nIf the field is required, the `<input>` element should have the HTML attribute `required` or `required=\"\"`. Similarily, if it is disabled, it should have the `disabled` or `disabled=\"\"` attribute. Do not use true/false values inside the `required` or `disabled` because the mere presence of these attributes signifies the field is required or disabled.\n\nIf the field is invalid and displays an error message, the `<input>` element should have an `aria-describedby` attribute that references the `id` of the error message. This configuration allows screen readers to read the associated error message when the invalid field is focused.",
      "annotations": {
        "summary": "An HTML form contains interactive controls to submit information to a web server.",
        "base": true,
        "name": "form-layout",
        "selector": ".slds-form",
        "support": "dev-ready",
        "category": "structure",
        "type": "layout"
      },
      "id": "form-layout",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-form",
            "restrict": "form, div, fieldset",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Horizontally align multiple form elements on the same axis",
              "annotations": {
                "selector": ".slds-form_inline",
                "restrict": ".slds-form"
              },
              "id": ".slds-form_inline",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Creates a form that consists of multiple form groups",
                "name": "compound",
                "selector": ".slds-form_compound",
                "restrict": ".slds-form",
                "variant": true
              },
              "id": "compound",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Vertically aligns form label and control, provides spacing between form elements",
              "annotations": {
                "selector": ".slds-form_stacked",
                "restrict": ".slds-form:not(.slds-form_compound)",
                "modifier": true,
                "group": "layout"
              },
              "id": ".slds-form_stacked",
              "restrictees": []
            },
            {
              "description": "Horizontally aligns a single form label and control on the same line",
              "annotations": {
                "selector": ".slds-form_horizontal",
                "restrict": ".slds-form:not(.slds-form_compound)",
                "modifier": true,
                "group": "layout"
              },
              "id": ".slds-form_horizontal",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "horizontal",
                  "label": "Horizontal"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "progress-bar": {
      "description": "",
      "annotations": {
        "summary": "A progress bar component communicates to the user the progress of a particular process.",
        "base": true,
        "name": "progress-bar",
        "selector": ".slds-progress-bar",
        "support": "dev-ready",
        "category": "base",
        "type": "process",
        "role": "progressbar"
      },
      "id": "progress-bar",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-progress-bar",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Creates a progress bar height at the smaller .125rem (2px) size",
              "annotations": {
                "selector": ".slds-progress-bar_x-small",
                "restrict": ".slds-progress-bar",
                "modifier": true,
                "group": "height"
              },
              "id": ".slds-progress-bar_x-small",
              "restrictees": []
            },
            {
              "description": "Creates a progress bar height at the smaller .25rem (4px) size",
              "annotations": {
                "selector": ".slds-progress-bar_small",
                "restrict": ".slds-progress-bar",
                "modifier": true,
                "group": "height"
              },
              "id": ".slds-progress-bar_small",
              "restrictees": []
            },
            {
              "description": "Creates a progress bar height at the smaller .5rem (8px) size",
              "annotations": {
                "selector": ".slds-progress-bar_medium",
                "restrict": ".slds-progress-bar",
                "modifier": true,
                "group": "height"
              },
              "id": ".slds-progress-bar_medium",
              "restrictees": []
            },
            {
              "description": "Creates a progress bar height at the smaller .75rem (12px) size",
              "annotations": {
                "selector": ".slds-progress-bar_large",
                "restrict": ".slds-progress-bar",
                "modifier": true,
                "group": "height"
              },
              "id": ".slds-progress-bar_large",
              "restrictees": []
            },
            {
              "description": "Adds a border radius to the progress bar to give it a circular look",
              "annotations": {
                "selector": ".slds-progress-bar_circular",
                "restrict": ".slds-progress-bar",
                "modifier": true,
                "group": "radius"
              },
              "id": ".slds-progress-bar_circular",
              "restrictees": []
            },
            {
              "description": "Fill up blue bar inside of the progress bar",
              "annotations": {
                "selector": ".slds-progress-bar__value",
                "restrict": ".slds-progress-bar span"
              },
              "id": ".slds-progress-bar__value",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "zero",
                  "label": "0% complete"
                },
                {
                  "id": "25",
                  "label": "25% complete"
                },
                {
                  "id": "50",
                  "label": "50% complete"
                },
                {
                  "id": "75",
                  "label": "75% complete"
                },
                {
                  "id": "100",
                  "label": "100% complete"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "form-element": {
      "description": "Error states alert the user when content in the form is invalid. The `.slds-has-error` class is placed on the `<div class=\"slds-form-element\">`. Place the error message for the user in a `<span>` with the `.slds-form-element__help` class.\n\nThe native form elements, `<input>`, `<textarea>`, `<select>`, `<input type='checkbox'>`, and `<input type='radio'>`, receive validation styling for `disabled`, `checked`, and `checked disabled`, if applicable.\n\nThe read-only state is for form elements that can’t be modified. It is used for small, non-editable form fields that sit next to inputs and allows the size and height to align. It is not meant for large paragraphs of text.\n\nBecause the read-only field state has no `<input>`, don’t use a `<label>` to provide better accessibility for screen readers and keyboard navigators. Instead, use a `<span>` with the `.slds-form-element__label` class. Instead of an `<input>`, use the `.slds-form-element__static` class inside the `.slds-form-element__control` wrapper.\n\n#### Accessibility\n\nEvery field requires an associated, non-empty `<label>` element. The label should have a `for` attribute that references the `id` of the field. For example, `<label for=\"emailAddress\">Enter email address:</label>` and `<input id=\"emailAddress\">`. This association ensures that assistive technology informs users what information to enter where.\n\nIf the field is required, the `<input>` element should have the HTML attribute `required` or `required=\"\"`. Similarily, if it is disabled, it should have the `disabled` or `disabled=\"\"` attribute. Do not use true/false values inside the `required` or `disabled` because the mere presence of these attributes signifies the field is required or disabled.\n\nIf the field is invalid and displays an error message, the `<input>` element should have an `aria-describedby` attribute that references the `id` of the error message. This configuration allows screen readers to read the associated error message when the invalid field is focused.",
      "annotations": {
        "summary": "An HTML form element contains a HTML label and element",
        "base": true,
        "name": "form-element",
        "selector": ".slds-form-element",
        "support": "dev-ready",
        "category": "structure",
        "type": "layout"
      },
      "id": "form-element",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Creates layout for a form element",
            "name": "base",
            "selector": ".slds-form-element",
            "restrict": "div, fieldset, li",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Error styles for checkbox or checkbox group",
              "annotations": {
                "selector": ".slds-has-error",
                "restrict": ".slds-form-element",
                "modifier": true
              },
              "id": ".slds-has-error",
              "restrictees": []
            },
            {
              "description": "Wrapper to any form display element",
              "annotations": {
                "selector": ".slds-form-element__control",
                "restrict": ".slds-form-element div"
              },
              "id": ".slds-form-element__control",
              "restrictees": []
            },
            {
              "description": "When an icon sits within a form element wrapper and adjacent to another\nelement inside that wrapper such as a .form-element__label",
              "annotations": {
                "selector": ".slds-form-element__icon",
                "restrict": ".slds-form-element div"
              },
              "id": ".slds-form-element__icon",
              "restrictees": []
            },
            {
              "description": "Creates inline help styles, sits below .form-element__control",
              "annotations": {
                "selector": ".slds-form-element__help",
                "restrict": ".slds-form-element div"
              },
              "id": ".slds-form-element__help",
              "restrictees": []
            },
            {
              "description": "Required Star",
              "annotations": {
                "selector": ".slds-required",
                "restrict": ".slds-form-element abbr, abbr"
              },
              "id": ".slds-required",
              "restrictees": []
            },
            {
              "description": "Error styles for form element",
              "annotations": {
                "selector": ".slds-has-error",
                "restrict": ".slds-form-element",
                "modifier": true,
                "group": "feedback"
              },
              "id": ".slds-has-error",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Modifier if text input has svg icon adjacent to input",
                "selector": ".slds-input-has-icon",
                "restrict": ".slds-form-element div"
              },
              "id": ".slds-input-has-icon",
              "restrictees": [
                {
                  "description": "Hook for .slds-input-has-icon",
                  "annotations": {
                    "selector": ".slds-input__icon",
                    "restrict": ".slds-input-has-icon svg, .slds-input-has-icon button"
                  },
                  "id": ".slds-input__icon",
                  "restrictees": [
                    {
                      "description": "Hook for .slds-input-has-icon--left-right",
                      "annotations": {
                        "selector": ".slds-input__icon_left",
                        "restrict": ".slds-input__icon"
                      },
                      "id": ".slds-input__icon_left",
                      "restrictees": []
                    },
                    {
                      "description": "Hook for .slds-input-has-icon_left-right",
                      "annotations": {
                        "selector": ".slds-input__icon_right",
                        "restrict": ".slds-input__icon"
                      },
                      "id": ".slds-input__icon_right",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "Positions .slds-input__icon to the left of the text input",
                  "annotations": {
                    "selector": ".slds-input-has-icon_left",
                    "restrict": ".slds-input-has-icon",
                    "modifier": true,
                    "group": "position"
                  },
                  "id": ".slds-input-has-icon_left",
                  "restrictees": []
                },
                {
                  "description": "Positions .slds-input__icon to the right of the text input",
                  "annotations": {
                    "selector": ".slds-input-has-icon_right",
                    "restrict": ".slds-input-has-icon",
                    "modifier": true,
                    "group": "position"
                  },
                  "id": ".slds-input-has-icon_right",
                  "restrictees": []
                },
                {
                  "description": "Positions .slds-input__icon_left to the left of the text input and .slds-input__icon_right to the right of the text input",
                  "annotations": {
                    "selector": ".slds-input-has-icon_left-right",
                    "restrict": ".slds-input-has-icon",
                    "modifier": true,
                    "group": "position"
                  },
                  "id": ".slds-input-has-icon_left-right",
                  "restrictees": []
                },
                {
                  "description": "Positions two items (icons and/or spinners) on one side or the other of the input",
                  "annotations": {
                    "selector": ".slds-input__icon-group",
                    "restrict": ".slds-input-has-icon div"
                  },
                  "id": ".slds-input__icon-group",
                  "restrictees": [
                    {
                      "description": "Positions the close icon and spinner on the right side of the input while searching",
                      "annotations": {
                        "selector": ".slds-input__icon-group_right",
                        "restrict": ".slds-input__icon-group",
                        "modifier": true,
                        "group": "position"
                      },
                      "id": ".slds-input__icon-group_right",
                      "restrictees": []
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "summary": "Use on input container to let it know there is fixed text to the left or right of the input",
                "selector": ".slds-input-has-fixed-addon",
                "restrict": ".slds-form-element .slds-form-element__control"
              },
              "id": ".slds-input-has-fixed-addon",
              "restrictees": []
            },
            {
              "description": "Fixed text that sits to the left or right of an input",
              "annotations": {
                "selector": ".slds-form-element__addon",
                "restrict": ".slds-form-element span"
              },
              "id": ".slds-form-element__addon",
              "restrictees": []
            },
            {
              "description": "Read-only components are used to display immutable data within a form",
              "annotations": {
                "summary": "Initializes read-only form element",
                "selector": ".slds-form-element__static",
                "restrict": ".slds-form-element span, .slds-form-element div"
              },
              "id": ".slds-form-element__static",
              "restrictees": [
                {
                  "description": "Inline Edit on static form element",
                  "annotations": {
                    "selector": ".slds-form-element__static_edit",
                    "restrict": ".slds-form-element__static"
                  },
                  "id": ".slds-form-element__static_edit",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Error Styles for input field",
              "annotations": {
                "selector": ".slds-has-error",
                "restrict": ".slds-form-element",
                "modifier": true
              },
              "id": ".slds-has-error",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Initializes radio button",
                "name": "base",
                "selector": ".slds-radio_button-group",
                "restrict": ".slds-form-element div",
                "required": true,
                "variant": true
              },
              "id": "base",
              "restrictees": [
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-radio_button",
                    "restrict": ".slds-radio_button-group span"
                  },
                  "id": ".slds-radio_button",
                  "restrictees": [
                    {
                      "description": "Create styled button when adjacent to the input[radio] element",
                      "annotations": {
                        "selector": ".slds-radio_faux",
                        "restrict": ".slds-radio_button span"
                      },
                      "id": ".slds-radio_faux",
                      "restrictees": []
                    },
                    {
                      "description": "Label element inside of a radio button",
                      "annotations": {
                        "selector": ".slds-radio_button__label",
                        "restrict": ".slds-radio_button label"
                      },
                      "id": ".slds-radio_button__label",
                      "restrictees": []
                    }
                  ]
                }
              ],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "input",
                      "label": "Input"
                    },
                    {
                      "id": "textarea",
                      "label": "Textarea"
                    },
                    {
                      "id": "checkbox",
                      "label": "Checkbox"
                    },
                    {
                      "id": "radio-group",
                      "label": "Radio Group"
                    },
                    {
                      "id": "inline-help",
                      "label": "Inline Help"
                    },
                    {
                      "id": "tooltip-help",
                      "label": "Tooltip Help"
                    },
                    {
                      "id": "required",
                      "label": "Required"
                    },
                    {
                      "id": "error",
                      "label": "Error"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Error state for radio group",
              "annotations": {
                "selector": ".slds-has-error",
                "restrict": ".slds-form-element",
                "modifier": true
              },
              "id": ".slds-has-error",
              "restrictees": []
            },
            {
              "description": "Error Styles for select",
              "annotations": {
                "selector": ".slds-has-error",
                "restrict": ".slds-form-element",
                "modifier": true
              },
              "id": ".slds-has-error",
              "restrictees": []
            },
            {
              "description": "Error Styles for textarea",
              "annotations": {
                "selector": ".slds-has-error",
                "restrict": ".slds-form-element",
                "modifier": true
              },
              "id": ".slds-has-error",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "input",
                  "label": "Input"
                },
                {
                  "id": "textarea",
                  "label": "Textarea"
                },
                {
                  "id": "checkbox",
                  "label": "Checkbox"
                },
                {
                  "id": "radio-group",
                  "label": "Radio Group"
                },
                {
                  "id": "inline-help",
                  "label": "Inline Help"
                },
                {
                  "id": "tooltip-help",
                  "label": "Tooltip Help"
                },
                {
                  "id": "required",
                  "label": "Required"
                },
                {
                  "id": "error",
                  "label": "Error"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "menus": {
      "description": "The unordered menu list with `[role=\"menu\"]` should be contained in a `<div>`\nwith the class `.slds-dropdown`. The exception to this is the **Action\nOverflow for Touch**, which not a dropdown menu.\n\nThe target HTML element and dropdown need to be wrapped in the class `.slds-dropdown-trigger dropdown-trigger_click`.\n\nBy default, dropdown menus do not display a nubbin (the little cute triangle\npointing at your target). If you want to apply one, you can add the class\nthat defines the nubbin position and `.slds-nubbin_top` to the `.slds-dropdown`\nHTML element.\n\n<div class=\"site-text-heading--label\">Accessibility</div>\n\nThe main thing that distinguishes menus from other popover blocks is keyboard\nnavigation: elsewhere, users press the Tab key to navigate through actionable\nitems, but in a menu, users press the arrow keys to navigate.\n\n**Expected markup:**\n\n- Menu trigger is a focusable element (`<a>` or `<button>`) with `aria-haspopup=\"true\"`\n- Menu has `role=\"menu\"` and an `aria-labelledby` attribute whose value is the id of the menu trigger\n- Menu items have `role=\"menuitem\"`, `role=\"menuitemcheckbox\"`, or `role=\"menuitemradio\"`\n\n**Expected keyboard interactions:**\n\n- Arrow keys cycle focus through menu items (you should use JS to disable focus for any disabled items)\n- Tab key closes menu and moves focus to the next focusable element on the page\n- Esc key closes menu and moves focus back to the menu trigger\n- Any character key moves focus to the next menu item that starts with that character, if applicable",
      "annotations": {
        "summary": "A Menu offers a list of actions or functions that a user can access.",
        "base": true,
        "name": "menus",
        "selector": ".slds-dropdown-trigger",
        "support": "dev-ready",
        "category": "experience",
        "type": "navigation",
        "role": "menu"
      },
      "id": "menus",
      "restrictees": [
        {
          "description": "Icons can be included on either the right, left, or both sides of an option.\n\nWhen using icons (e.g. checkmarks) to indicate selected state:\n- all selectable items should contain an icon\n- icons of non-selected are hidden by default\n- a selected item reveals its icon when `aria-checked=\"true\"` is applied to its `menuitemcheckbox` or `menuitemradio` child (e.g. `<a role=\"menuitemcheckbox\" aria-checked=\"true\" ...>`).",
          "annotations": {
            "summary": "Initializes a trigger element around the dropdown",
            "name": "dropdown",
            "selector": ".slds-dropdown-trigger",
            "restrict": "div, span, li",
            "variant": true
          },
          "id": "dropdown",
          "restrictees": [
            {
              "description": "If someone is using javascript for click to toggle - this modifier will help",
              "annotations": {
                "selector": ".slds-dropdown-trigger_hover",
                "restrict": ".slds-dropdown-trigger"
              },
              "id": ".slds-dropdown-trigger_hover",
              "restrictees": []
            },
            {
              "description": "If someone is using javascript for click to toggle - this modifier will help",
              "annotations": {
                "selector": ".slds-dropdown-trigger_click",
                "restrict": ".slds-dropdown-trigger"
              },
              "id": ".slds-dropdown-trigger_click",
              "restrictees": [
                {
                  "description": "Opens dropdown menu when invoked on click",
                  "annotations": {
                    "selector": ".slds-is-open",
                    "restrict": ".slds-dropdown-trigger_click",
                    "modifier": true
                  },
                  "id": ".slds-is-open",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Initializes dropdown",
              "annotations": {
                "selector": ".slds-dropdown",
                "restrict": ".slds-dropdown-trigger div, .slds-dropdown-trigger ul",
                "notes": "Applies positioning and container styles, by default, dropdown appears below and center of target"
              },
              "id": ".slds-dropdown",
              "restrictees": [
                {
                  "description": "Positions dropdown to left side of target",
                  "annotations": {
                    "selector": ".slds-dropdown_left",
                    "restrict": ".slds-dropdown",
                    "modifier": true,
                    "group": "position"
                  },
                  "id": ".slds-dropdown_left",
                  "restrictees": []
                },
                {
                  "description": "Positions dropdown to right side of target",
                  "annotations": {
                    "selector": ".slds-dropdown_right",
                    "restrict": ".slds-dropdown",
                    "modifier": true,
                    "group": "position"
                  },
                  "id": ".slds-dropdown_right",
                  "restrictees": []
                },
                {
                  "description": "Positions dropdown to above target",
                  "annotations": {
                    "selector": ".slds-dropdown_bottom",
                    "restrict": ".slds-dropdown",
                    "modifier": true,
                    "group": "position"
                  },
                  "id": ".slds-dropdown_bottom",
                  "restrictees": []
                },
                {
                  "description": "Sets min-width of 6rem/96px",
                  "annotations": {
                    "selector": ".slds-dropdown_xx-small",
                    "restrict": ".slds-dropdown",
                    "modifier": true,
                    "group": "width"
                  },
                  "id": ".slds-dropdown_xx-small",
                  "restrictees": []
                },
                {
                  "description": "Sets min-width of 12rem/192px",
                  "annotations": {
                    "selector": ".slds-dropdown_x-small",
                    "restrict": ".slds-dropdown",
                    "modifier": true,
                    "group": "width"
                  },
                  "id": ".slds-dropdown_x-small",
                  "restrictees": []
                },
                {
                  "description": "Sets min-width of 15rem/240px",
                  "annotations": {
                    "selector": ".slds-dropdown_small",
                    "restrict": ".slds-dropdown",
                    "modifier": true,
                    "group": "width"
                  },
                  "id": ".slds-dropdown_small",
                  "restrictees": []
                },
                {
                  "description": "Sets min-width of 20rem/320px",
                  "annotations": {
                    "selector": ".slds-dropdown_medium",
                    "restrict": ".slds-dropdown",
                    "modifier": true,
                    "group": "width"
                  },
                  "id": ".slds-dropdown_medium",
                  "restrictees": []
                },
                {
                  "description": "Sets min-width of 25rem/400px",
                  "annotations": {
                    "selector": ".slds-dropdown_large",
                    "restrict": ".slds-dropdown",
                    "modifier": true,
                    "group": "width"
                  },
                  "id": ".slds-dropdown_large",
                  "restrictees": []
                },
                {
                  "description": "Forces overflow scrolling after 5 list items",
                  "annotations": {
                    "selector": ".slds-dropdown_length-5",
                    "restrict": ".slds-dropdown, .slds-dropdown__list",
                    "modifier": true,
                    "group": "height"
                  },
                  "id": ".slds-dropdown_length-5",
                  "restrictees": []
                },
                {
                  "description": "Forces overflow scrolling after 7 list items",
                  "annotations": {
                    "selector": ".slds-dropdown_length-7",
                    "restrict": ".slds-dropdown, .slds-dropdown__list",
                    "modifier": true,
                    "group": "height"
                  },
                  "id": ".slds-dropdown_length-7",
                  "restrictees": []
                },
                {
                  "description": "Forces overflow scrolling after 10 list items",
                  "annotations": {
                    "selector": ".slds-dropdown_length-10",
                    "restrict": ".slds-dropdown, .slds-dropdown__list",
                    "modifier": true,
                    "group": "height"
                  },
                  "id": ".slds-dropdown_length-10",
                  "restrictees": []
                },
                {
                  "description": "Forces overflow scrolling after 5 list items with an icon",
                  "annotations": {
                    "selector": ".slds-dropdown_length-with-icon-5",
                    "restrict": ".slds-dropdown, .slds-dropdown__list",
                    "modifier": true,
                    "group": "height"
                  },
                  "id": ".slds-dropdown_length-with-icon-5",
                  "restrictees": []
                },
                {
                  "description": "Forces overflow scrolling after 7 list items with an icon",
                  "annotations": {
                    "selector": ".slds-dropdown_length-with-icon-7",
                    "restrict": ".slds-dropdown, .slds-dropdown__list",
                    "modifier": true,
                    "group": "height"
                  },
                  "id": ".slds-dropdown_length-with-icon-7",
                  "restrictees": []
                },
                {
                  "description": "Forces overflow scrolling after 10 list items with an icon",
                  "annotations": {
                    "selector": ".slds-dropdown_length-with-icon-10",
                    "restrict": ".slds-dropdown, .slds-dropdown__list",
                    "modifier": true,
                    "group": "height"
                  },
                  "id": ".slds-dropdown_length-with-icon-10",
                  "restrictees": []
                },
                {
                  "description": "Theme",
                  "annotations": {
                    "selector": ".slds-dropdown_inverse",
                    "restrict": ".slds-dropdown",
                    "modifier": true,
                    "group": "theme"
                  },
                  "id": ".slds-dropdown_inverse",
                  "restrictees": []
                },
                {
                  "description": "Adds padding to area above dropdown menu list",
                  "annotations": {
                    "selector": ".slds-dropdown__header",
                    "restrict": ".slds-dropdown li"
                  },
                  "id": ".slds-dropdown__header",
                  "restrictees": []
                },
                {
                  "description": "Initializes dropdown item",
                  "annotations": {
                    "selector": ".slds-dropdown__item",
                    "restrict": ".slds-dropdown li",
                    "required": true
                  },
                  "id": ".slds-dropdown__item",
                  "restrictees": [
                    {
                      "description": "If menu contains menuitemcheckbox then this toggles the selected icon when it is selected",
                      "annotations": {
                        "selector": ".slds-icon_selected",
                        "restrict": ".slds-dropdown__item svg"
                      },
                      "id": ".slds-icon_selected",
                      "restrictees": []
                    },
                    {
                      "description": "If menu contains menuitemcheckbox then this handles the selected states",
                      "annotations": {
                        "selector": ".slds-is-selected",
                        "restrict": ".slds-dropdown__item",
                        "modifier": true
                      },
                      "id": ".slds-is-selected",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_top",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_top",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_top-left",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_top-left",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_top-right",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_top-right",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_bottom",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_bottom",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_bottom-left",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_bottom-left",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_bottom-right",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_bottom-right",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_left",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_left",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_left-top",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_left-top",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_left-bottom",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_left-bottom",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_right",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_right",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_right-top",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_right-top",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-nubbin_right-bottom",
                    "restrict": ".slds-popover, .slds-dropdown",
                    "modifier": true,
                    "group": "nubbins"
                  },
                  "id": ".slds-nubbin_right-bottom",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "examples",
              "items": [
                {
                  "id": "dropdown-menu-header",
                  "label": "Sub Heading"
                },
                {
                  "id": "dropdown-menu-icon-left",
                  "label": "Single Icon - Left"
                },
                {
                  "id": "dropdown-menu-icon-double",
                  "label": "Double Icon - Left/Right"
                },
                {
                  "id": "dropdown-menu-icon-right",
                  "label": "Single Icon - Right"
                },
                {
                  "id": "action-overflow",
                  "label": "Overflow menu with actions"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "trees": {
      "description": "A tree is composed of two core elements `.slds-tree` and `.slds-tree__item`. The tree wrapper, the outer most parent `ul`, will receive the class `.slds-tree`. This class will be used for scoping a tree, which allows for particular styling based on states in which the tree may enter.\n\nA tree will need helper classes added and removed to help structure the layout. Each child node list needs an `aria-level` attribute with its value being the number of levels deep it is nested to indicate the distinct grouping is nested within.\n\nWhenever the tree has a nested group, the `li` element should receive the ARIA role `group`. This will add appropiate styling to decendent `.slds-tree__item` elements. A helper class of `.slds-is-expanded` and `.slds-is-collapsed` will need to be toggled on the appropriate child of list item node if the decendent groups are visible or not visible.\n\nA `.slds-tree__item` is any element of the tree that is a single node within a node with an ARIA attribute of `role=\"group\"`. To achieve interactions demostrated in the demo, some helper classes are being added and removed based on actions to the list item node. To achieve the desired hover and focus states, applying the `.slds-is-hovered` and `.slds-is-focused` class helpers to the `li` on its respective interactions. If an item is selected and want to demostrate that state, applying the `.slds-is-selected` helper class will give you this outcome.\n\nIn our example, we are using a chevron icon on tree branches to help indicate to the user what action clicking the tree branch will perform, whether opening or closing it. The effect of rotating the icon 90° to indicate open/closed status is achieved by applying the ARIA attribute `aria-controls` to the button the icon is contained within. The value of the `aria-controls` attribute should be the ID of the group that clicking the button will affect.",
      "annotations": {
        "summary": "A tree is visualization of a structure hierarchy. A branch can be expanded or collapsed.",
        "base": true,
        "name": "trees",
        "selector": ".slds-tree_container",
        "support": "dev-ready"
      },
      "id": "trees",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-tree_container",
            "restrict": "div",
            "support": "dev-ready",
            "variant": true,
            "s1": "false"
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "selector": ".slds-tree",
                "restrict": ".slds-tree_container ul, table",
                "required": true
              },
              "id": ".slds-tree",
              "restrictees": [
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-tree__item",
                    "restrict": ".slds-tree div, .slds-tree th",
                    "required": true
                  },
                  "id": ".slds-tree__item",
                  "restrictees": [
                    {
                      "description": "When a branch doesn't have children, apply slds-is-disabled to the button icon",
                      "annotations": {
                        "selector": ".slds-is-disabled",
                        "restrict": ".slds-tree__item button",
                        "required": true,
                        "modifier": true
                      },
                      "id": ".slds-is-disabled",
                      "restrictees": []
                    },
                    {
                      "description": "Hover state for a tree item",
                      "annotations": {
                        "selector": ".slds-is-hovered",
                        "restrict": ".slds-tree__item",
                        "notes": "Class should be applied via Javascript",
                        "required": true,
                        "modifier": true
                      },
                      "id": ".slds-is-hovered",
                      "restrictees": []
                    },
                    {
                      "description": "Selected state for a tree item",
                      "annotations": {
                        "selector": ".slds-is-selected",
                        "restrict": ".slds-tree__item",
                        "notes": "Class should be applied via Javascript",
                        "required": true,
                        "modifier": true
                      },
                      "id": ".slds-is-selected",
                      "restrictees": []
                    },
                    {
                      "description": "Focus state for a tree item",
                      "annotations": {
                        "selector": ".slds-is-focused",
                        "restrict": ".slds-tree__item",
                        "required": true,
                        "modifier": true
                      },
                      "id": ".slds-is-focused",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "",
                  "annotations": {
                    "name": "grid",
                    "selector": ".slds-table_tree",
                    "restrict": ".slds-tree",
                    "variant": true,
                    "s1": "false"
                  },
                  "id": "grid",
                  "restrictees": [
                    {
                      "description": "",
                      "annotations": {
                        "selector": ".slds-table_tree__toggle",
                        "restrict": ".slds-table_tree button"
                      },
                      "id": ".slds-table_tree__toggle",
                      "restrictees": []
                    }
                  ],
                  "showcase": [
                    {
                      "title": "states",
                      "items": [
                        {
                          "id": "expanded",
                          "label": "Expanded"
                        },
                        {
                          "id": "deep-nesting",
                          "label": "Deeply nested branches"
                        }
                      ]
                    },
                    {
                      "title": "default",
                      "items": [
                        {
                          "id": "default"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "expanded",
                  "label": "Expanded"
                },
                {
                  "id": "deep-nesting",
                  "label": "Deeply nested branches"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "feeds": {
      "description": "#### Accessibility\n\nMost feeds have a media object containing the user's name and avatar image.\nIf both the image and the name link to the same location, add `tab-index=\"-1\"`\nto the `<a>` element so that assistive technology does not read out\nduplicate links.",
      "annotations": {
        "summary": "A feed consists of a list of recurring elements of similar types. Examples of a feed would be a discussion feed.",
        "base": true,
        "name": "feeds",
        "selector": ".slds-feed",
        "support": "dev-ready",
        "category": "experience",
        "type": "data-display"
      },
      "id": "feeds",
      "restrictees": [
        {
          "description": "A discussion feed consists of a list of posts. A `.slds-feed__item` contains a post and comments related to that post.",
          "annotations": {
            "name": "base",
            "selector": ".slds-feed",
            "restrict": "div",
            "support": "dev-ready",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "selector": ".slds-feed__list",
                "restrict": ".slds-feed ul",
                "required": true
              },
              "id": ".slds-feed__list",
              "restrictees": [
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-feed__item",
                    "restrict": ".slds-feed__list li",
                    "required": true
                  },
                  "id": ".slds-feed__item",
                  "restrictees": [
                    {
                      "description": "Container for feed item comments",
                      "annotations": {
                        "selector": ".slds-feed__item-comments",
                        "restrict": ".slds-feed__item div",
                        "notes": "Contains comment replies and publisher",
                        "required": true
                      },
                      "id": ".slds-feed__item-comments",
                      "restrictees": []
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "name": "post",
                "selector": ".slds-post",
                "restrict": ".slds-feed article",
                "variant": true
              },
              "id": "post",
              "restrictees": [
                {
                  "description": "Header region of a feed post",
                  "annotations": {
                    "selector": ".slds-post__header",
                    "restrict": ".slds-post header"
                  },
                  "id": ".slds-post__header",
                  "restrictees": []
                },
                {
                  "description": "Content region of a feed post",
                  "annotations": {
                    "selector": ".slds-post__content",
                    "restrict": ".slds-post div"
                  },
                  "id": ".slds-post__content",
                  "restrictees": []
                },
                {
                  "description": "Footer region of a feed post",
                  "annotations": {
                    "selector": ".slds-post__footer",
                    "restrict": ".slds-post footer"
                  },
                  "id": ".slds-post__footer",
                  "restrictees": [
                    {
                      "description": "Footer region that contains quick action items for post",
                      "annotations": {
                        "selector": ".slds-post__footer-actions-list",
                        "restrict": ".slds-post__footer ul"
                      },
                      "id": ".slds-post__footer-actions-list",
                      "restrictees": [
                        {
                          "description": "Action items within the feed post footer",
                          "annotations": {
                            "selector": ".slds-post__footer-action",
                            "restrict": ".slds-post__footer-actions-list button"
                          },
                          "id": ".slds-post__footer-action",
                          "restrictees": [
                            {
                              "description": "Active state for like button",
                              "annotations": {
                                "selector": ".slds-is-active",
                                "restrict": ".slds-post__footer-action",
                                "modifier": true
                              },
                              "id": ".slds-is-active",
                              "restrictees": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "description": "Footer region that contains read only items for post",
                      "annotations": {
                        "selector": ".slds-post__footer-meta-list",
                        "restrict": ".slds-post__footer ul"
                      },
                      "id": ".slds-post__footer-meta-list",
                      "restrictees": []
                    }
                  ]
                }
              ],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "post-with-liker-bar",
                      "label": "Like"
                    }
                  ]
                },
                {
                  "title": "examples",
                  "items": [
                    {
                      "id": "post-attachment-link",
                      "label": "Link attachment"
                    },
                    {
                      "id": "post-attachment-files",
                      "label": "Files(s) attachment"
                    },
                    {
                      "id": "post-with-comments",
                      "label": "With replies"
                    },
                    {
                      "id": "post-with-overflow",
                      "label": "Replies - Overflow Bar"
                    },
                    {
                      "id": "post-with-publisher-active",
                      "label": "Replies - Publisher active"
                    },
                    {
                      "id": "questions",
                      "label": "Question"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "radio-button-group": {
      "description": "",
      "annotations": {
        "summary": "A styled select list that can have a single entry checked at any one time.",
        "base": true,
        "name": "radio-button-group",
        "selector": ".slds-radio_button-group",
        "support": "dev-ready",
        "category": "base",
        "type": "data-entry",
        "role": "radiogroup"
      },
      "id": "radio-button-group",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes radio button",
            "name": "base",
            "selector": ".slds-radio_button-group",
            "restrict": ".slds-form-element div",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "selector": ".slds-radio_button",
                "restrict": ".slds-radio_button-group span"
              },
              "id": ".slds-radio_button",
              "restrictees": [
                {
                  "description": "Create styled button when adjacent to the input[radio] element",
                  "annotations": {
                    "selector": ".slds-radio_faux",
                    "restrict": ".slds-radio_button span"
                  },
                  "id": ".slds-radio_faux",
                  "restrictees": []
                },
                {
                  "description": "Label element inside of a radio button",
                  "annotations": {
                    "selector": ".slds-radio_button__label",
                    "restrict": ".slds-radio_button label"
                  },
                  "id": ".slds-radio_button__label",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "disabled",
                  "label": "Disabled"
                },
                {
                  "id": "required",
                  "label": "Required"
                },
                {
                  "id": "error",
                  "label": "Has error"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "docked-utility-bar": {
      "description": "",
      "annotations": {
        "summary": "Docked utility bar is a persistent bar that allows a user to continually use the app to complete tasks while expanding/collapsing utility panels.",
        "base": true,
        "name": "docked-utility-bar",
        "selector": ".slds-utility-bar_container",
        "support": "dev-ready"
      },
      "id": "docked-utility-bar",
      "restrictees": [
        {
          "description": "Fixed bar at the bottom of viewport, contains items",
          "annotations": {
            "name": "base",
            "selector": ".slds-utility-bar_container",
            "restrict": "footer",
            "support": "dev-ready",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Fixed bar at the bottom of viewport, contains items",
              "annotations": {
                "selector": ".slds-utility-bar",
                "restrict": ".slds-utility-bar_container ul"
              },
              "id": ".slds-utility-bar",
              "restrictees": [
                {
                  "description": "Notification indicator",
                  "annotations": {
                    "selector": ".slds-indicator_unread",
                    "restrict": ".slds-utility-bar abbr"
                  },
                  "id": ".slds-indicator_unread",
                  "restrictees": []
                },
                {
                  "description": "Items that invoke specific utility bar panel",
                  "annotations": {
                    "selector": ".slds-utility-bar__item",
                    "restrict": ".slds-utility-bar li"
                  },
                  "id": ".slds-utility-bar__item",
                  "restrictees": [
                    {
                      "description": "Creates styles for a utility bar item when it has a notification within its panel",
                      "annotations": {
                        "selector": ".slds-has-notification",
                        "restrict": ".slds-utility-bar__item"
                      },
                      "id": ".slds-has-notification",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "Button that invokes utility panel",
                  "annotations": {
                    "selector": ".slds-utility-bar__action",
                    "restrict": ".slds-utility-bar button"
                  },
                  "id": ".slds-utility-bar__action",
                  "restrictees": [
                    {
                      "description": "",
                      "annotations": {
                        "selector": ".slds-is-active",
                        "restrict": ".slds-utility-bar__action",
                        "modifier": true
                      },
                      "id": ".slds-is-active",
                      "restrictees": []
                    },
                    {
                      "description": "Container for utility bar item text, allows for multi-line text output",
                      "annotations": {
                        "selector": ".slds-utility-bar__text",
                        "restrict": ".slds-utility-bar__action > span"
                      },
                      "id": ".slds-utility-bar__text",
                      "restrictees": []
                    }
                  ]
                }
              ]
            },
            {
              "description": "Container of the utility panel",
              "annotations": {
                "selector": ".slds-utility-panel",
                "restrict": ".slds-utility-bar_container section"
              },
              "id": ".slds-utility-panel",
              "restrictees": [
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-is-open",
                    "restrict": ".slds-utility-panel",
                    "modifier": true
                  },
                  "id": ".slds-is-open",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "open",
                  "label": "Panel Open"
                },
                {
                  "id": "notification",
                  "label": "Item has notification"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "publishers": {
      "description": "To initialize the publisher, apply the `.slds-publisher` class to a containing\n`<div>`. The publisher consists of, but not limited to, a text input form\nelement that is either a plain text or rich text editor. A row of actionable\ninteractions, such as attaching additional content, adding followers and a submit button.\n\nThe variants of the publishers have different use cases, so please pay attention\nto the markup structure of each.",
      "annotations": {
        "summary": "A publisher is an advanced longform text input form element.",
        "base": true,
        "name": "publishers",
        "selector": ".slds-publisher",
        "support": "dev-ready",
        "category": "feature",
        "type": "data-entry",
        "role": "textbox"
      },
      "id": "publishers",
      "restrictees": [
        {
          "description": "The discussion feed publisher is found at the top of a feed stream. It contains\nbasic and advanced publishing capibilities.\n\nThe discussion feed is in a collapsed state by default. There are 3 states\nof the discussion feed that provide different feedback to the user. First,\nthe collapsed state, this indicates the user has not interacted with the\ndiscussion feed publisher. When the user initiates an interaction with the\npublisher, by either focusing of the textara or clicking the \"Share\" button,\nthrough javascript the class of `slds-is-active` should be applied to the\n`slds-publisher` div. This class will expand the publisher box and display\nadditional publisher actions.\n\nDuring the active state, before the user has begun typing or attaching\nadditional content, the \"Share\" button should be disabled by applying the\n`disabled` attribute to the `<textarea>`. When the user begins typing, the\n`disabled` attribute should be toggled off.",
          "annotations": {
            "summary": "Initializes a publisher",
            "name": "base",
            "selector": ".slds-publisher",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "selector": ".slds-is-active",
                "restrict": ".slds-publisher",
                "modifier": true
              },
              "id": ".slds-is-active",
              "restrictees": []
            },
            {
              "description": "Abstraction of the text input styles",
              "annotations": {
                "selector": ".slds-publisher__input",
                "restrict": ".slds-publisher textarea",
                "required": true
              },
              "id": ".slds-publisher__input",
              "restrictees": []
            },
            {
              "description": "Bottom row of actionable items",
              "annotations": {
                "selector": ".slds-publisher__actions",
                "restrict": ".slds-publisher div",
                "required": true
              },
              "id": ".slds-publisher__actions",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-publisher__toggle-visibility",
                "restrict": ".slds-publisher label, .slds-publisher ul",
                "required": true
              },
              "id": ".slds-publisher__toggle-visibility",
              "restrictees": []
            },
            {
              "description": "The comment publisher is found at the bottom of a discussion feed comment\nthread. It contains basic publishing capibilities.\n\nThe comment publisher is in a collapsed state by default. There are 4 states\nof the discussion feed that provide different feedback to the user. First,\nthe collapsed state, this indicates the user has not interacted with the\ncomment publisher. When the user initiates an interaction with the publisher,\nby either focusing of the textara or clicking the \"Comment\" button, through\njavascript the class of `slds-is-active` should be applied to the\n`slds-publisher` element. This class will expand the publisher box and\ndisplay additional publisher actions.\n\nDue to the implementation of the comment publisher design, we used a faux\ntextarea container and we'll need to apply the our focus state to that custom\ncontainer. Using javascript, the class `slds-has-focus` should be applied to\nthe `slds-publisher` element when the user interacts with `<textarea>`. When\nthe user loses focus on the `<textarea>`, the class `slds-has-focus` should\nbe toggled off from the `slds-publisher` element.\n\nDuring the active state, before the user has begun typing or attaching\nadditional content, the \"Comment\" button should be disabled by applying the\n`disabled` attribute to the `<textarea>`. When the user begins typing, the\n`disabled` attribute should be toggled off.",
              "annotations": {
                "summary": "Initiates publisher that is specific to commenting in threads",
                "name": "comment",
                "selector": ".slds-publisher_comment",
                "restrict": ".slds-publisher",
                "required": true,
                "variant": true
              },
              "id": "comment",
              "restrictees": [
                {
                  "description": "Applies focus to comment publisher container when inside `textarea`",
                  "annotations": {
                    "selector": ".slds-has-focus",
                    "restrict": ".slds-publisher_comment",
                    "notes": "Added through JavaScript",
                    "modifier": true
                  },
                  "id": ".slds-has-focus",
                  "restrictees": []
                }
              ],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "datepickers": {
      "description": "",
      "annotations": {
        "summary": "A datepicker is a non text input form element. You can select a single date or date range from a popup or inline calendar.",
        "base": true,
        "name": "datepickers",
        "selector": ".slds-datepicker",
        "support": "dev-ready",
        "category": "experience",
        "type": "data-entry",
        "role": "grid"
      },
      "id": "datepickers",
      "restrictees": [
        {
          "description": "If you desire a multi-select date range, the selected cell will need to have\n`.slds-is-selected-multi` applied. Another scenario would be a multi range\nselection spanning over two or more weeks. If this scenario is true, each\n`<tr>` will need the class `.slds-has-multi-row-selections` added.",
          "annotations": {
            "summary": "Initiates a datepicker component",
            "name": "base",
            "selector": ".slds-datepicker",
            "restrict": "div",
            "support": "dev-ready",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Style for calendar days",
              "annotations": {
                "selector": ".slds-day",
                "restrict": ".slds-datepicker td span",
                "required": true
              },
              "id": ".slds-day",
              "restrictees": []
            },
            {
              "description": "Indicates today",
              "annotations": {
                "selector": ".slds-is-today",
                "restrict": ".slds-datepicker td",
                "required": true
              },
              "id": ".slds-is-today",
              "restrictees": []
            },
            {
              "description": "Indicates selected days",
              "annotations": {
                "selector": ".slds-is-selected",
                "restrict": ".slds-datepicker td",
                "modifier": true
              },
              "id": ".slds-is-selected",
              "restrictees": []
            },
            {
              "description": "Indicates if selected days are apart of a date range",
              "annotations": {
                "selector": ".slds-is-selected-multi",
                "restrict": ".slds-datepicker td",
                "modifier": true
              },
              "id": ".slds-is-selected-multi",
              "restrictees": []
            },
            {
              "description": "Helper class that styles date range appropriately",
              "annotations": {
                "selector": ".slds-has-multi-row-selection",
                "restrict": ".slds-datepicker tr"
              },
              "id": ".slds-has-multi-row-selection",
              "restrictees": []
            },
            {
              "description": "Aligns filter items horizontally",
              "annotations": {
                "selector": ".slds-datepicker__filter",
                "restrict": ".slds-datepicker div",
                "required": true
              },
              "id": ".slds-datepicker__filter",
              "restrictees": []
            },
            {
              "description": "Spaces out month filter",
              "annotations": {
                "selector": ".slds-datepicker__month_filter",
                "restrict": ".slds-datepicker div",
                "required": true
              },
              "id": ".slds-datepicker__month_filter",
              "restrictees": []
            },
            {
              "description": "Container of the month table",
              "annotations": {
                "selector": ".slds-datepicker__month",
                "restrict": ".slds-datepicker table",
                "required": true
              },
              "id": ".slds-datepicker__month",
              "restrictees": []
            },
            {
              "description": "Indicates days that are in previous/next months",
              "annotations": {
                "selector": ".slds-disabled-text",
                "restrict": ".slds-datepicker td",
                "modifier": true
              },
              "id": ".slds-disabled-text",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "datepicker-day-selected",
                  "label": "Date selected"
                },
                {
                  "id": "datepicker-multi-day-selected",
                  "label": "Multiple Date Range Selected"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "files": {
      "description": "#### Accessibility\n\nEvery `<img>` you add to your site needs to have an `alt` attribute. If the image is informational, set the `alt` equal to a descriptive alternative for that image. If the image is decorative or redundant to adjacent text, set `alt=\"\"`, which conveys to assistive technology users that the image isn’t necessary for understanding the page. Avoid using generic strings like **photo**, **image**, or **icon** as alt values, as they don’t communicate valuable content to the user.",
      "annotations": {
        "summary": "Files are a representation of content uploaded as an attachment.",
        "base": true,
        "name": "files",
        "selector": ".slds-file",
        "support": "dev-ready"
      },
      "id": "files",
      "restrictees": [
        {
          "description": "A figure component is a self-contained unit of content, such as an image with an optional caption. The figure component should NOT be used with icons or logos. A figure can optionally be cropped to a specific ratio such as 16x9, 4x3 and 1x1 with the use of `.slds-image__crop` and passing in a ratio class such as `.slds-image__crop_16-by-9`.",
          "annotations": {
            "summary": "Initializes a file component",
            "name": "base",
            "selector": ".slds-file",
            "restrict": "figure, div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Set crop boundaries to a file component, set to 16:9 by default",
              "annotations": {
                "selector": ".slds-file__crop",
                "restrict": ".slds-file div, .slds-file a"
              },
              "id": ".slds-file__crop",
              "restrictees": [
                {
                  "description": "Crops file to a ratio of 1:1",
                  "annotations": {
                    "selector": ".slds-file__crop_1-by-1",
                    "restrict": ".slds-file__crop",
                    "modifier": true,
                    "group": "ratio"
                  },
                  "id": ".slds-file__crop_1-by-1",
                  "restrictees": []
                },
                {
                  "description": "Crops file to a ratio of 16:9",
                  "annotations": {
                    "selector": ".slds-file__crop_16-by-9",
                    "restrict": ".slds-file__crop",
                    "modifier": true,
                    "group": "ratio"
                  },
                  "id": ".slds-file__crop_16-by-9",
                  "restrictees": []
                },
                {
                  "description": "Crops file to a ratio of 4:3",
                  "annotations": {
                    "selector": ".slds-file__crop_4-by-3",
                    "restrict": ".slds-file__crop",
                    "modifier": true,
                    "group": "ratio"
                  },
                  "id": ".slds-file__crop_4-by-3",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Image caption associated to a file",
              "annotations": {
                "selector": ".slds-file__title",
                "restrict": ".slds-file figcaption, .slds-file div"
              },
              "id": ".slds-file__title",
              "restrictees": [
                {
                  "description": "Adds overlay to file",
                  "annotations": {
                    "selector": ".slds-file__title_overlay",
                    "restrict": ".slds-file__title"
                  },
                  "id": ".slds-file__title_overlay",
                  "restrictees": []
                },
                {
                  "description": "Creates card title bar on file",
                  "annotations": {
                    "selector": ".slds-file__title_card",
                    "restrict": ".slds-file__title"
                  },
                  "id": ".slds-file__title_card",
                  "restrictees": []
                },
                {
                  "description": "Creates gradient scrim bar on file",
                  "annotations": {
                    "selector": ".slds-file__title_scrim",
                    "restrict": ".slds-file__title"
                  },
                  "id": ".slds-file__title_scrim",
                  "restrictees": []
                },
                {
                  "description": "Hack to accomodate for text truncation next to actions menu buttons",
                  "annotations": {
                    "selector": ".slds-file-has-actions",
                    "restrict": ".slds-file__title"
                  },
                  "id": ".slds-file-has-actions",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "If text sits on top of image, apply an overlay with this class",
              "annotations": {
                "selector": ".slds-file_overlay",
                "restrict": ".slds-file div"
              },
              "id": ".slds-file_overlay",
              "restrictees": []
            },
            {
              "description": "Change style of image to a card look",
              "annotations": {
                "selector": ".slds-file_card",
                "restrict": ".slds-file div"
              },
              "id": ".slds-file_card",
              "restrictees": []
            },
            {
              "description": "When only image type is available, this class help position the file type icon",
              "annotations": {
                "selector": ".slds-file__icon",
                "restrict": ".slds-file div, .slds-file span"
              },
              "id": ".slds-file__icon",
              "restrictees": []
            },
            {
              "description": "This positions the action menu on the title bar",
              "annotations": {
                "selector": ".slds-file__actions-menu",
                "restrict": ".slds-file div"
              },
              "id": ".slds-file__actions-menu",
              "restrictees": []
            },
            {
              "description": "This adds an external icon to the top left side of the card",
              "annotations": {
                "selector": ".slds-file__external-icon",
                "restrict": ".slds-file div",
                "required": true
              },
              "id": ".slds-file__external-icon",
              "restrictees": []
            },
            {
              "description": "This changes the color of the loading icon",
              "annotations": {
                "selector": ".slds-file__loading-icon",
                "restrict": ".slds-file svg",
                "required": true
              },
              "id": ".slds-file__loading-icon",
              "restrictees": []
            },
            {
              "description": "This vertically centers the icon when there is no title bar",
              "annotations": {
                "selector": ".slds-file_center-icon",
                "restrict": ".slds-file"
              },
              "id": ".slds-file_center-icon",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "examples",
              "items": [
                {
                  "id": "attachment-file-no-image",
                  "label": "File with no image"
                },
                {
                  "id": "attachment-file-no-title",
                  "label": "File with no title"
                },
                {
                  "id": "attachment-file-with-actions",
                  "label": "File with actions"
                },
                {
                  "id": "attachment-file-with-no-title-actions",
                  "label": "File with no title + actions"
                },
                {
                  "id": "attachment-file-external-icon",
                  "label": "File with external icon"
                },
                {
                  "id": "attachment-file-loading-no-title",
                  "label": "File in loading state with title"
                },
                {
                  "id": "attachment-file-loading",
                  "label": "File in loading state without title"
                },
                {
                  "id": "multi-attachments",
                  "label": "< 3 file attachments"
                },
                {
                  "id": "multi-attachments-overflow",
                  "label": "> 3 file attachments"
                },
                {
                  "id": "link-attachment",
                  "label": "Link attachment"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "global-header": {
      "description": "",
      "annotations": {
        "summary": "The global header is the anchor for the Salesforce platform and spans all other parts of the UI. The functionality in the header is applicable across all contexts in the Salesforce ecosystem (internal or 3rd party).",
        "base": true,
        "name": "global-header",
        "selector": ".slds-global-header_container",
        "category": "feature",
        "type": "layout",
        "support": "dev-ready"
      },
      "id": "global-header",
      "restrictees": [
        {
          "description": "Container that fixes the global header to the top of the viewport,\ncontains global header element",
          "annotations": {
            "name": "base",
            "selector": ".slds-global-header_container",
            "restrict": "header",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "selector": ".slds-global-header",
                "restrict": ".slds-global-header_container div"
              },
              "id": ".slds-global-header",
              "restrictees": [
                {
                  "description": "A region within the global header",
                  "annotations": {
                    "selector": ".slds-global-header__item",
                    "restrict": ".slds-global-header div, .slds-global-header ul"
                  },
                  "id": ".slds-global-header__item",
                  "restrictees": [
                    {
                      "description": "Container of the global header logo",
                      "annotations": {
                        "selector": ".slds-global-header__logo",
                        "restrict": ".slds-global-header__item div",
                        "required": true
                      },
                      "id": ".slds-global-header__logo",
                      "restrictees": []
                    },
                    {
                      "description": "Button icons on the global header",
                      "annotations": {
                        "selector": ".slds-global-header__button_icon",
                        "restrict": ".slds-global-header__item button",
                        "required": true
                      },
                      "id": ".slds-global-header__button_icon",
                      "restrictees": []
                    },
                    {
                      "description": "Button icon specifically for global actions",
                      "annotations": {
                        "selector": ".slds-global-header__button_icon-actions",
                        "restrict": ".slds-global-header__item button",
                        "required": true
                      },
                      "id": ".slds-global-header__button_icon-actions",
                      "restrictees": []
                    },
                    {
                      "description": "Button icon specifically for global actions",
                      "annotations": {
                        "selector": ".slds-global-header__button_icon-favorites",
                        "restrict": ".slds-global-header__item button",
                        "required": true
                      },
                      "id": ".slds-global-header__button_icon-favorites",
                      "restrictees": [
                        {
                          "description": "Selected state for favorites button",
                          "annotations": {
                            "selector": ".slds-is-selected",
                            "restrict": ".slds-global-header__button_icon-favorites",
                            "modifier": true,
                            "group": "stateful"
                          },
                          "id": ".slds-is-selected",
                          "restrictees": []
                        },
                        {
                          "description": "Disabled state for favorites button",
                          "annotations": {
                            "selector": ".slds-is-disabled",
                            "restrict": ".slds-global-header__button_icon-favorites",
                            "modifier": true
                          },
                          "id": ".slds-is-disabled",
                          "restrictees": []
                        }
                      ]
                    },
                    {
                      "description": "Deal with sizing for global header icons",
                      "annotations": {
                        "selector": ".global-header__icon",
                        "restrict": ".slds-global-header__item svg",
                        "required": true
                      },
                      "id": ".global-header__icon",
                      "restrictees": []
                    },
                    {
                      "description": "Region that contains the search input, handles sizing",
                      "annotations": {
                        "selector": ".slds-global-header__item_search",
                        "restrict": ".slds-global-header__item:nth-child(2)"
                      },
                      "id": ".slds-global-header__item_search",
                      "restrictees": []
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "summary": "Handles styling for notification item interactions",
                "name": "notifications",
                "selector": ".slds-global-header__notification",
                "restrict": ".slds-global-header_container li",
                "variant": true
              },
              "id": "notifications",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "favorites-selected",
                  "label": "Favorites selected"
                },
                {
                  "id": "favorites-disabled",
                  "label": "Favorites disabled"
                },
                {
                  "id": "actions-active",
                  "label": "Global actions active"
                },
                {
                  "id": "global-header-setup-active",
                  "label": "Setup active"
                },
                {
                  "id": "global-header-search-active",
                  "label": "Active",
                  "script": "\n      document.getElementById('global-search-01').focus()\n    "
                },
                {
                  "id": "global-header-search-typeahead",
                  "label": "Typeahead",
                  "script": "\n      document.getElementById('global-search-01').focus()\n    "
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "split-view": {
      "description": "#### Accessibility\n\nThe list component of the Split View consists of an ARIA Listbox, and as\nsuch must obied by the following rules:\n\n- Each option can only be a single actionable element. No child actions are allowed\n- **Must** implement the keyboard interaction as described by the [ARIA Authoring Practices](https://www.w3.org/TR/wai-aria-practices/#Listbox)\n- For each open workspace tab, the corresponding option _should_ be set to `aria-selected=\"true\"`",
      "annotations": {
        "summary": "Split view is used to navigate between records in a list while staying on the same screen.",
        "base": true,
        "name": "split-view",
        "selector": ".slds-split-view_container",
        "support": "prototype",
        "category": "feature",
        "type": "navigation",
        "role": "expandable-panel"
      },
      "id": "split-view",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Wrapper of split view",
            "name": "base",
            "selector": ".slds-split-view_container",
            "restrict": "div",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Modifier to rotate the left arrow icon on close",
              "annotations": {
                "selector": ".slds-is-closed",
                "restrict": ".slds-split-view_container, .slds-split-view__toggle-button",
                "modifier": true,
                "group": "toggle"
              },
              "id": ".slds-is-closed",
              "restrictees": []
            },
            {
              "description": "Toggles open/close state of split view container",
              "annotations": {
                "selector": ".slds-is-open",
                "restrict": ".slds-split-view_container, .slds-split-view__toggle-button",
                "modifier": true,
                "group": "toggle"
              },
              "id": ".slds-is-open",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-split-view",
                "restrict": ".slds-split-view_container article",
                "required": true
              },
              "id": ".slds-split-view",
              "restrictees": [
                {
                  "description": "Header of split view\n\nContains elements such as the list filter, view switcher and refresh button",
                  "annotations": {
                    "selector": ".slds-split-view__header",
                    "restrict": ".slds-split-view header",
                    "required": true
                  },
                  "id": ".slds-split-view__header",
                  "restrictees": []
                },
                {
                  "description": "Column headers",
                  "annotations": {
                    "selector": ".slds-split-view__list-header",
                    "restrict": ".slds-split-view div",
                    "required": true
                  },
                  "id": ".slds-split-view__list-header",
                  "restrictees": []
                },
                {
                  "description": "Each row of the list of split view",
                  "annotations": {
                    "selector": ".slds-split-view__list-item",
                    "restrict": ".slds-split-view li",
                    "required": true
                  },
                  "id": ".slds-split-view__list-item",
                  "restrictees": [
                    {
                      "description": "Unread states\n\nPositions the dot indicator to the left of the content",
                      "annotations": {
                        "selector": ".slds-indicator_unread",
                        "restrict": ".slds-split-view__list-item abbr",
                        "required": true
                      },
                      "id": ".slds-indicator_unread",
                      "restrictees": []
                    },
                    {
                      "description": "Actionable row of split view",
                      "annotations": {
                        "selector": ".slds-split-view__list-item-action",
                        "restrict": ".slds-split-view__list-item a",
                        "required": true
                      },
                      "id": ".slds-split-view__list-item-action",
                      "restrictees": []
                    }
                  ]
                }
              ]
            },
            {
              "description": "Expand/Collapse button to toggle open/close state of split view",
              "annotations": {
                "selector": ".slds-split-view__toggle-button",
                "restrict": ".slds-split-view_container button",
                "required": true
              },
              "id": ".slds-split-view__toggle-button",
              "restrictees": [
                {
                  "description": "Modifier to rotate the left arrow icon on close",
                  "annotations": {
                    "selector": ".slds-is-closed",
                    "restrict": ".slds-split-view_container, .slds-split-view__toggle-button",
                    "modifier": true,
                    "group": "toggle"
                  },
                  "id": ".slds-is-closed",
                  "restrictees": []
                },
                {
                  "description": "Toggles open/close state of split view container",
                  "annotations": {
                    "selector": ".slds-is-open",
                    "restrict": ".slds-split-view_container, .slds-split-view__toggle-button",
                    "modifier": true,
                    "group": "toggle"
                  },
                  "id": ".slds-is-open",
                  "restrictees": []
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "selected-item",
                  "label": "Selected Item"
                },
                {
                  "id": "overflow",
                  "label": "Overflow"
                },
                {
                  "id": "unread",
                  "label": "Unread Items"
                },
                {
                  "id": "panel-collapsed",
                  "label": "Collapsed Panel"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "avatar": {
      "description": "An avatar can be circular or a rounded rectangle, depending on usage. The\ndefault is a rounded rectangle and requires `.slds-avatar` as the base class.\nUse a circle for all people-oriented objects that could potentially render\nas avatars. For a fully round avatar, add the `.slds-avatar_circle` class.\nFour additional classes are available for sizing.\n\nIf an image is unavailable, up to two letters can be used instead. If the\nrecord name contains two words, like first and last name, use the first\ncapitalized letter of each. For records that only have a single word name,\nuse the first two letters of that word using one capital and one lower case\nletter. If either an image or initials are unavailable, use the object icon as a fallback.",
      "annotations": {
        "summary": "An avatar component represents an object or entity",
        "base": true,
        "name": "avatar",
        "selector": ".slds-avatar",
        "support": "dev-ready",
        "category": "base",
        "type": "data-display"
      },
      "id": "avatar",
      "restrictees": [
        {
          "description": "An image is the preferred format for an avatar",
          "annotations": {
            "summary": "Creates an avatar component",
            "name": "base",
            "selector": ".slds-avatar",
            "restrict": "div, span, a",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Size modifier for avatars - x-small",
              "annotations": {
                "selector": ".slds-avatar_x-small",
                "restrict": ".slds-avatar",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-avatar_x-small",
              "restrictees": []
            },
            {
              "description": "Size modifier for avatars - small",
              "annotations": {
                "selector": ".slds-avatar_small",
                "restrict": ".slds-avatar",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-avatar_small",
              "restrictees": []
            },
            {
              "description": "Size modifier for avatars - medium",
              "annotations": {
                "selector": ".slds-avatar_medium",
                "restrict": ".slds-avatar",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-avatar_medium",
              "restrictees": []
            },
            {
              "description": "Size modifier for avatars - large",
              "annotations": {
                "selector": ".slds-avatar_large",
                "restrict": ".slds-avatar",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-avatar_large",
              "restrictees": []
            },
            {
              "description": "Make avatar a circle",
              "annotations": {
                "selector": ".slds-avatar_circle",
                "restrict": ".slds-avatar",
                "modifier": true
              },
              "id": ".slds-avatar_circle",
              "restrictees": []
            },
            {
              "description": "If an image is unavailable, up to two letters can be used instead.\nIf the record name contains two words, like first and last name, use\nthe first capitalized letter of each. For records that only have a\nsingle word name, use the first two letters of that word using one\ncapital and one lower case letter. The background color should match\nthe entity or object icon. If no image or initials are available,\nthe fallback should be the icon for the entity or object.",
              "annotations": {
                "summary": "Used for initials inside an avatar",
                "selector": ".slds-avatar__initials",
                "restrict": ".slds-avatar abbr"
              },
              "id": ".slds-avatar__initials",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "examples",
              "items": [
                {
                  "id": "fallback-user-initials",
                  "label": "Fallback - User initials"
                },
                {
                  "id": "fallback-user-icon",
                  "label": "Fallback - User icon"
                },
                {
                  "id": "fallback-entity-initials",
                  "label": "Fallback - Entity Initials"
                },
                {
                  "id": "fallback-entity-icon",
                  "label": "Fallback - Entity Icon"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "lookups": {
      "description": "**Note** — A lookup is a combobox component, please find implementation documentation under the\ncombobox component\n\nThe lookup can parse through single or multi scoped datasets. The parsed\ndataset can be filtered by single or multi option selects.\n\nYou can find the lookup component throughout most data fields that allow\ninline inputs. Most commonly used on **record home** and **object home**.\n\n#### Accessibility\n\nLookups allow the user to have dual keyboard focus: while focus in the input\nsearch field, the user can type text into the field and simultaneously use\narrow keys to navigate up and down the results list. Use the appropriate **ARIA**\nattributes in your markup in order to effectively communicate the relationship\nbetween the input field and the results list to users of assistive technology.\n\n**Expected markup:**\n\n- Input field has attributes `role=\"combobox\"`, `aria-autocomplete=\"list\"`\n- Input field has an `aria-expanded` attribute whose value is `false` when the results list is hidden, `true` when the results list is visible\n- Input field has an `aria-activedescendant` attribute whose value is the id of the highlighted results list option, no value if nothing’s highlighted in the list\n- Results list is an `<ul role=\"presentation\">`, where each item is containing an `<a href=\"javascript:void(0);\" role=\"option\">`\n\n**Expected keyboard interactions:**\n\n- Character keys filter the list\n- Up and down arrow keys cycle through the available options in the list and\nupdate the input field’s `aria-activedescendant` value\n- Enter key selects highlighted option and collapses the results list\n- Escape key collapses the results list",
      "annotations": {
        "summary": "Lookup is an autocomplete combobox that will search against a database object.",
        "name": "lookups",
        "support": "dev-ready",
        "base": true,
        "role": "combobox, listbox",
        "type": "user-input",
        "category": "experience",
        "s1": "false",
        "selector": ".slds-combobox-lookup"
      },
      "id": "lookups",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Container that manages layout when a listbox of pill options sit next to a combobox search input",
            "name": "base",
            "selector": ".slds-combobox-lookup",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Container that manages layout when a listbox of pill options sit next to a combobox search input",
                "name": "multi-entity",
                "selector": ".slds-has-object-switcher",
                "restrict": ".slds-combobox-lookup",
                "variant": true
              },
              "id": "multi-entity",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "focused",
                      "label": "Focused",
                      "script": "\n      document.getElementById('combobox-unique-id').focus()\n    "
                    },
                    {
                      "id": "open-item-focused",
                      "label": "Open - Item Focused"
                    },
                    {
                      "id": "options-selected",
                      "label": "Option(s) Selected"
                    },
                    {
                      "id": "focused-options-selected",
                      "label": "Focused - Option(s) Selected",
                      "script": "\n      document.getElementById('combobox-unique-id').focus()\n    "
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "focused",
                  "label": "Focused"
                },
                {
                  "id": "open-item-focused",
                  "label": "Open - Item Focused"
                },
                {
                  "id": "closed-option-selected",
                  "label": "Option Selected"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "spinners": {
      "description": "To use the spinner in a component, the parent of the spinner should be set to `position:relative`. You can use the utility class `.slds-is-relative` or add the declaration to your custom component CSS. If you are using the spinner in an `iframe` and dynamically loading DOM nodes after the page has loaded, it is recommended that you set the `.slds-spinner_container` to `position:fixed` so that it remains centered in the viewport.\n\nThe background overlay for the spinner is an optional element.\n\n#### Accessibility\n\nA spinner should have the Aria `role=\"status\"` and contain assistive text that explains what is currently happening.",
      "annotations": {
        "summary": "Spinners are CSS loading indicators that should be shown when retrieving data or performing slow computations. In some cases, the first time a parent component loads, a stencil is preferred to indicate network activity.",
        "base": true,
        "name": "spinners",
        "selector": ".slds-spinner",
        "support": "dev-ready",
        "category": "feature",
        "type": "loading",
        "role": "alert"
      },
      "id": "spinners",
      "restrictees": [
        {
          "description": "This is the gray base class for spinner",
          "annotations": {
            "name": "base",
            "selector": ".slds-spinner",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "This creates two of the circles",
              "annotations": {
                "selector": ".slds-spinner__dot-a",
                "restrict": ".slds-spinner div",
                "required": true
              },
              "id": ".slds-spinner__dot-a",
              "restrictees": []
            },
            {
              "description": "This creates two of the circles",
              "annotations": {
                "selector": ".slds-spinner__dot-b",
                "restrict": ".slds-spinner div",
                "required": true
              },
              "id": ".slds-spinner__dot-b",
              "restrictees": []
            },
            {
              "description": "This creates the blue brand spinner",
              "annotations": {
                "selector": ".slds-spinner_brand",
                "restrict": ".slds-spinner",
                "modifier": true,
                "group": "color"
              },
              "id": ".slds-spinner_brand",
              "restrictees": []
            },
            {
              "description": "This creates the inverse spinner",
              "annotations": {
                "selector": ".slds-spinner_inverse",
                "restrict": ".slds-spinner",
                "modifier": true,
                "group": "color"
              },
              "id": ".slds-spinner_inverse",
              "restrictees": []
            },
            {
              "description": "This is the extra extra small spinner",
              "annotations": {
                "selector": ".slds-spinner_xx-small",
                "restrict": ".slds-spinner",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-spinner_xx-small",
              "restrictees": []
            },
            {
              "description": "This is the extra small spinner",
              "annotations": {
                "selector": ".slds-spinner_x-small",
                "restrict": ".slds-spinner",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-spinner_x-small",
              "restrictees": []
            },
            {
              "description": "This is the small spinner",
              "annotations": {
                "selector": ".slds-spinner_small",
                "restrict": ".slds-spinner",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-spinner_small",
              "restrictees": []
            },
            {
              "description": "This is the medium spinner",
              "annotations": {
                "selector": ".slds-spinner_medium",
                "restrict": ".slds-spinner",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-spinner_medium",
              "restrictees": []
            },
            {
              "description": "This is the large spinner",
              "annotations": {
                "selector": ".slds-spinner_large",
                "restrict": ".slds-spinner",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-spinner_large",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "examples",
              "items": [
                {
                  "id": "without-container",
                  "label": "Without Container",
                  "description": "A container is not required to use the spinner. Here, it is placed on a dark background to illustrate there is nothing there. The spinner will position itself to the closest positioned parent. So if you want it to spin over a single component, the class <code>.slds-is-relative</code> can be added to the parent."
                },
                {
                  "id": "with-container",
                  "label": "With Container",
                  "description": "Here, the regular spinner container is used making the dark background look lighter. The spinner container will position itself to the closest positioned parent. So if you want it to spin over a single component, the class <code>.slds-is-relative</code> can be added to the parent."
                },
                {
                  "id": "fixed-container",
                  "label": "Fixed Container",
                  "description": "The spinner container may be used with a container with fixed positioning by adding the <code>.slds-is-fixed</code> class to the container. This may be needed if you are dynamically loading portions of a component after the spinner is showing."
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "pills": {
      "description": "To create a pill, apply the `.slds-pill` class on a `<span>`.\n\nDepending on your context, you will either need a linked pill or a pill option inside of a listbox.\n\nFor linked pills, a modifier class of `slds-pill_link` needs to be added to the existing `<span>` with the classname of `slds-pill`. You need an `<a>` inside of the span with the `slds-pill_link` class. The `<a>` will get the classname of `slds-pill__action`. This will treat the interactions differently from an unlinked pill option inside of a listbox.\n\nFor both linked pills and unlinked pill options, a `<span>` with the classname of `slds-pill__label` should contain the string of text describing the pill object.\n\nNote, that a linked pill should not be used as a pill option inside of a listbox.\n\nAdditionally, a pill can have an icon or image that sits to the left-hand side of the `.slds-pill__label`. That icon or image should receive the class `.slds-pill__icon_container`.\n\nYou may also want the functionality to remove the pill as a selection. An \"X\" icon is normally used and will sit to the right-hand side of the `.slds-pill__label`. That icon should receive the class `.slds-pill__remove`.\n\nA `.slds-pill_container` can be used as a visual container for multiple pill(s).",
      "annotations": {
        "summary": "A pill represents an object that can be viewed with or without an icon",
        "base": true,
        "name": "pills",
        "selector": ".slds-pill",
        "support": "dev-ready"
      },
      "id": "pills",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes pill",
            "name": "base",
            "selector": ".slds-pill",
            "restrict": "span",
            "support": "dev-ready",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Modifier that removes border and background from a pill",
              "annotations": {
                "selector": ".slds-pill_bare",
                "restrict": ".slds-pill",
                "modifier": true
              },
              "id": ".slds-pill_bare",
              "restrictees": []
            },
            {
              "description": "Line of text inside a pill",
              "annotations": {
                "selector": ".slds-pill__label",
                "restrict": ".slds-pill a, .slds-pill span"
              },
              "id": ".slds-pill__label",
              "restrictees": []
            },
            {
              "description": "Initializes pill icon or avatar that sits to the left of the label",
              "annotations": {
                "selector": ".slds-pill__icon_container",
                "restrict": ".slds-pill span"
              },
              "id": ".slds-pill__icon_container",
              "restrictees": []
            },
            {
              "description": "Initializes remove icon in pill that sits to the right of the label",
              "annotations": {
                "selector": ".slds-pill__remove",
                "restrict": ".slds-pill button, .slds-pill span"
              },
              "id": ".slds-pill__remove",
              "restrictees": []
            },
            {
              "description": "Creates a pill with a hyperlink",
              "annotations": {
                "selector": ".slds-pill_link",
                "restrict": ".slds-pill"
              },
              "id": ".slds-pill_link",
              "restrictees": [
                {
                  "description": "Actionable element inside of pill with hyperlink",
                  "annotations": {
                    "selector": ".slds-pill__action",
                    "restrict": ".slds-pill_link a"
                  },
                  "id": ".slds-pill__action",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Pill error styles",
              "annotations": {
                "selector": ".slds-has-error",
                "restrict": ".slds-pill",
                "modifier": true
              },
              "id": ".slds-has-error",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "name": "listbox-of-pill-options",
                "selector": "[role=\"option\"]",
                "restrict": ".slds-pill",
                "variant": true
              },
              "id": "listbox-of-pill-options",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "listbox-pill-with-icon",
                      "label": "With icon"
                    },
                    {
                      "id": "listbox-pill-with-avatar",
                      "label": "With avatar"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "examples",
              "items": [
                {
                  "id": "icon",
                  "label": "With icon"
                },
                {
                  "id": "avatar",
                  "label": "With avatar"
                },
                {
                  "id": "truncated",
                  "label": "Truncated"
                },
                {
                  "id": "container",
                  "label": "Pill with Container"
                },
                {
                  "id": "error",
                  "label": "Error"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "icons": {
      "description": "Five separate SVG sprites are used to create icons — [action](/icons/#action),\n[custom](/icons/#custom), [doctype](/icons/#doctype), [standard](/icons/#standard)\nand [utility](/icons/#utility). Link to the icon SVG sprite by targeting the\nicon’s hash/ID value in the use href attribute. (You can find the values on\nthe [icon page](/icons/).)\n\nWhen placing the icon code into your page, customize the path in the `use`\nattribute of the `svg` to the proper path and icon name for your specific\nicon. For example, the _case_ icon in the _standard_ sprite would have a\npath like this:\n\n```\n<svg aria-hidden=\"true\" class=\"slds-icon\" title=\"when needed\">\n  <use xlink:href=\"/assets/icons/standard-sprite/svg/symbols.svg#case\"></use>\n</svg>\n```\n\n- *Note:** If an icon has more than one word in the name, it should be\nincluded in the `use` attribute with the underscore separator as shown on\nthe icon page. For example: log_a_call.\n\n<h3 class=\"site-text-heading--label\">Changing the background of an icon</h3>\n\nChange a background color using composed class names:\n\n```css\n.slds-icon-[sprite name]-[icon name] {}\n```\n\nPlace the class on the `.slds-icon_container`.\n\n```html\n<!-- \"account\" icon in the \"standard\" icon set -->\n<div class=\"slds-icon_container slds-icon-standard-account\">\n  ...\n</div>\n```\n\nSome icon names have more than one word, separated by `_` underscores.\nReplace underscores with dashes when composing the class name. So `log_a_call`\nin the standard icon set becomes `.slds-icon-action-log-a-call`.\n\n#### Accessibility\n\nIcons require a `span` with the `.slds-icon_container` class. This contains\nboth the `svg` with the base `.slds-icon` class and, if needed, the\ndescription for assistive screen readers inside a `span` with the\n`.slds-assistive-text` class. A `title` attribute is necessary if the icon\nsits alone and a sighted user might need to hover for a description. If an\nicon has visible descriptive text, no `title` or extra `.slds-assistive-text`\nis required.\n\n- **Note:** You must require SLDS in your application for SVG sprites to work.\nIf you’re using Visualforce, see [the Visualforce tutorial](/platforms/visualforce).\nIf you’re using [Lightning components, see this documentation](/platforms/lightning).\n\nYou can access the SVG sprites by downloading the entire [CSS Framework or\njust the icons](/downloads). To include a sprite in your application, the\nrecommended method is to place it into the page as the first element inside\nthe `body` element. Alternatively, you can leave the sprite in the\nassets/icons directory and link to it from your page. To render a sprited\nicon, add the tiny [SVG for Everybody](https://github.com/jonathantneal/svg4everybody)\nscript for Internet Explorer.\n\nWhen placed into the `body`, the SVG sprite takes up space in the page. Use\neither `display:none` or `position:absolute` and set both the width and\nheight to zero.\n\n```\n<body>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"0\" height=\"0\" style=\"position:absolute\">\n    <symbol id=\"announcement\" viewBox=\"0 0 24 24\">\n      <path d=\"M10.5 21l-.6-.5c-.7-.5-.7-1.4-.7-1.9v-1.3c0-.4-.3-.7-.7-.7H5.8c-.4 0-.7.3-.7.7v3.6c0 1.2.7 2.2 1.9 2.2h2.2c1.4 0 1.5-.9 1.5-.9s.2-.9-.2-1.2zM20.8 8.3V2c0-1.1-1.4-1.4-2.2-.7l-4.1 3.9c-.6.5-1.4.8-2.3.8h-7C2.8 6 .9 8.1.9 10.5v.1c0 2.4 1.9 4.2 4.3 4.2h7c.9 0 1.7.3 2.4.9l4 4c.8.7 2.2.4 2.2-.7v-6.3c1.4 0 2.2-.9 2.2-2.2 0-1.2-.8-2.2-2.2-2.2z\" />\n    </symbol>\n    <!-- follow with the sprited list of svgs -->\n  </svg>\n  ...\n```",
      "annotations": {
        "summary": "Icons provide visual context and enhance usability. Looking for the icons? Go to [Resources › Icons](/icons/).",
        "base": true,
        "name": "icons",
        "selector": ".slds-icon_container",
        "support": "dev-ready"
      },
      "id": "icons",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Container for icons",
            "name": "base",
            "selector": ".slds-icon_container",
            "restrict": "span, div",
            "notes": "Used when an icon with a background color is accompanied by `.slds-assistive-text` and also receives a `background-color` class",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "summary": "Action icons",
                "name": "action",
                "selector": "[class*='slds-icon-action-']",
                "restrict": ".slds-icon_container",
                "variant": true
              },
              "id": "action",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "summary": "Circle container for icons",
                "selector": ".slds-icon_container_circle",
                "restrict": ".slds-icon_container"
              },
              "id": ".slds-icon_container_circle",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-icon",
                "restrict": ".slds-icon_container svg, svg",
                "required": true
              },
              "id": ".slds-icon",
              "restrictees": [
                {
                  "description": "depreacted",
                  "annotations": {
                    "selector": ".slds-icon_xx-small",
                    "restrict": ".slds-icon",
                    "modifier": true,
                    "group": "size"
                  },
                  "id": ".slds-icon_xx-small",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-icon_x-small",
                    "restrict": ".slds-icon",
                    "modifier": true,
                    "group": "size"
                  },
                  "id": ".slds-icon_x-small",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-icon_small",
                    "restrict": ".slds-icon",
                    "modifier": true,
                    "group": "size"
                  },
                  "id": ".slds-icon_small",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-icon_large",
                    "restrict": ".slds-icon",
                    "modifier": true,
                    "group": "size"
                  },
                  "id": ".slds-icon_large",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-icon-text-default",
                    "restrict": ".slds-icon",
                    "modifier": true,
                    "group": "color"
                  },
                  "id": ".slds-icon-text-default",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-icon-text-warning",
                    "restrict": ".slds-icon",
                    "modifier": true,
                    "group": "color"
                  },
                  "id": ".slds-icon-text-warning",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-icon-text-error",
                    "restrict": ".slds-icon",
                    "modifier": true,
                    "group": "color"
                  },
                  "id": ".slds-icon-text-error",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-icon-text-light",
                    "restrict": ".slds-icon",
                    "modifier": true,
                    "group": "color"
                  },
                  "id": ".slds-icon-text-light",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Custom icons have a rounded square shape and use a class on the container\nfor the background color.",
              "annotations": {
                "summary": "Custom icons",
                "name": "custom",
                "selector": "[class*='slds-icon-custom-']",
                "restrict": ".slds-icon_container",
                "variant": true
              },
              "id": "custom",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "summary": "Container for icons",
                "name": "doctype",
                "selector": "[class*='slds-icon-doctype-']",
                "restrict": ".slds-icon_container",
                "variant": true
              },
              "id": "doctype",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "Standard icons have a rounded square shape and use a class on the container\nfor the background color.",
              "annotations": {
                "summary": "Standard icons",
                "name": "standard",
                "selector": "[class*='slds-icon-standard-']",
                "restrict": ".slds-icon_container",
                "variant": true
              },
              "id": "standard",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "textarea": {
      "description": "You can style the HTML `<textarea>` element to align with the\nSalesforce brand by using the class `.slds-textarea` on the `<textarea>` element.",
      "annotations": {
        "summary": "Textarea inputs are used for freeform data entry",
        "base": true,
        "name": "textarea",
        "selector": ".slds-textarea",
        "support": "dev-ready",
        "category": "base",
        "type": "data-entry",
        "role": "textbox"
      },
      "id": "textarea",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initialize textarea",
            "name": "base",
            "selector": ".slds-textarea",
            "restrict": "textarea",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "disabled",
                  "label": "Disabled"
                },
                {
                  "id": "required",
                  "label": "Required"
                },
                {
                  "id": "error",
                  "label": "Error"
                },
                {
                  "id": "read-only",
                  "label": "Read only"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "docked-composer": {
      "description": "The docked composer relies heavily on utility classes to piece together the layout so please pay close attention to the markup and classes.\n\nThe overflow menu for docked composer, `.slds-docked-composer_overflow`, displays when the number of docked composers exceeds the width of the viewport. The overflow pill displays with a number indicator for all hidden docked composers. A user can invoke a popover with all available docked composers and replace the furthest left docked composer with the one being selected.\n\nWhen a user clicks on the \"pop out\" icon in the `.slds-docked-composer__header`, a modal displays and contains the task that was currently in the docked composer.",
      "annotations": {
        "summary": "Docked Composer is a persistent utility bar that allows a user to continually use the app to complete tasks or gather information while expanding/collapsing a composer window.",
        "base": true,
        "name": "docked-composer",
        "selector": ".slds-docked-composer",
        "support": "dev-ready",
        "s1": "false"
      },
      "id": "docked-composer",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "variant": true,
            "name": "base",
            "selector": ".slds-docked-composer",
            "restrict": "section, div",
            "support": "dev-ready"
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "selector": ".slds-has-focus",
                "restrict": ".slds-docked-composer",
                "modifier": true,
                "group": "interaction"
              },
              "id": ".slds-has-focus",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-is-open",
                "restrict": ".slds-docked-composer",
                "modifier": true,
                "group": "visibility"
              },
              "id": ".slds-is-open",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-is-closed",
                "restrict": ".slds-docked-composer",
                "modifier": true,
                "group": "visibility"
              },
              "id": ".slds-is-closed",
              "restrictees": []
            },
            {
              "description": "Bar at the top of the composer that contains actionable items to invoke,\nsuch as minimizing, popping out the composer and removing the composer.",
              "annotations": {
                "selector": ".slds-docked-composer__header",
                "restrict": ".slds-docked-composer header"
              },
              "id": ".slds-docked-composer__header",
              "restrictees": []
            },
            {
              "description": "Primary area within docked composer that contains specific task",
              "annotations": {
                "selector": ".slds-docked-composer__body",
                "restrict": ".slds-docked-composer div"
              },
              "id": ".slds-docked-composer__body",
              "restrictees": [
                {
                  "description": "",
                  "annotations": {
                    "selector": ".slds-docked-composer__body_form",
                    "restrict": ".slds-docked-composer__body"
                  },
                  "id": ".slds-docked-composer__body_form",
                  "restrictees": []
                },
                {
                  "description": "",
                  "annotations": {
                    "summary": "Initiazes email composer inside of a docked composer",
                    "selector": ".slds-email-composer",
                    "restrict": ".slds-docked-composer__body div"
                  },
                  "id": ".slds-email-composer",
                  "restrictees": [
                    {
                      "description": "",
                      "annotations": {
                        "summary": "Modifier combobox when used inside of email composer",
                        "selector": ".slds-email-composer__combobox",
                        "restrict": ".slds-email-composer div"
                      },
                      "id": ".slds-email-composer__combobox",
                      "restrictees": []
                    },
                    {
                      "description": "",
                      "annotations": {
                        "summary": "Provides styles for recipient labels inside of email composer",
                        "selector": ".slds-email-composer__recipient",
                        "restrict": ".slds-email-composer label"
                      },
                      "id": ".slds-email-composer__recipient",
                      "restrictees": []
                    }
                  ]
                }
              ]
            },
            {
              "description": "Within the docked composer body, the lead is the first region",
              "annotations": {
                "selector": ".slds-docked-composer__lead",
                "restrict": ".slds-docked-composer div"
              },
              "id": ".slds-docked-composer__lead",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "selector": ".slds-docked-composer__toolbar",
                "restrict": ".slds-docked-composer div"
              },
              "id": ".slds-docked-composer__toolbar",
              "restrictees": []
            },
            {
              "description": "Bar at the bottom of the composer that contains actionable items to\ninvoke, such as saving, associating relationships and adding content.",
              "annotations": {
                "selector": ".slds-docked-composer__footer",
                "restrict": ".slds-docked-composer footer"
              },
              "id": ".slds-docked-composer__footer",
              "restrictees": []
            },
            {
              "description": "When the number of docked composer exceed the width of the viewport, this class modifies the docked composer styles",
              "annotations": {
                "selector": ".slds-docked-composer_overflow",
                "restrict": ".slds-docked-composer",
                "required": true
              },
              "id": ".slds-docked-composer_overflow",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "single-composer-open",
                  "label": "Open"
                },
                {
                  "id": "single-composer-focused",
                  "label": "Focused"
                },
                {
                  "id": "single-composer-closed",
                  "label": "Closed"
                },
                {
                  "id": "single-composer-closed-focused",
                  "label": "Closed Focused"
                },
                {
                  "id": "single-composer-popout",
                  "label": "Popout"
                },
                {
                  "id": "multiple-composer-overflow",
                  "label": "With Overflow Menu"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "task",
                  "label": "Log a Task"
                },
                {
                  "id": "voice-composer-queued",
                  "label": "Voice - Queued"
                },
                {
                  "id": "voice-composer-ringing",
                  "label": "Voice - Ringing"
                },
                {
                  "id": "voice-composer-connected",
                  "label": "Voice - Connected"
                },
                {
                  "id": "voice-composer-cancelled",
                  "label": "Voice - Cancelled"
                },
                {
                  "id": "voice-composer-busy",
                  "label": "Voice - Busy"
                },
                {
                  "id": "voice-composer-failed",
                  "label": "Voice - Call Failed"
                },
                {
                  "id": "voice-composer-no-answer",
                  "label": "Voice - No Answer"
                },
                {
                  "id": "voice-composer-call-finished",
                  "label": "Voice - Call Finished"
                },
                {
                  "id": "voice-composer-call-incoming",
                  "label": "Voice - Call Incoming"
                },
                {
                  "id": "voice-composer-call-logged",
                  "label": "Voice - Log a Call"
                },
                {
                  "id": "email",
                  "label": "Email Composer"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "scoped-tabs": {
      "description": "Because tab sets can be nested, pay close attention to the markup. They are\nconstructed to prevent styles from leaking from parent tab sets into child tab sets.\n\n# JavaScript Needs\n\nThe active tab has two markup requirements:\n\n- The `.slds-active` class should be placed on the `li` with `.slds-tabs_{variant}__item`.\n- The corresponding `.slds-tabs_{variant}__content` container receives `.slds-show`.\n\nInactive `.slds-tabs_{variant}__content` containers receive `.slds-hide`.\nWhen the user clicks a different tab, move the `.slds-active` class and\ntoggle the `.slds-hide`/`.slds-show` classes.\n\n#### Accessibility\n\nTabbed UIs have three parts with specific **ARIA** role requirements:\n\n- The tab list, which should have `role=\"tablist\"`\n- The tabs in that list, which should each be an `<a role=\"tab\">` anchor wrapped in a `<li role=\"presentation\">` list item\n- The tab panels, which display each tab’s content and should each have `role=\"tabpanel\"`\n\n**Expected markup:**\n\n- Selected tab’s anchor has `aria-selected=\"true\"`, all other tabs’ anchors have `aria-selected=\"false\"`\n- Selected tab’s anchor has `tabindex=\"0\"`, all other tabs have `tabindex=\"-1\"`\n- Each tab’s anchor has an `aria-controls` attribute whose value is the id of the associated `<div role=\"tabpanel\">`\n- Each tab panel has an `aria-labelledby` attribute whose value is the id of its associated `<a role=\"tab\">`\n\n**Expected keyboard interactions:**\n\n- Arrow keys, when focus is on selected tab, cycle selection to the next or previous tab\n- Tab key, when focus is before the tab list, moves focus to the selected tab\n- Tab key, when focus is on selected tab, moves focus into the selected tab’s associated tab panel or to the next focusable element on the page if that panel has no focusable elements\n- Shift+Tab keys, when focus is on first element in a tab panel, move focus to the selected tab",
      "annotations": {
        "summary": "A tab keeps related content in a single container that is shown and hidden through navigation.",
        "base": true,
        "name": "scoped-tabs",
        "selector": ".slds-tabs_scoped",
        "support": "dev-ready",
        "category": "base",
        "type": "navigation",
        "role": "tablist"
      },
      "id": "scoped-tabs",
      "restrictees": [
        {
          "description": "A scoped tabset style has a closed container with a defined border. Initialize\na scoped tab set by applying the `.slds-tab_scoped` class to the containing\n`<div>` around the tab list and tab panels. The `<ul>` element also requires\nthe class `.slds-tab_scoped__nav` to prevent styles from bleeding into nested tabs.",
          "annotations": {
            "summary": "Initializes scoped tabs",
            "name": "base",
            "selector": ".slds-tabs_scoped",
            "restrict": "div",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Creates the container for the default tabs",
              "annotations": {
                "selector": ".slds-tabs_scoped__nav",
                "restrict": ".slds-tabs_scoped ul",
                "required": true
              },
              "id": ".slds-tabs_scoped__nav",
              "restrictees": []
            },
            {
              "description": "Styles each list item as a single tab",
              "annotations": {
                "selector": ".slds-tabs_scoped__item",
                "restrict": ".slds-tabs_scoped ul li",
                "required": true
              },
              "id": ".slds-tabs_scoped__item",
              "restrictees": [
                {
                  "description": "Styles each actionable element inside each tab item",
                  "annotations": {
                    "selector": ".slds-tabs_scoped__link",
                    "restrict": ".slds-tabs_scoped__item a",
                    "required": true
                  },
                  "id": ".slds-tabs_scoped__link",
                  "restrictees": []
                },
                {
                  "description": "Active state for a tab item",
                  "annotations": {
                    "selector": ".slds-is-active",
                    "restrict": ".slds-tabs_scoped__item",
                    "notes": "Required on the `<li>` element that is associated with the active tab panel",
                    "modifier": true
                  },
                  "id": ".slds-is-active",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Styles each tab content wrapper",
              "annotations": {
                "selector": ".slds-tabs_scoped__content",
                "restrict": ".slds-tabs_scoped div",
                "required": true
              },
              "id": ".slds-tabs_scoped__content",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "selected",
                  "label": "Item Two Selected"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "visual-picker": {
      "description": "",
      "annotations": {
        "summary": "A visual picker can be either radio buttons, checkboxes, or links that are visually enhanced.",
        "base": true,
        "name": "visual-picker",
        "selector": ".slds-visual-picker",
        "support": "dev-ready"
      },
      "id": "visual-picker",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes a visual picker component",
            "name": "coverable-content",
            "selector": ".slds-visual-picker",
            "restrict": "div",
            "variant": true
          },
          "id": "coverable-content",
          "restrictees": [
            {
              "description": "Visual container for icon and text",
              "annotations": {
                "selector": ".slds-visual-picker__figure",
                "restrict": ".slds-visual-picker div, .slds-visual-picker span"
              },
              "id": ".slds-visual-picker__figure",
              "restrictees": []
            },
            {
              "description": "Size modifier to adjust to the default size of medium",
              "annotations": {
                "selector": ".slds-visual-picker_medium",
                "restrict": ".slds-visual-picker",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-visual-picker_medium",
              "restrictees": []
            },
            {
              "description": "Size modifier to adjust to the size of large",
              "annotations": {
                "selector": ".slds-visual-picker_large",
                "restrict": ".slds-visual-picker",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-visual-picker_large",
              "restrictees": []
            },
            {
              "description": "Text area that sits outside the visual picker",
              "annotations": {
                "selector": ".slds-visual-picker__body",
                "restrict": ".slds-visual-picker span"
              },
              "id": ".slds-visual-picker__body",
              "restrictees": []
            },
            {
              "description": "Checkmark that is visibily toggled when input is checked",
              "annotations": {
                "name": "non-coverable-content",
                "selector": ".slds-visual-picker__text-check",
                "restrict": ".slds-visual-picker span",
                "variant": true
              },
              "id": "non-coverable-content",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "disabled",
                      "label": "Disabled option"
                    }
                  ]
                },
                {
                  "title": "examples",
                  "items": [
                    {
                      "id": "link",
                      "label": "Text link"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "disabled",
                  "label": "Disabled option"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "checkbox-group",
                  "label": "Checkbox group"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "checkbox-button": {
      "description": "The ‘add button’ is similar to a checkbox in that it presents a user with a\nbinary choice for an item. However, the only action a user can take is to\nadd (or remove) an entity. When a user clicks the add button, the entity is\nstored, similar to an ‘add to cart’ experience, until the user saves changes.\n\nThe add button is useful for increasing clarity. Since the button only adds\nor removes entities, the user knows the action they will prompt upon click.\nThe add button also provides a clear visual affordance (in SLDS, we use the\n‘+’ icon as an metaphor for ‘add’) and a large target to take this action.\n\nUse the add button if the component you’re building:\n- Exists without other multi-select elements (i.e. checkboxes)\n- Allows users to select multiple entities\n- Semantically fits the add/remove model",
      "annotations": {
        "summary": "A styled checkable input that communicates if an option is being added to a group",
        "base": true,
        "name": "checkbox-button",
        "selector": ".slds-checkbox_add-button",
        "support": "dev-ready",
        "category": "base",
        "type": "data-entry",
        "role": "checkbox"
      },
      "id": "checkbox-button",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes checkbox add button",
            "name": "base",
            "selector": ".slds-checkbox_add-button",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "checkbox-add-button-checked",
                  "label": "Checked"
                },
                {
                  "id": "checkbox-add-button-disabled",
                  "label": "Disabled"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "walkthrough": {
      "description": "",
      "annotations": {
        "summary": "Walkthrough components are used to provide an interactive and educational prospect experience for setup.",
        "base": true,
        "name": "walkthrough",
        "selector": ".slds-trial-header",
        "support": "dev-ready"
      },
      "id": "walkthrough",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Sets styles for trial header bar",
            "name": "header",
            "selector": ".slds-trial-header",
            "restrict": "div",
            "variant": true
          },
          "id": "header",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "menu-open",
                  "label": "Tour Menu Open"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "select": {
      "description": "The HTML `<select>` element presents a menu of options. The options within\nthe menu are represented by `<option>` elements that you can group with\n`<optgroup>` elements. You can pre-select options for the user.\n\nFor a multiple options selections, adding the attribute `multiple` to\nthe `<select>` will enable this functionality. Note, if you need multiple\noption selections, you will need to remove the\n`<div class=\"slds-select_container\">` from the DOM, otherwise you'll get\ndisplay issues.",
      "annotations": {
        "summary": "Select element presents a menu of options.",
        "base": true,
        "name": "select",
        "selector": ".slds-select",
        "support": "dev-ready",
        "category": "base",
        "type": "data-entry",
        "role": "listbox"
      },
      "id": "select",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes select",
            "name": "base",
            "selector": ".slds-select",
            "restrict": "select",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "select-required",
                  "label": "Required"
                },
                {
                  "id": "select-error",
                  "label": "Error"
                },
                {
                  "id": "select-disabled",
                  "label": "Disabled"
                },
                {
                  "id": "select-multiple",
                  "label": "Multiple Selection"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "alert": {
      "description": "#### Accessibility\n\nNotifications should contain `role=\"alert\"` on the container to signal to\nassistive technology that they require the user’s immediate attention. Use a\nspan with `.slds-assistive-text` to let the user know what type of notification it is.",
      "annotations": {
        "summary": "Alert banners communicate a state that affects the entire system, not just a feature or page. It persists over a session and appears without the user initiating the action.",
        "base": true,
        "name": "alert",
        "selector": ".slds-notify_alert",
        "support": "dev-ready",
        "category": "experience",
        "type": "messaging",
        "role": "alert"
      },
      "id": "alert",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes alert notification",
            "name": "base",
            "selector": ".slds-notify_alert",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "warning",
                  "label": "Warning"
                },
                {
                  "id": "error",
                  "label": "Error"
                },
                {
                  "id": "offline",
                  "label": "Offline"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "rich-text-editor": {
      "description": "At a high-level, the buttons in RTE are organized into four groupings:\n“format text”, “format body”, “insert content”, and “clear formatting”.\n\nThe “clear formatting” button always stays at the end of the buttons set,\nregardless of which rich text editor variant is used. It should always stand by itself.\n\n#### Accessibility\n\nEnsure that there is a single tab key stop for the button groups in the\ntoolbar, and that left and right arrows are used to navigate through each button.",
      "annotations": {
        "summary": "The Rich Text Editor is a textarea with added capabilities for use in various publishers.",
        "base": true,
        "name": "rich-text-editor",
        "selector": ".slds-rich-text-editor",
        "support": "dev-ready",
        "category": "feature",
        "type": "data-entry",
        "role": "textbox,toolbar"
      },
      "id": "rich-text-editor",
      "restrictees": [
        {
          "description": "The default rich text editor contains a minimal amount of text formatting capabilities.",
          "annotations": {
            "name": "base",
            "selector": ".slds-rich-text-editor",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Container for Rich Text Editor Toolbar",
              "annotations": {
                "selector": ".slds-rich-text-editor__toolbar",
                "restrict": ".slds-rich-text-editor div"
              },
              "id": ".slds-rich-text-editor__toolbar",
              "restrictees": [
                {
                  "description": "Container for Rich Text Editor Bottom Toolbar",
                  "annotations": {
                    "selector": ".slds-rich-text-editor__toolbar-bottom",
                    "restrict": ".slds-rich-text-editor__toolbar"
                  },
                  "id": ".slds-rich-text-editor__toolbar-bottom",
                  "restrictees": []
                },
                {
                  "description": "Container for Rich Text Editor Combobox",
                  "annotations": {
                    "selector": ".slds-rich-text-editor__select",
                    "restrict": ".slds-rich-text-editor__toolbar div"
                  },
                  "id": ".slds-rich-text-editor__select",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Focus state for rich text editor",
              "annotations": {
                "selector": ".slds-has-focus",
                "restrict": ".slds-rich-text-editor",
                "modifier": true
              },
              "id": ".slds-has-focus",
              "restrictees": []
            },
            {
              "description": "Error state for rich text editor",
              "annotations": {
                "selector": ".slds-has-error",
                "restrict": ".slds-rich-text-editor",
                "modifier": true
              },
              "id": ".slds-has-error",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "focused",
                  "label": "Focused"
                },
                {
                  "id": "filled-out",
                  "label": "Filled Out"
                },
                {
                  "id": "error",
                  "label": "Error"
                },
                {
                  "id": "disabled",
                  "label": "Disabled"
                },
                {
                  "id": "tooltip",
                  "label": "Tooltip"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "bottom-toolbar",
                  "label": "Bottom toolbar"
                },
                {
                  "id": "email",
                  "label": "Email"
                },
                {
                  "id": "feed",
                  "label": "Feed"
                },
                {
                  "id": "note",
                  "label": "Notes"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "combobox": {
      "description": "A Combobox is a composite widget that lets a user select one or more optons, from a\npredefined or autocompleted searchable list. The result of that selection\nis then shown as the value of an input, inside the Combobox widget.\n\nThe multi-select Combobox can have more than one selected option.\nWhen more than one option has been selected, the value of the input should\nbe updated with the total number of selected items, such as \"3 options selected\".\nWhen a Combobox with multiple selected options is closed,\na listbox of pills is also used to represent those selected options.\nThe listbox of pills is positioned below the read-only input, each pill represents a selected option.\nThis allows a user to easily see and remove selected items from the Combobox.\n\nThe Combobox comes with 2 distinct variations of functionality. A \"Read-Only and an \"Autocomplete\" Combobox.\nA read-only Combobox allows a user to select an option from a pre-defined list of options. It does not allow\nfree form user input, nor does it allow the user to modify the selected value.\nAn autocomplete Combobox also allows a user to select an option from a list\nbut, that list can be affected by what the user types into the input of the Combobox. This can be\nuseful when the list of options a user can choose from is very large, as user input can start\nto only display options that match the text the user has entered, effectively performing a search.\nIf no option matches, the user can complete the value of the combobox by finishing their own text entry.\n\nThe listbox of options can be displayed as just a simple single list, or that list can be grouped with\nheadings, to better organise the options.\n\nThe target HTML element, `slds-combobox` and dropdown need to be wrapped in the class\n`.slds-dropdown-trigger dropdown-trigger--click`.\n\n#### Accessibility\n\nWe follow the ARIA Combobox widget pattern to implement this component. Comboboxes allows the user to have\ndual keyboard focus enabling them to select an option from the list with arrow keys, whilst leaving browser focus inside\nthe `input`.\n\nImplementing a multi-select pattern with a Combobox is not standard, nor is it technically supported by the specification.\nTherefore great care should be paid to the extra steps we take to try and communicate multi-selection.\n\nWe have decided to implement the Combobox based on the [ARIA 1.1 specification](http://w3c.github.io/aria/aria/aria.html#combobox).\nThe Combobox from ARIA 1.1 is a composite widget, in that it is a widget that is composed of other widgets or concepts.\nIn this implementation the `combobox` now owns (by means of parent / child relationships) a `textbox` and a `listbox` of `option`'s.\n\n**Expected markup:**\n\n##### Combobox\n\n- A Combobox must come with an associated `label` element, with an appropriate `for` attribute\n- `slds-combobox` acts as the root node to the composite Combobox widget. It takes the `role=\"combobox\"` attribute as a result\n  - `aria-haspopup=\"listbox\"` attribute is then applied to indicate the Combobox will display a popup, of type `listbox`\n  - `aria-expanded=\"true|false\"` attribute is applied to describe whether the popup of `listbox` is currently visible or not\n\n##### Textbox\n\n- The Textbox is an `input` with a role of `textbox`. The role is implicit on inputs, but in this case it doesn't hurt to be explicit\n- The Textbox has `autocomplete=\"off\"` to remove the browsers suggestions from the `input`\n- The Textbox has `aria-controls=\"\"` which points to the ID of the `listbox`. It informs Assistive Technology what DOM node the input controls, in display or content\n- The Textbox has the `type` attribute set to be `text` as it's not a search field\n- The Textbox has `aria-activedescendant` attribute applied only when an option is in \"dual focus\" via keyboard navigation, otherwise it should be removed\n- The Textbox gets a `value` set to reflect that that option has been selected by the user\n\n##### Textbox - Read-only\n\n- The Textbox has `readonly` attribute applied\n\n##### Textbox - Autocomplete\n\n- The Textbox has `aria-autocomplete=\"list\"` attribute applied\n\n##### Listbox\n\n- The `listbox` has `role=\"listbox\"` applied\n- The `listbox` can have child `option`'s. We place `role=\"option\"` on a `span` element, inside a list item. As such the list item `li` needs to be removed from the Accessibility Tree with `role=\"presentation\"`\n- A `listbox` has the ability to group options together under a visual heading or label. This means the `role=\"listbox\"` attribute is placed on a common parent element, which can wrap multiple lists (or groups) of options\n  - When a `listbox` has no option groups\n    - The `ul` element has `role=\"presentation\"` to remove it from the Accessibility Tree\n  - When a `listbox` has option groups, each group gets a visual label. Exactly like `optgroup` in a `select` element\n    - The `ul` element in this case has `role=\"group\"` with an `aria-label` that describes the group\n    - Display the group label visually, but due to the way a listbox works it can only be marked as `role=\"presentation\"`, as a `listbox` can only have `option` children. This allows us to communicate the group label visually and programmatically to a screen reader\n- Every `option` has `aria-selected=\"false\"` by default\n- Disabled `option`s should have `aria-disabled=\"true\"` applied\n\n##### Listbox - Multi-select\n\n- To represent multi-selection on a `listbox` to a screen reader, we must describe previously selected options with hidden assistive text, to represent the check mark\n\n**Expected keyboard interactions:**\n\n- Focus is placed into the `input` by the user\n- The `listbox` is show on `input` focus, and `aria-expanded` is set to `true` on the `combobox` element to reflect that\n- Up and Down arrow keys cycle through the available `option`s by setting and updating `aria-activedescendant=\"id_of_option\"` on the `input`, each time you press the arrow key\n  - `aria-selected` on the current `option` is changed to `true`\n  - Disabled options should be skipped\n- Esc key closes the `listbox` and sets `aria-expanded` to `false` on the `combobox`\n- Enter key confirms selection, sets `value` if not already set, and closes the `listbox` and sets `aria-expanded` to `false` on the `combobox`\n\n##### Read-only\n\n- Up and Down arrows also **must** update the `input` value as you navigate through the list, to reflect the currently selected option\n- Any character key updates `aria-activedescendant` to the next `option` that starts with that character, if applicable\n\n##### Autocomplete (when not allowing free form text as a valid value)\n\n- Up and Down arrows also **should** update the `input` value as you navigate through the list, to reflect the currently selected option\n- Enter key, with an option selected should also set `readonly` on the `input`\n- Esc key with an option selected should remove `readonly` and clear the `value` of the `input`",
      "annotations": {
        "summary": "A widget that provides a user with an input field that is either an autocomplete or readonly, accompanied with a listbox of pre-defined options.",
        "layout": "adaptive",
        "name": "combobox",
        "support": "prototype",
        "base": true,
        "role": "combobox",
        "type": "user-input",
        "category": "experience",
        "selector": ".slds-combobox_container"
      },
      "id": "combobox",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Container that manages layout when a listbox of pill options sit next to a combobox search input",
            "name": "base",
            "selector": ".slds-combobox_container",
            "restrict": "div",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Container around form element with combobox input",
              "annotations": {
                "selector": ".slds-combobox",
                "restrict": ".slds-combobox_container > div"
              },
              "id": ".slds-combobox",
              "restrictees": [
                {
                  "description": "Opens listbox dropdown",
                  "annotations": {
                    "selector": ".slds-is-open",
                    "restrict": ".slds-combobox",
                    "modifier": true
                  },
                  "id": ".slds-is-open",
                  "restrictees": []
                },
                {
                  "description": "Form element with combobox input",
                  "annotations": {
                    "selector": ".slds-combobox__form-element",
                    "restrict": ".slds-combobox > div"
                  },
                  "id": ".slds-combobox__form-element",
                  "restrictees": [
                    {
                      "description": "If readonly selection is an entity, use this class",
                      "annotations": {
                        "selector": ".slds-combobox__input-entity-icon",
                        "restrict": ".slds-combobox__form-element span"
                      },
                      "id": ".slds-combobox__input-entity-icon",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "Input field within a combobox",
                  "annotations": {
                    "selector": ".slds-combobox__input",
                    "restrict": ".slds-combobox input"
                  },
                  "id": ".slds-combobox__input",
                  "restrictees": []
                },
                {
                  "description": "Modifier to the combobox when an SVG icon sits adjacent to the combobox form element",
                  "annotations": {
                    "selector": ".slds-has-icon_left",
                    "restrict": ".slds-combobox"
                  },
                  "id": ".slds-has-icon_left",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Icon that is a direct sibling of a combobox container. This is not the same as an input icon.",
              "annotations": {
                "selector": ".slds-combobox_container__icon",
                "restrict": ".slds-combobox_container svg"
              },
              "id": ".slds-combobox_container__icon",
              "restrictees": []
            },
            {
              "description": "If combo has a selection model that requires a listbox of pills to be displayed\ninside of a combobox",
              "annotations": {
                "selector": ".slds-has-inline-listbox",
                "restrict": ".slds-combobox_container"
              },
              "id": ".slds-has-inline-listbox",
              "restrictees": []
            },
            {
              "description": "SVG icon that sits adjacent to the combobox form element",
              "annotations": {
                "selector": ".slds-combobox_container__icon",
                "restrict": ".slds-combobox_container svg"
              },
              "id": ".slds-combobox_container__icon",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Container that manages layout when a listbox of pill options sit next to a combobox search input",
                "name": "inline-listbox",
                "selector": ".slds-has-inline-listbox",
                "restrict": ".slds-combobox_container",
                "variant": true
              },
              "id": "inline-listbox",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "focused",
                      "label": "Focused",
                      "script": "\n      document.getElementById('combobox-unique-id').focus()\n    "
                    },
                    {
                      "id": "open-item-focused",
                      "label": "Open - Item Focused"
                    },
                    {
                      "id": "closed-option-selected",
                      "label": "Option Selected"
                    },
                    {
                      "id": "options-selected",
                      "label": "Option(s) Selected"
                    },
                    {
                      "id": "focused-options-selected",
                      "label": "Focused - Option(s) Selected",
                      "script": "\n      document.getElementById('combobox-unique-id').focus()\n    "
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "summary": "Container that manages layout when a listbox of pill options sit next to a combobox search input",
                "name": "multi-entity",
                "selector": ".slds-has-object-switcher",
                "restrict": ".slds-combobox_container",
                "variant": true
              },
              "id": "multi-entity",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "focused",
                      "label": "Focused",
                      "script": "\n      document.getElementById('combobox-unique-id').focus()\n    "
                    },
                    {
                      "id": "open-item-focused",
                      "label": "Open - Item Focused"
                    },
                    {
                      "id": "options-selected",
                      "label": "Option(s) Selected"
                    },
                    {
                      "id": "focused-options-selected",
                      "label": "Focused - Option(s) Selected",
                      "script": "\n      document.getElementById('combobox-unique-id').focus()\n    "
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "summary": "Container that manages layout when a listbox of pill options sit next to a combobox search input",
                "name": "readonly",
                "selector": "[readonly]",
                "restrict": ".slds-combobox_container input",
                "variant": true
              },
              "id": "readonly",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "focused",
                      "label": "Focused",
                      "script": "\n      document.getElementById('combobox-unique-id').focus()\n    "
                    },
                    {
                      "id": "open-item-focused",
                      "label": "Open - Item Focused"
                    },
                    {
                      "id": "open-option-selected",
                      "label": "Open - Option Selected"
                    },
                    {
                      "id": "open-options-selected",
                      "label": "Open - Option(s) Selected"
                    },
                    {
                      "id": "closed-option-selected",
                      "label": "Option Selected"
                    },
                    {
                      "id": "closed-options-selected",
                      "label": "Option(s) Selected"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "focused",
                  "label": "Focused",
                  "script": "\n      document.getElementById('combobox-unique-id').focus()\n    "
                },
                {
                  "id": "open-item-focused",
                  "label": "Open - Item Focused"
                },
                {
                  "id": "closed-options-selected",
                  "label": "Option(s) Selected"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "non-modal-dialog-list-0-items",
                  "label": "Dynamic list — 0 Items (Non-modal Dialog)"
                },
                {
                  "id": "non-modal-dialog-list-1-item",
                  "label": "Dynamic list — 1 Item (Non-modal Dialog)"
                },
                {
                  "id": "non-modal-dialog-list-sub-10-item",
                  "label": "Dynamic list — <10 Items (Non-modal Dialog)"
                },
                {
                  "id": "non-modal-dialog-list-over-10-item",
                  "label": "Dynamic list — >10 Items (Non-modal Dialog)"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "checkbox-toggle": {
      "description": "The ability to style checkboxes with CSS varies across browsers.\nTo ensure that checkboxes look the same everywhere, we use a custom DOM.\nPay close attention to the markup, because all elements must exist for the\nstyles to work.\n\n#### Accessibility\n\nGroups of checkboxes should be marked up using the fieldset and legend\nelement. This helps someone using assistive technology to understand the\nquestion they're answering with the group of checkboxes. The fieldset is\nplaced around the whole group and the legend contains the question.\n\nCustom checkboxes are created by applying the `.slds-checkbox` class to\na `<label>` element. To remain accessible to all user agents, place\n`<input>` with `type=\"checkbox\"` inside the `<label>` element.  The `<input>`\nis then visually hidden, and the styling is placed on a span with\nthe `.slds-checkbox_faux` class. The styling of the span changes based\non whether the checkbox is selected or focused by using a pseudo-element.\nA second span with `.slds-form-element__label` contains the label text.\n\nWhen a single checkbox is required, `<div class=\"slds-checkbox\">` should\nget `<abbr class=\"required\" title=\"required\">*</abbr>` added to the DOM,\ndirectly before the `<input type=\"checkbox\" />` for visual indication\nthat the checkbox is required.\n\nWhen a checkbox group is required, the `<fieldset>` should receive the\nclass `.slds-is-required`. The `<legend>` should then get\n`<abbr class=\"required\" title=\"required\">*</abbr>` added to the DOM for\nvisual indication that the checkbox group is required.\n\nAs SLDS checkboxes rely on the :checked psuedo selector, and the\nindeterminate state is only accessible via JavaScript, the use of a\nCSS class on the input will be necessary to implement this in SLDS.\nUse JavaScript to add the class when the indeterminate property is set to\ntrue on the input.\n\nThe following JavaScript demonstrates how to set a checkbox to be indeterminate:\n```js\nvar checkbox = document.getElementById('checkbox-indeterminate-01');\ncheckbox.indeterminate = true;\n```",
      "annotations": {
        "summary": "A checkable input that communicates if an option is true, false or indeterminate",
        "base": true,
        "name": "checkbox-toggle",
        "selector": ".slds-checkbox_toggle",
        "support": "dev-ready",
        "category": "base",
        "type": "data-entry",
        "role": "checkbox"
      },
      "id": "checkbox-toggle",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes checkbox toggle",
            "name": "base",
            "selector": ".slds-checkbox_toggle",
            "restrict": "label",
            "variant": true
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "checkbox-toggle-checked",
                  "label": "Checked"
                },
                {
                  "id": "checkbox-toggle-disabled",
                  "label": "Disabled"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "global-navigation": {
      "description": "#### 1.0\\. Building the Navigation Bar\n\nThe navigation bar is composed of a wrapper and 2 required regions:\n\n- **Primary,** which contains the App Launcher and App Name\n- **Secondary,** which contains the App Items, for navigating within the current app\n\nThe markup should follow the order listed above for proper keyboard interaction set by the 508 compliance standards. Each included region inside the wrapper of `.slds-context-bar` needs the appropriate ordering class name, e.g. `.slds-context-bar__primary`.\n\n#### 1.1\\. Items on the Navigation Bar\n\nEvery item that sits on the horizontal axis of the navigation bar should receive the class `.slds-context-bar__item`.\n\nThis class is used to notify the navigation bar that it has a new item. The styles applied allow the children of the navigation bar to vertically aligned, without knowing the height of the navigation bar. The styles will also allow for the actionable items `.slds-context-bar__label-action` and `.slds-context-bar__icon-action` to stretch 100% of the height of the navigation bar, optimizing the hit area of those actions.\n\nSince the items are leveraging flexbox, the elements inside can easily be re-ordered easily by using an order class helper on the element, such as `.slds-order--[#]`.\n\n#### 1.2\\. Building the Navigation Bar Item\n\nThe navigation bar item is built to accommodate 2 specific layout needs.\n\n1.  Individual text hyperlink to invokes link destination\n2.  Individual text hyperlink to invokes link destination + button icon to indicate menu dropdown is available\n\nThese layouts are built upon 2 reusable classes. The text hyperlink action area would get the class `.slds-context-bar__label-action` and the icon based action area would get the class `.slds-context-bar__icon-action`.\n\nThe `.slds-context-bar__icon-action` class handles the alignment and coloring of the icons based on interactions such as `:hover`, `:focus` and `:active`. This is a required if you have an actionable icon area adjacent to an actionable text area.\n\nThe markup structure should have the button icon(s) preceding the text label. The icons can be visually reordered by using the ordering utility classes such as `.slds-order--[#]`.\n\n#### 1.3\\. Building the Icons in the Navigation Bar\n\nThe icons in the navigation bar either serve as a visual affordance that indicates an item has a menu with additional actions or the icon itself is actionable.\n\nThe class used to indicate a button icon will sit adjacent to another actionable item is `.slds-context-bar__icon-action`. If you two icons in an item, each icon should be contained in it’s own `.slds-context-bar__icon-action` element.\n\nThe look and feel of the button icon is dependant on the modifiers used from [Button Icon Variant Component](/components/buttons/#icon) page.\n\nThe `.slds-context-bar__icon-action` styles apply a default left and right padding of 0.75rem. That padding can be removed or modified by using our spacing utilities. In example #1, the left padding has been removed by using the class `.slds-p-left--none`.\n\nIf a navigation bar item has an icon then we want to provide visual indication that its active when a user hovers into its region. To make this happen, apply the class `.slds-hint-parent` to the hover region, most cases would be `.slds-context-bar__icon-action` element.\n\n#### 1.4\\. Menu trigger area on Navigation Bar Items\n\nWhen a navigation bar items requires a menu with additional sub options or actions, the classes that need to be added to the target hit area are the following:\n\n1.  `.slds-context-bar__dropdown-trigger` — Add a hoverable zone below the action so that the dropdown doesn’t disappear when the mouse is between the action and the dropdown — this is specific to the navigation bar\n2.  `.slds-dropdown-trigger` — Globally used utility that notifies the element there is a dropdown menu\n3.  `.slds-dropdown-trigger--[interaction]` — Specify which type of interaction the menu should appear with “hover” or “click”. The default pattern requires hover to show the menu besides the App Launcher Waffle icon.\n\nIf the navigation item has one hyperlink with a menu containing additional sub actions, then the hover area that invokes the dropdown menu is both the `.slds-context-bar__label-action` and `.slds-context-bar__icon-action`. If the navigation item is demonstrated as a tab format, one hyperlink plus two additional actions, then the hover area that invokes the dropdown menu is only on the `.slds-context-bar__icon-action`.\n\n#### 1.5\\. Specifics of the Navigation Bar - App Launcher\n\nThe app launcher is the one element on the navigation bar that requires a mouse click or keyboard enter to invoke the app launcher dropdown. Please use JavaScript to accommodate this requirement.\n\n#### 1.6\\. Specifics of the Navigation Bar - App Name\n\nThe application name needs to receive the `.slds-context-bar__app-name` class. This class will handle such things as its unique font sizing and truncation widths.\n\n#### 1.7\\. Specifics of the Navigation Bar - Divider\n\nDue to the platform-esc nature of the navigation bar, there is an available element utility to apply a divider between sections where needed. The `.slds-context-bar__vertical-divider` class should be applied to an empty `<div>` and placed within the markup of your navigation bar for a visual divider.\n\nAlternatively, two classes are available to add border using css. Adding the class `.slds-context-bar__item--divider-left` will add a left border to a navigation bar item while `.slds-context-bar__item--divider-right` will add a right border.",
      "annotations": {
        "summary": "Global Navigation is the list of navigation links your users find in the Header on every page in Salesforce. Your Global Navigation includes a Navigation Bar where your users find the App Launcher, App Name, and Pages that each App includes.",
        "base": true,
        "name": "global-navigation",
        "selector": ".slds-context-bar",
        "support": "dev-ready",
        "category": "feature",
        "type": "navigation",
        "role": "navigation"
      },
      "id": "global-navigation",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Navigation bar wrapper",
            "name": "navigation-bar",
            "selector": ".slds-context-bar",
            "restrict": "div",
            "variant": true
          },
          "id": "navigation-bar",
          "restrictees": [
            {
              "description": "Primary zone",
              "annotations": {
                "selector": ".slds-context-bar__primary",
                "restrict": ".slds-context-bar div"
              },
              "id": ".slds-context-bar__primary",
              "restrictees": []
            },
            {
              "description": "Secondary zone",
              "annotations": {
                "selector": ".slds-context-bar__secondary",
                "restrict": ".slds-context-bar nav, .slds-context-bar div"
              },
              "id": ".slds-context-bar__secondary",
              "restrictees": []
            },
            {
              "description": "Manually add a vertical divider between elements",
              "annotations": {
                "selector": ".slds-context-bar__vertical-divider",
                "restrict": ".slds-context-bar div"
              },
              "id": ".slds-context-bar__vertical-divider",
              "restrictees": []
            },
            {
              "description": "Any item on the horizontal axis of the context nav bar\n\nInteractions such as hovers + active are defaults, bottom of the\nfile deals with light / dark theme thresholds",
              "annotations": {
                "selector": ".slds-context-bar__item",
                "restrict": ".slds-context-bar div, .slds-context-bar li"
              },
              "id": ".slds-context-bar__item",
              "restrictees": [
                {
                  "description": "Toggled focused class applied via JavaScript",
                  "annotations": {
                    "selector": ".slds-has-focus",
                    "restrict": ".slds-context-bar__item",
                    "modifier": true
                  },
                  "id": ".slds-has-focus",
                  "restrictees": []
                },
                {
                  "description": "Actionable Text Links",
                  "annotations": {
                    "selector": ".slds-context-bar__label-action",
                    "restrict": ".slds-context-bar__item a, .slds-context-bar__item span, .slds-context-bar__item button"
                  },
                  "id": ".slds-context-bar__label-action",
                  "restrictees": [
                    {
                      "description": "Styles for application name region",
                      "annotations": {
                        "selector": ".slds-context-bar__app-name",
                        "restrict": ".slds-context-bar__label-action"
                      },
                      "id": ".slds-context-bar__app-name",
                      "restrictees": []
                    }
                  ]
                },
                {
                  "description": "#### Accessibility\n\nOn the Split View Toggle button, `aria-expanded` is set to `false` by default.\nSet `aria-expanded` to `true` when  Split View is active. When Split View is active,\nset the value of `aria-controls` on the Split View Toggle button, to the `ID` of the\nwrapper element that contains the Split View List.",
                  "annotations": {
                    "summary": "Tab modifier when using a tabset",
                    "name": "navigation-tab-bar",
                    "selector": ".slds-context-bar__item_tab",
                    "restrict": ".slds-context-bar__item",
                    "notes": "Only use on tabset version",
                    "required": true,
                    "variant": true
                  },
                  "id": "navigation-tab-bar",
                  "restrictees": [
                    {
                      "description": "Pinned state\nToggles visibility of elements inside of tab",
                      "annotations": {
                        "selector": ".slds-is-pinned",
                        "restrict": ".slds-context-bar__item_tab",
                        "modifier": true
                      },
                      "id": ".slds-is-pinned",
                      "restrictees": []
                    }
                  ],
                  "showcase": [
                    {
                      "title": "states",
                      "items": [
                        {
                          "id": "split-view",
                          "label": "Split View - Active"
                        },
                        {
                          "id": "tab-active",
                          "label": "Tab - Active"
                        },
                        {
                          "id": "tab-active-focus",
                          "label": "Tab - Active Focus"
                        },
                        {
                          "id": "tab-item-action-menu-open",
                          "label": "Tab - Action Overflow"
                        },
                        {
                          "id": "pinned-tab",
                          "label": "Pinned Tab"
                        },
                        {
                          "id": "pinned-tab-active",
                          "label": "Pinned Tab - Active"
                        },
                        {
                          "id": "pinned-tab-active-focus",
                          "label": "Pinned Tab - Active Focus"
                        },
                        {
                          "id": "unsaved-pinned-tab",
                          "label": "Unsaved Pinned Tab"
                        },
                        {
                          "id": "unsaved-tab",
                          "label": "Unsaved Tab"
                        },
                        {
                          "id": "overflow-tabs",
                          "label": "Overflow Tabs"
                        },
                        {
                          "id": "overflow-tabs-open",
                          "label": "Overflow Tabs - Open"
                        },
                        {
                          "id": "unsaved-overflow-tabs",
                          "label": "Unsaved Overflow Tabs"
                        },
                        {
                          "id": "unsaved-overflow-tabs-open",
                          "label": "Unsaved Overflow Tabs - Open"
                        },
                        {
                          "id": "object-switcher-active",
                          "label": "Object Switcher - Active"
                        },
                        {
                          "id": "object-switcher-menu-open",
                          "label": "Object Switcher - Open"
                        },
                        {
                          "id": "add-tab-dialog-open",
                          "label": "Add Tab Dialog - Open"
                        }
                      ]
                    },
                    {
                      "title": "default",
                      "items": [
                        {
                          "id": "default"
                        }
                      ]
                    }
                  ]
                },
                {
                  "description": "Unsaved indicator - This can probably be used in other locations as well",
                  "annotations": {
                    "selector": ".slds-indicator_unsaved",
                    "restrict": ".slds-context-bar__item span, abbr"
                  },
                  "id": ".slds-indicator_unsaved",
                  "restrictees": []
                },
                {
                  "description": "Styles for object switcher region",
                  "annotations": {
                    "selector": ".slds-context-bar__object-switcher",
                    "restrict": ".slds-context-bar__item",
                    "required": true
                  },
                  "id": ".slds-context-bar__object-switcher",
                  "restrictees": []
                },
                {
                  "description": "Active state of an item",
                  "annotations": {
                    "selector": ".slds-is-active",
                    "restrict": ".slds-context-bar__item:not(.slds-no-hover)",
                    "modifier": true
                  },
                  "id": ".slds-is-active",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Add a left border to a context bar item",
              "annotations": {
                "selector": ".slds-context-bar__item_divider-left",
                "restrict": ".slds-context-bar div, .slds-context-bar li",
                "modifier": true
              },
              "id": ".slds-context-bar__item_divider-left",
              "restrictees": []
            },
            {
              "description": "Add a right border to a context bar item",
              "annotations": {
                "selector": ".slds-context-bar__item_divider-right",
                "restrict": ".slds-context-bar div, .slds-context-bar li",
                "modifier": true
              },
              "id": ".slds-context-bar__item_divider-right",
              "restrictees": []
            },
            {
              "description": "Actionable Icons",
              "annotations": {
                "selector": ".slds-context-bar__icon-action",
                "restrict": ".slds-context-bar div"
              },
              "id": ".slds-context-bar__icon-action",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "item-active",
                  "label": "Item Active"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "tabs": {
      "description": "Because tab sets can be nested, pay close attention to the markup. They are\nconstructed to prevent styles from leaking from parent tab sets into child tab sets.\n\n#### JavaScript Needs\n\nThe active tab has two markup requirements:\n\n- The `.slds-active` class should be placed on the `li` with `.slds-tabs_{variant}__item`.\n- The corresponding `.slds-tabs_{variant}__content` container receives `.slds-show`.\n- In order to achieve the focus state styling, apply `.slds-has-focus` to the parent `li`.\n\nInactive `.slds-tabs_{variant}__content` containers receive `.slds-hide`.\nWhen the user clicks a different tab, move the `.slds-active` class and\ntoggle the `.slds-hide`/`.slds-show` classes.\n\n#### Accessibility\n\nTabbed UIs have three parts with specific **ARIA** role requirements:\n\n- The tab list, which should have `role=\"tablist\"`\n- The tabs in that list, which should each be an `<a role=\"tab\">` anchor wrapped in a `<li role=\"presentation\">` list item\n- The tab panels, which display each tab’s content and should each have `role=\"tabpanel\"`\n\n**Expected markup:**\n\n- Selected tab’s anchor has `aria-selected=\"true\"`, all other tabs’ anchors have `aria-selected=\"false\"`\n- Selected tab’s anchor has `tabindex=\"0\"`, all other tabs have `tabindex=\"-1\"`\n- Each tab’s anchor has an `aria-controls` attribute whose value is the id of the associated `<div role=\"tabpanel\">`\n- Each tab panel has an `aria-labelledby` attribute whose value is the id of its associated `<a role=\"tab\">`\n\n**Expected keyboard interactions:**\n\n- Arrow keys, when focus is on selected tab, cycle selection to the next or previous tab\n- Tab key, when focus is before the tab list, moves focus to the selected tab\n- Tab key, when focus is on selected tab, moves focus into the selected tab’s associated tab panel or to the next focusable element on the page if that panel has no focusable elements\n- Shift+Tab keys, when focus is on first element in a tab panel, move focus to the selected tab",
      "annotations": {
        "summary": "A tab keeps related content in a single container that is shown and hidden through navigation.",
        "base": true,
        "name": "tabs",
        "selector": ".slds-tabs_default",
        "support": "dev-ready",
        "category": "base",
        "type": "navigation",
        "role": "tablist"
      },
      "id": "tabs",
      "restrictees": [
        {
          "description": "The default tab set style encapsulates everything that is underneath it\nwithout enclosing it visually. Initialize a default tab set by applying the\n`.slds-tab_default` class to the containing `<div>` around the tab list and\ntab panels. The `<ul>` element also requires the class `.slds-tab_default__nav`\nto prevent styles from bleeding into nested tabs.\n\nThe overflow tab style is provided as a tab item type that acts as a menu\ncomponent and appears as a tab item. It could contain those tab items that\ndon't all fit in a horizontal orientation. Initialize a default tab set and\nin the last tab item of the set, apply the additional classes `slds-dropdown-trigger`\nand `.slds-tabs__item_overflow`. Include an `<a>` element to contain the\ntab item label like the other tab items. After the `<a>` element, the\n`.slds-dropdown` segment of a search overflow menu component is used. The\n`slds-dropdown__list` element also then requires a `slds-dropdown_length-X`\nclass, where X is the number of items to show in it.",
          "annotations": {
            "summary": "Initializes a default tablist",
            "name": "base",
            "selector": ".slds-tabs_default",
            "restrict": "div",
            "required": true,
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Creates the container for the default tabs",
              "annotations": {
                "selector": ".slds-tabs_default__nav",
                "restrict": ".slds-tabs_default ul",
                "required": true
              },
              "id": ".slds-tabs_default__nav",
              "restrictees": []
            },
            {
              "description": "Styles each list item as a single tab",
              "annotations": {
                "selector": ".slds-tabs_default__item",
                "restrict": ".slds-tabs_default ul li",
                "required": true
              },
              "id": ".slds-tabs_default__item",
              "restrictees": [
                {
                  "description": "Active state for a tab item",
                  "annotations": {
                    "selector": ".slds-is-active",
                    "restrict": ".slds-tabs_default__item",
                    "notes": "Required on the `<li>` element that is associated with the active tab panel",
                    "modifier": true
                  },
                  "id": ".slds-is-active",
                  "restrictees": []
                },
                {
                  "description": "Focus state for a tab item",
                  "annotations": {
                    "selector": ".slds-has-focus",
                    "restrict": ".slds-tabs_default__item",
                    "modifier": true
                  },
                  "id": ".slds-has-focus",
                  "restrictees": []
                },
                {
                  "description": "Styles each actionable element inside each tab item",
                  "annotations": {
                    "selector": ".slds-tabs_default__link",
                    "restrict": ".slds-tabs_default__item a",
                    "required": true
                  },
                  "id": ".slds-tabs_default__link",
                  "restrictees": []
                }
              ]
            },
            {
              "description": "Styles each tab content wrapper",
              "annotations": {
                "selector": ".slds-tabs_default__content",
                "restrict": ".slds-tabs_default div",
                "required": true
              },
              "id": ".slds-tabs_default__content",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "selected",
                  "label": "Item Two Selected"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "overflow",
                  "label": "Overflowing items"
                },
                {
                  "id": "nested",
                  "label": "With Nested Scoped Tabs"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "picklist": {
      "description": "A picklist is a widget that displays a list of selectable options.\nWhen an option is selected, it is shown as selected and the value of the\nread-only input is updated to match it.\n\nA multi-select picklist is widget that displays a list of selectable options, where\nmore than one option can be chosen. When more than one option has been selected, the\nvalue of the read-only input should update with the total number of selected\nitems, such as \"3 options selected\". When a picklist with multiple selected options is closed,\na listbox of pills is also used to represent those selected options.\nThe listbox of pills is positioned below the read-only input, each pill represents a selected option.\nThis allows a user to easily see and remove selected items.\n\nThe target HTML element, `slds-combobox` and dropdown need to be wrapped in the class\n`.slds-dropdown-trigger dropdown-trigger_click`.\n\n#### Accessibility\n\nA Picklist allows a user to select and set a value from a pre-defined list of options. As such\nwe follow the ARIA Combobox widget pattern to implement it as it's the most appropriate concept to achieve this.\nThe variant of Combobox we chose is the \"Read-only\" version, as a users keyboard input cannot directly affect\nthe value set in the Combobox, but can only select a value from a pre-definied list. It also does not perform\na search, or autocomplete function. It most closely resembles the HTML `select` element.\n\nImplementing a multi-select pattern with a Combobox is not standard, nor is it technically supported by the specification.\nTherefore great care should be paid to the extra steps we take to try and communicate multi-selection.\n\nPlease refer to the [Combobox](/components/combobox) documentation relating to read-only implementation guidelines.",
      "annotations": {
        "summary": "A Picklist provides a user with an read-only input field that is accompanied with a listbox of pre-defined options. A picklist has a single and multi-selection pattern.",
        "base": true,
        "name": "picklist",
        "selector": ".slds-combobox-picklist",
        "support": "dev-ready",
        "category": "experience",
        "type": "user-input",
        "role": "combobox, listbox"
      },
      "id": "picklist",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "name": "base",
            "selector": ".slds-combobox-picklist",
            "restrict": "div",
            "variant": true,
            "s1": "false"
          },
          "id": "base",
          "restrictees": [],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "focused",
                  "label": "Focused",
                  "script": "\n      document.getElementById('combobox-unique-id').focus()\n    "
                },
                {
                  "id": "open-item-focused",
                  "label": "Open - Item Focused"
                },
                {
                  "id": "open-option-selected",
                  "label": "Open - Option Selected"
                },
                {
                  "id": "open-options-selected",
                  "label": "Open - Option(s) Selected"
                },
                {
                  "id": "closed-option-selected",
                  "label": "Option Selected"
                },
                {
                  "id": "closed-options-selected",
                  "label": "Option(s) Selected"
                },
                {
                  "id": "group-heading",
                  "label": "Group heading label"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "button-icons": {
      "description": "#### Accessibility\n\nIf an icon button doesn’t include a label, use a `title` attribute to show on hover for sighted users, and a span with `.slds-assistive-text` to describe the icon for screen readers.",
      "annotations": {
        "summary": "Buttons are used to invoke an event",
        "layout": "responsive",
        "name": "button-icons",
        "support": "dev-ready",
        "base": true,
        "role": "button",
        "type": "action",
        "category": "base",
        "selector": ".slds-button_icon"
      },
      "id": "button-icons",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Creates a button that looks like a plain icon",
            "name": "base",
            "selector": ".slds-button_icon",
            "restrict": "button",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "Default width + height for button icon with containers",
              "annotations": {
                "selector": ".slds-button_icon-container",
                "restrict": ".slds-button_icon",
                "modifier": true
              },
              "id": ".slds-button_icon-container",
              "restrictees": []
            },
            {
              "description": "Creates an icon button with a border",
              "annotations": {
                "selector": ".slds-button_icon-border",
                "restrict": ".slds-button_icon",
                "modifier": true,
                "group": "borders"
              },
              "id": ".slds-button_icon-border",
              "restrictees": []
            },
            {
              "description": "Gives a white icon color on a dark background",
              "annotations": {
                "selector": ".slds-button_icon-border-inverse",
                "restrict": ".slds-button_icon",
                "modifier": true,
                "group": "borders"
              },
              "id": ".slds-button_icon-border-inverse",
              "restrictees": []
            },
            {
              "description": "Button icon with background",
              "annotations": {
                "selector": ".slds-button_icon-border-filled",
                "restrict": ".slds-button_icon",
                "modifier": true,
                "group": "borders"
              },
              "id": ".slds-button_icon-border-filled",
              "restrictees": []
            },
            {
              "description": "Button icon on inversed background",
              "annotations": {
                "selector": ".slds-button_icon-inverse",
                "restrict": ".slds-button_icon",
                "modifier": true,
                "group": "color"
              },
              "id": ".slds-button_icon-inverse",
              "restrictees": []
            },
            {
              "description": "Button icon for errors",
              "annotations": {
                "selector": ".slds-button_icon-error",
                "restrict": ".slds-button_icon",
                "modifier": true,
                "group": "color"
              },
              "id": ".slds-button_icon-error",
              "restrictees": []
            },
            {
              "description": "Button icon container - size small modifier",
              "annotations": {
                "selector": ".slds-button_icon-small",
                "restrict": ".slds-button_icon",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-button_icon-small",
              "restrictees": []
            },
            {
              "description": "Button icon container - size x-small modifier",
              "annotations": {
                "selector": ".slds-button_icon-x-small",
                "restrict": ".slds-button_icon",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-button_icon-x-small",
              "restrictees": []
            },
            {
              "description": "Button icon container - size xx-small modifier",
              "annotations": {
                "selector": ".slds-button_icon-xx-small",
                "restrict": ".slds-button_icon",
                "modifier": true,
                "group": "size"
              },
              "id": ".slds-button_icon-xx-small",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "summary": "Button icon with dropdown",
                "name": "icon-with-dropdown",
                "selector": ".slds-button_icon-more",
                "restrict": ".slds-button_icon",
                "variant": true
              },
              "id": "icon-with-dropdown",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "button-icon-container-with-dropdown",
                      "label": "Default - Container Only"
                    },
                    {
                      "id": "button-icon-with-dropdown-filled",
                      "label": "Filled"
                    },
                    {
                      "id": "button-icon-with-dropdown-inverse",
                      "label": "Inverse"
                    },
                    {
                      "id": "button-icon-container-with-dropdown-inverse",
                      "label": "Inverse - Container Only"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "The stateful button requires the `.slds-button--icon-border` class in addition to the `.slds-button` class.\n\nThe stateful inverse button works just like the stateful button. It requires the `.slds-button--icon-border-inverse` class in addition to the `.slds-button` class.\n\nStateful icons can be toggled on and off and retain their state. JavaScript is used to add the `.slds-is-selected` class to the button when activated.\n\n#### Accessibility\n\nFor accessibility, implement the [ARIA Toggle Button](http://w3c.github.io/aria-practices/#button) concept.\n- Similar to a mute button, the button represents a pressed or unpressed state.\n- Button text doesn't change per state\n- `aria-pressed` is set to `true` or `false`, depending its state",
              "annotations": {
                "summary": "Stateful Button Icon",
                "name": "stateful",
                "selector": ".slds-is-selected",
                "restrict": ".slds-button_icon",
                "variant": true
              },
              "id": "stateful",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "button-icon-stateful-not-selected",
                      "label": "Not Selected"
                    },
                    {
                      "id": "button-icon-stateful-selected",
                      "label": "Selected"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "summary": "A parent class must be put on anything that contains a .slds-button__icon_hint so that the child reacts when the parent is hovered.",
                "name": "icon-with-hint-hover",
                "selector": ".slds-button__icon_hint",
                "restrict": ".slds-button_icon .slds-button__icon",
                "variant": true
              },
              "id": "icon-with-hint-hover",
              "restrictees": [],
              "showcase": [
                {
                  "title": "states",
                  "items": [
                    {
                      "id": "button-icon-border-with-hint-hover",
                      "label": "Container with border"
                    },
                    {
                      "id": "button-icon-inverse-with-hint-hover",
                      "label": "Inverse with no border"
                    },
                    {
                      "id": "button-icon-border-inverse-with-hint-hover",
                      "label": "Inverse container with border"
                    }
                  ]
                },
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "A parent class must be put on anything that contains\na .slds-button__icon_inverse-hint so that the child reacts\nwhen the parent is hovered. This is for a dark background.",
              "annotations": {
                "selector": ".slds-button__icon_inverse-hint",
                "restrict": ".slds-button_icon .slds-button__icon"
              },
              "id": ".slds-button__icon_inverse-hint",
              "restrictees": []
            }
          ],
          "showcase": [
            {
              "title": "states",
              "items": [
                {
                  "id": "button-icon-error",
                  "label": "Error"
                },
                {
                  "id": "button-icon-disabled",
                  "label": "Disabled"
                }
              ]
            },
            {
              "title": "examples",
              "items": [
                {
                  "id": "hint-hover",
                  "label": "Hint on hover"
                },
                {
                  "id": "button-icon-inverse",
                  "label": "Inverse"
                },
                {
                  "id": "button-icon-inverse-disabled",
                  "label": "Inverse disabled"
                }
              ]
            },
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    },
    "activity-timeline": {
      "description": "Each Activity timeline item receives its width from the parent list. It can\nconsume the full width of the main page area or be placed in the smaller right\nsidebar.\n\n##### Accessibility\n\nText describing the type of timeline item is placed in a `span`. It is the\nfirst element in the timeline item and should be hidden with the\n`.slds-assistive-text` class. The `SVG` image does not need the\n`.slds-assistive-text` class.",
      "annotations": {
        "summary": "The activity timeline displays each of the user’s upcoming, current, and past activities.",
        "base": true,
        "name": "activity-timeline",
        "selector": ".slds-timeline__media",
        "support": "dev-ready",
        "category": "feature",
        "type": "data-display"
      },
      "id": "activity-timeline",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Create each activity timeline item in a list",
            "name": "base",
            "selector": ".slds-timeline__media",
            "restrict": ".slds-media",
            "support": "dev-ready",
            "variant": true
          },
          "id": "base",
          "restrictees": [
            {
              "description": "",
              "annotations": {
                "selector": ".slds-timeline__title",
                "restrict": ".slds-timeline__media h3",
                "deprecated": true
              },
              "id": ".slds-timeline__title",
              "restrictees": []
            },
            {
              "description": "Icon associated with timeline item",
              "annotations": {
                "selector": ".slds-timeline__icon",
                "restrict": ".slds-timeline__media .slds-media__figure"
              },
              "id": ".slds-timeline__icon",
              "restrictees": []
            },
            {
              "description": "",
              "annotations": {
                "name": "call",
                "selector": ".slds-timeline__media_call",
                "restrict": ".slds-timeline__media",
                "variant": true
              },
              "id": "call",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "name": "email",
                "selector": ".slds-timeline__media_email",
                "restrict": ".slds-timeline__media",
                "variant": true
              },
              "id": "email",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "name": "event",
                "selector": ".slds-timeline__media_event",
                "restrict": ".slds-timeline__media",
                "variant": true
              },
              "id": "event",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            },
            {
              "description": "",
              "annotations": {
                "name": "task",
                "selector": ".slds-timeline__media_task",
                "restrict": ".slds-timeline__media",
                "variant": true
              },
              "id": "task",
              "restrictees": [],
              "showcase": [
                {
                  "title": "default",
                  "items": [
                    {
                      "id": "default"
                    }
                  ]
                }
              ]
            }
          ],
          "showcase": [
            {
              "title": "default",
              "items": [
                {
                  "id": "default"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  "utilities": {
    "interactions": {
      "description": "",
      "annotations": {
        "summary": "Set of utilities that provide interaction(s).",
        "utility": true,
        "name": "interactions",
        "selector": "[class*='slds-text-link']",
        "support": "dev-ready"
      },
      "id": "interactions",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Makes links and buttons appear as regular text",
            "selector": ".slds-text-link_reset",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-link_reset",
          "restrictees": []
        },
        {
          "description": "Used in combination with `.slds-text-link--reset`, you can apply the class `.slds-text-link` to a child element to reset its styles back to that of a link.",
          "annotations": {
            "summary": "Makes text inside of .slds-text-link_reset to appear as a link.",
            "selector": ".slds-text-link",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-link",
          "restrictees": []
        },
        {
          "description": "Faux links are used on areas that can't be wrapped in an `a` element, but need to appear to be a link with an underline on hover. An example is in the page header for Object home. The `H1` and `button` that sit next to each other have the `.slds-text-link--faux` class on their parent element.",
          "annotations": {
            "summary": "Creates a faux link with hover interactions",
            "selector": ".slds-text-link_faux",
            "notes": "This is used when an actual anchor element can not be used. For example &mdash; when a heading and button are next to each other and both need the text underline",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-link_faux",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "reset",
              "label": "Link reset"
            },
            {
              "id": "link",
              "label": "Link reset with text link inside"
            },
            {
              "id": "halo-focus",
              "label": "Link reset with halo focus"
            },
            {
              "id": "button-reset",
              "label": "Button reset with halo focus"
            },
            {
              "id": "faux",
              "label": "Faux Link on a span"
            }
          ]
        }
      ]
    },
    "hyphenation": {
      "description": "This will allow the text to break, or hyphenate, depending on the browser's capabilities. Chrome currently doesn't show the hyphenation, but the bug is currently marked fixed, so it should soon.",
      "annotations": {
        "summary": "The hyphenation class should be placed on text that might be served in narrow width containers and is not truncated.",
        "utility": true,
        "name": "hyphenation",
        "selector": ".slds-hyphenate",
        "support": "dev-ready"
      },
      "id": "hyphenation",
      "restrictees": [
        {
          "description": "The truncation class can be used on an element, or the truncation include can be added to an existing class.",
          "annotations": {
            "summary": "Creates hyphenated text",
            "selector": ".slds-hyphenate",
            "notes": "Hyphenation will occur at the parent width if a width is not specified",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-hyphenate",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "default",
              "label": "Hyphenate"
            }
          ]
        }
      ]
    },
    "alignment": {
      "description": "",
      "annotations": {
        "summary": "Alignment utilities will assist with general alignment problems",
        "utility": true,
        "name": "alignment",
        "selector": "[class*='slds-align_']",
        "support": "dev-ready"
      },
      "id": "alignment",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Class will absolutely center children content",
            "name": "absolute-center",
            "selector": ".slds-align_absolute-center",
            "modifier": true,
            "restrict": "*"
          },
          "id": "absolute-center",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "absolute-center",
              "label": "Absolute center"
            }
          ]
        }
      ]
    },
    "grid": {
      "description": "#### Grid Wrapper\n\nTo use the grid system, add the class <CodeClass className=\"grid\" /> to an element, component, or page layout. Each grid is independent of other nested grids. You can limit attributes of each grid to specific regions in the app. A grid style is <em>not</em> an all or nothing solution.\n\nAdding the class <CodeClass className=\"wrap\" /> causes the flow of your <CodeClass className=\"col\" /> elements to wrap when they exceed 100% of their parent’s width.\n\nYou can easily change the flow direction of your grid by adding a modifier class to the <CodeClass className=\"grid\" /> element. To stack your columns vertically instead of their default row behavior, use <CodeClass className=\"grid--vertical\" />. You can also reverse the left to right behavior by adding <CodeClass className=\"grid--reverse\" /> or top to bottom by adding <CodeClass className=\"grid--vertical-reverse\" />.\n\nIf you want your application to fill 100% of the width and height of the viewport and nest other grids inside, use the top-level app helper class <CodeClass className=\"grid--frame\" />. An assortment of <CodeClass className=\"container\"/> classes are available to contain your grids.\n\n#### Grid Items (Regions/Colums)\n\nWhen you add the class <CodeClass className=\"col\" /> to the grid items, no padding or gutters are added. They are simply divisions of their parent. If you want gutters, add one of the spacing utility classes such as <CodeClass className=\"p-horizontal--small\" />, <CodeClass className=\"p-horizontal--medium\" />, <CodeClass className=\"p-horizontal--large\" />, <CodeClass className=\"p-around--small\" />, <CodeClass className=\"p-around--medium\" /> or <CodeClass className=\"p-around--large\" />. These will add different sized gutters to the left and right side of your column.\n\nBy default, the width of each column within a grid row is determined by the content within. Though this automatic sizing allows you to achieve most desired outcomes, you can add manual <a href=\"/components/utilities/sizing/\">sizing classes</a> to the columns if you need specific column widths.\n\nUsing the manual sizing class helpers, you can specify a column span across the following grids &ndash;2, 3, 4, 5, 6, 7, 8 and 12. The grid supports up to 12 columns.\n\n#### Visual Glossary of Terminology\n\n![](/assets/images/grid/grid-flex-diagram.svg)",
      "annotations": {
        "summary": "The SLDS grid, based on Flexbox, provides a flexible, mobile-first, device-agnostic scaffolding system. It includes helper classes that you can use to alter the look and behavior of your grid, such as alignment, order, flow, and padding helpers.",
        "utility": true,
        "name": "grid",
        "selector": "[class*='slds-grid']",
        "support": "dev-ready",
        "layout": "responsive"
      },
      "id": "grid",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Initializes grid",
            "selector": ".slds-grid",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Initializes grid",
            "selector": ".slds-grid_frame",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_frame",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Initializes grid",
            "selector": ".slds-grid_vertical",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_vertical",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Initializes grid",
            "selector": ".slds-grid_vertical-reverse",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_vertical-reverse",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Initializes grid",
            "selector": ".slds-grid_reverse",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_reverse",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Normalizes the 0.75rem of padding when nesting a grid in a region with `.slds-p-horizontal_small`",
            "selector": ".slds-grid_pull-padded",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_pull-padded",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Normalizes the 0.125rem of padding when nesting a grid in a region with `.slds-p-horizontal_xxx-small`",
            "selector": ".slds-grid_pull-padded-xxx-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_pull-padded-xxx-small",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Normalizes the 0.25rem of padding when nesting a grid in a region with `.slds-p-horizontal_xx-small`",
            "selector": ".slds-grid_pull-padded-xx-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_pull-padded-xx-small",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Normalizes the 0.5rem of padding when nesting a grid in a region with `.slds-p-horizontal_x-small`",
            "selector": ".slds-grid_pull-padded-x-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_pull-padded-x-small",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Normalizes the 0.75rem of padding when nesting a grid in a region with `.slds-p-horizontal_small`",
            "selector": ".slds-grid_pull-padded-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_pull-padded-small",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Normalizes the 1rem of padding when nesting a grid in a region with `.slds-p-horizontal_medium`",
            "selector": ".slds-grid_pull-padded-medium",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_pull-padded-medium",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Normalizes the 1.5rem of padding when nesting a grid in a region with `.slds-p-horizontal_large`",
            "selector": ".slds-grid_pull-padded-large",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_pull-padded-large",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Columns align in the center to the main axis and expand in each direction",
            "selector": ".slds-grid_align-center",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_align-center",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Columns are evenly distributed with equal space around them all",
            "selector": ".slds-grid_align-space",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_align-space",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Columns align to the left and right followed by center. Space is equal between them",
            "selector": ".slds-grid_align-spread",
            "notes": "With only two columns &mdash; you can get a similar effect by setting one of the columns to `.slds-no-flex`",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_align-spread",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Columns start on the opposite end of the grid's main axis",
            "selector": ".slds-grid_align-end",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_align-end",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Columns start at the beginning of the grid's cross axis",
            "selector": ".slds-grid_vertical-align-start",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_vertical-align-start",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Columns align in the center to the cross axis and expand it each direction",
            "selector": ".slds-grid_vertical-align-center",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_vertical-align-center",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Columns start on the opposite end of the grid's cross axis",
            "selector": ".slds-grid_vertical-align-end",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_vertical-align-end",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Stretch the grid items for both single row and multi-line rows to fill the height of the parent grid container",
            "selector": ".slds-grid_vertical-stretch",
            "notes": "Grid items will stretch the height of the parent grid container by default, unless `&lt;wrap&gt;` is used",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-grid_vertical-stretch",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "stretch",
              "label": "Column Stretch",
              "description": "By default, the grid items within a `.slds-grid` do not stretch to take up that available white-space on the main axis. Apply `.slds-col` to a grid item, it will stretch across the main axis. The width of each grid item will be determined by the content within that region."
            },
            {
              "id": "stretch-gutters",
              "label": "Column Stretch w/ Gutters",
              "description": "To apply gutters between each grid item, the following spacing classes are available to add your intended gutters, `.slds-p-horizontal_small`, `.slds-p-horizontal_medium`, `.slds-p-horizontal_large`, `.slds-p-around_small`, `.slds-p-around_medium` and `.slds-p-around_large`. You may need to pull the grid items back to their original grid boundaries of the grid container, apply the classes `.slds-grid_pull-padded`, `.slds-grid_pull-padded-medium` or `.slds-grid_pull-padded-large` to the `.slds-grid`."
            },
            {
              "id": "no-stretch",
              "label": "No Column Stretch"
            },
            {
              "id": "no-stretch-gutters",
              "label": "No Column Stretch w/ Gutters"
            },
            {
              "id": "regions-with-sizing",
              "label": "Manual Sizing",
              "description": "If you need to set explicit widths to your grid items, apply the sizing classes to your grid items. Check out [sizing helpers here](/utilities/sizing)."
            },
            {
              "id": "horizontal-align-center",
              "label": "Horizontal Alignment - Center",
              "description": "If you want your columns to grow from the the center of the main (horizontal) axis, apply the class `slds-grid_align-center`."
            },
            {
              "id": "horizontal-align-space",
              "label": "Horizontal Alignment - Space",
              "description": "To evenly distribute columns on the main axis with an equal amount of white space separating the columns, apply the class `slds-grid_align-space`."
            },
            {
              "id": "horizontal-align-spread",
              "label": "Horizontal Alignment - Spread",
              "description": "To spread out your columns on the main axis, with the first column starting at the start of your main axis and last item ending at the far end of your main axis, apply the class `.slds-grid_align-spread`."
            },
            {
              "id": "horizontal-align-end",
              "label": "Horizontal Alignment - End",
              "description": "If you want your columns to grow from the end of the main axis, apply the class `.slds-grid_align-end`."
            },
            {
              "id": "vertical-align-start",
              "label": "Vertical Alignment - Start",
              "description": "To align a single row or multi-line rows to the beginning of the cross axis, apply the class `.slds-grid_vertical-align-start`. Note, to vertically align elements on a cross-axis of a `.slds-grid`, the elements need available vertical white space. This is usually achieved by having a height applied to the `.slds-grid`."
            },
            {
              "id": "vertical-align-center",
              "label": "Vertical Alignment - Center",
              "description": "To vertically center align a single row or multi-line rows to the height of a grid container, apply the class `.slds-grid_vertical-align-center`. Note, to vertically align elements on a cross-axis of a `.slds-grid`, the elements need available vertical white space. This is usually achieved by having a height applied to the `.slds-grid`.When `.slds-grid_vertical-align-center` is used in conjunction with `.slds-grid_align-center`, the outcome would horizontally and vertically center align your content in the center of the `.slds-grid`."
            },
            {
              "id": "vertical-align-end",
              "label": "Vertical Alignment - End",
              "description": "To align a single row or multi-line rows to the end of the cross axis, apply the class `.slds-grid_vertical-align-center`. Note, to vertically align elements on a cross-axis of a `.slds-grid`, the elements need available vertical white space. This is usually achieved by having a height applied to the `.slds-grid`."
            },
            {
              "id": "vertical-align-item",
              "label": "Vertical Alignment - Item",
              "description": "To specify the vertical placement of grid items on the cross axis, you can apply `.slds-align-top`, `.slds-align-middle`, and `.slds-align-bottom` to a grid item. Note, to vertically align elements on a cross-axis of a `.slds-grid`, the elements need available vertical white space. This is usually achieved by having a height applied to the `.slds-grid`."
            },
            {
              "id": "vertical-strecth",
              "label": "Vertical Stretch",
              "description": "By default, grid items extend vertically unless `.slds-wrap` is applied to your parent grid container or you have multiple rows. If you have need multiple rows that stretch the height of the parent grid container, you can apply the class `.slds-grid_vertical-stretch`. Note, to vertically align elements on a cross-axis of a `.slds-grid`, the elements need available vertical white space. This is usually achieved by having a height applied to the `.slds-grid`."
            },
            {
              "id": "align-item-bump",
              "label": "Alignment Item Bump",
              "description": "To \"bump\" a single grid item or a grid item plus the precedding grid items that follow, apply the class `.slds-col_bump-{direction}`, with `{direction}` being either `left`, `right`, `top` or `bottom` to a grid item."
            },
            {
              "id": "order",
              "label": "Ordering",
              "description": "These helper classes visually reorder grid elements independently from their position in the markup."
            },
            {
              "id": "container-app-frame",
              "label": "Container - App Frame",
              "description": "If you want your application to fill 100% of the width and height of the viewport and nest other grids inside, use the top-level app helper class `.slds-grid_frame`."
            },
            {
              "id": "containers",
              "label": "Containers",
              "description": "You can use the grid system&rsquo;s containers to constrain your content to a certain width. You can center or left or right align the containers within your viewport."
            }
          ]
        }
      ]
    },
    "horizontal-list": {
      "description": "",
      "annotations": {
        "summary": "A horizontal list",
        "utility": true,
        "name": "horizontal-list",
        "selector": "[class*='slds-list_horizontal']",
        "support": "dev-ready"
      },
      "id": "horizontal-list",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Causes items of a list to display horizontally",
            "selector": ".slds-list_horizontal",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-list_horizontal",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "horizontal-list",
              "label": "Default"
            },
            {
              "id": "horizontal-list-links",
              "label": "Links"
            },
            {
              "id": "horizontal-list-block-links",
              "label": "Block links"
            },
            {
              "id": "horizontal-list-block-links-space",
              "label": "Block links with space"
            },
            {
              "id": "horizontal-list-inline-block-links",
              "label": "Inline block links"
            },
            {
              "id": "horizontal-list-inline-block-links-space",
              "label": "Inline block links with space"
            },
            {
              "id": "horizontal-list-left",
              "label": "Left"
            },
            {
              "id": "horizontal-list-link-left",
              "label": "Left with link"
            },
            {
              "id": "horizontal-list-link-space-left",
              "label": "Left with link space"
            },
            {
              "id": "horizontal-list-right",
              "label": "Right"
            },
            {
              "id": "horizontal-list-link-right",
              "label": "Right with link"
            },
            {
              "id": "horizontal-list-link-space-right",
              "label": "Right with link space"
            }
          ]
        }
      ]
    },
    "scrollable": {
      "description": "Use the scrollable utility when you need to provide scrolling within a section of a page. For example, when the content within an element exceeds either the width or height of the element, applying `.slds-scrollable_y` provides a vertical scrollbar, while `.slds-scrollable_x` adds a horizontal scrollbar.",
      "annotations": {
        "summary": "Make a containing box scrollable when scrolling is available.",
        "utility": true,
        "name": "scrollable",
        "selector": "[class*='slds-scrollable']",
        "support": "dev-ready",
        "s1": "false"
      },
      "id": "scrollable",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Forces element to scroll horizontally and vertically when content exceeds element's width and height",
            "selector": ".slds-scrollable",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-scrollable",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Forces overflow items to not scroll within element's width and height",
            "selector": ".slds-scrollable_none",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-scrollable_none",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Forces element to scroll vertically when content exceeds element's height",
            "selector": ".slds-scrollable_y",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-scrollable_y",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Forces element to scroll horizontally when content exceeds element's width",
            "selector": ".slds-scrollable_x",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-scrollable_x",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "auto",
              "label": "Auto"
            },
            {
              "id": "none",
              "label": "None"
            },
            {
              "id": "x-axis",
              "label": "X-axis"
            },
            {
              "id": "y-axis",
              "label": "Y-axis"
            }
          ]
        }
      ]
    },
    "borders": {
      "description": "",
      "annotations": {
        "summary": "Use border utility classes to add borders to elements",
        "utility": true,
        "name": "borders",
        "selector": "[class*='slds-border_']",
        "support": "dev-ready"
      },
      "id": "borders",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Adds a bottom border to an element",
            "selector": ".slds-border_bottom",
            "modifier": true,
            "group": "position",
            "restrict": "*"
          },
          "id": ".slds-border_bottom",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Adds a left border to an element",
            "selector": ".slds-border_left",
            "modifier": true,
            "group": "position",
            "restrict": "*"
          },
          "id": ".slds-border_left",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Adds a right border to an element",
            "selector": ".slds-border_right",
            "modifier": true,
            "group": "position",
            "restrict": "*"
          },
          "id": ".slds-border_right",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Adds a top border to an element",
            "selector": ".slds-border_top",
            "modifier": true,
            "group": "position",
            "restrict": "*"
          },
          "id": ".slds-border_top",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "top",
              "label": "Top"
            },
            {
              "id": "right",
              "label": "Right"
            },
            {
              "id": "bottom",
              "label": "Bottom"
            },
            {
              "id": "left",
              "label": "Left"
            }
          ]
        },
        {
          "title": "default",
          "items": [
            {
              "id": "default"
            }
          ]
        }
      ]
    },
    "truncation": {
      "description": "If problems occur when using truncation with elements that use flexbox, you might need to add the `.slds-has-flexi-truncate` class on the flexbox child node ( `.slds-col` or `.slds-col_padded` elements) that contains the truncated text.\n\n**Note:** There is an iOS bug that is triggered when you add a component from Visualforce into S1 using an iFrame. The truncated element does not recognize its width.",
      "annotations": {
        "summary": "When applying truncation, place the full text in a title attribute so that it’s accessible on&nbsp;hover.",
        "utility": true,
        "name": "truncation",
        "selector": "[class*='truncate']",
        "support": "dev-ready"
      },
      "id": "truncation",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Needed when truncation is nested in a flexible container in a grid",
            "selector": ".slds-has-flexi-truncate",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-has-flexi-truncate",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Truncates text at 25% of its parent container",
            "selector": ".slds-truncate_container_25",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-truncate_container_25",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Truncates text at 50% of its parent container",
            "selector": ".slds-truncate_container_50",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-truncate_container_50",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Truncates text at 75% of its parent container",
            "selector": ".slds-truncate_container_75",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-truncate_container_75",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Truncates text at 33% of its parent container",
            "selector": ".slds-truncate_container_33",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-truncate_container_33",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Truncates text at 66% of its parent container",
            "selector": ".slds-truncate_container_66",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-truncate_container_66",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "fluid",
              "label": "Fluid"
            },
            {
              "id": "25%",
              "label": "Max-width 25%"
            },
            {
              "id": "33%",
              "label": "Max-width 33%"
            },
            {
              "id": "50%",
              "label": "Max-width 50%"
            },
            {
              "id": "66%",
              "label": "Max-width 66%"
            },
            {
              "id": "75%",
              "label": "Max-width 75%"
            }
          ]
        }
      ]
    },
    "position": {
      "description": "",
      "annotations": {
        "summary": "Positioning utilities give you the ability to change the position property of an element.",
        "utility": true,
        "name": "position",
        "selector": "[class*='slds-is-']",
        "support": "dev-ready"
      },
      "id": "position",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Reset positioning back to normal behavior",
            "name": "static",
            "selector": ".slds-is-static",
            "modifier": true,
            "restrict": "*"
          },
          "id": "static",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Used to contain children if children are absolutely positioned and out of flow. Also used to position element without changing layout.",
            "name": "relative",
            "selector": ".slds-is-relative",
            "modifier": true,
            "restrict": "*"
          },
          "id": "relative",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Used to position an element relative to the viewport.",
            "name": "fixed",
            "selector": ".slds-is-fixed",
            "modifier": true,
            "restrict": "*"
          },
          "id": "fixed",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Used to position an element relative to its closest ancestor with relative positioning.",
            "name": "absolute",
            "selector": ".slds-is-absolute",
            "modifier": true,
            "restrict": "*"
          },
          "id": "absolute",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Provides styles for a nested lists",
            "selector": ".slds-is-nested",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-is-nested",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Hides elements inside a parent",
            "selector": ".slds-is-collapsed",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-is-collapsed",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Shows the elements inside the parent",
            "selector": ".slds-is-collapsed",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-is-collapsed",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "fixed",
              "label": "Fixed",
              "description": "`.slds-is-fixed` can be used to position a container relative to the viewport."
            },
            {
              "id": "absolute",
              "label": "Absolute",
              "description": "`.slds-is-absolute` can be used to position a container relative to its closest ancestor with relative positioning."
            },
            {
              "id": "relative",
              "label": "Relative",
              "description": "`.slds-is-relative` can be used to contain children if children are absolutely positioned and out of flow. It is also used to position element without changing layout."
            },
            {
              "id": "static",
              "label": "Static",
              "description": "`.slds-is-static` resets positioning of element back to normal behavior."
            }
          ]
        }
      ]
    },
    "themes": {
      "description": "Use a color theme to apply color to the background and text. Some color themes apply a background image or texture.",
      "annotations": {
        "summary": "Themes apply a set of color styles to an area.",
        "utility": true,
        "name": "themes",
        "selector": "[class*='slds-theme']",
        "support": "dev-ready"
      },
      "id": "themes",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Sets the background color to white",
            "selector": ".slds-theme_default",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_default",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Sets the background color to gray",
            "selector": ".slds-theme_shade",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_shade",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Sets the background color to dark blue",
            "selector": ".slds-theme_inverse",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_inverse",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Sets the background color to darker blue",
            "selector": ".slds-theme_alt-inverse",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_alt-inverse",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Sets the background color to green",
            "selector": ".slds-theme_success",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_success",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Sets the background color to gray-ish blue",
            "selector": ".slds-theme_info",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_info",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Sets the background color to yellow",
            "selector": ".slds-theme_warning",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_warning",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Sets the background color to red",
            "selector": ".slds-theme_error",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_error",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Sets the background color to black",
            "selector": ".slds-theme_offline",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_offline",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Adds striped background",
            "selector": ".slds-theme_alert-texture",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-theme_alert-texture",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "default",
              "label": "Default"
            },
            {
              "id": "shade",
              "label": "Shade"
            },
            {
              "id": "texture",
              "label": "Shade with texture"
            }
          ]
        }
      ]
    },
    "media-objects": {
      "description": "Placing text next to an image, icon, figure, or video is common for many applications. The figure can be either on the right, left, or both. The text can start at the top of the image or be centered next to it. The width of the media object is controlled either by the parent container or a secondary module class.\n\nThe `.slds-media` object can be used as a container on any element. Inside are the two required elements. The figure (typically an image or an icon) should be placed inside an element with the `.slds-media__figure` class. Next to it is typically some text that should be placed in an element with the `.slds-media__body` class.\n\nBy default, the text starts at the top of the figure. Center the body and the figure by applying the `.slds-media_center` class to `.slds-media`.\n\nTo position the figure on the other side of the body, apply the `.slds-media__figure_reverse` to the figure.\n\nYou may also position figures on both sides of the body at the same time using `.slds-media__figure` and `.slds-media__figure_reverse`.",
      "annotations": {
        "summary": "When you need text and a figure next to each other, use a media object.",
        "utility": true,
        "name": "media-objects",
        "selector": "[class*='slds-media_']",
        "support": "dev-ready"
      },
      "id": "media-objects",
      "restrictees": [
        {
          "description": "Defines the figure area",
          "annotations": {
            "selector": ".slds-media__figure",
            "restrict": "*"
          },
          "id": ".slds-media__figure",
          "restrictees": []
        },
        {
          "description": "Defines the body area",
          "annotations": {
            "selector": ".slds-media__body",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-media__body",
          "restrictees": []
        },
        {
          "description": "Adjusts whitespace on smaller media objects",
          "annotations": {
            "selector": ".slds-media_small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-media_small",
          "restrictees": []
        },
        {
          "description": "Adjusts whitespace on larger media objects",
          "annotations": {
            "selector": ".slds-media_large",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-media_large",
          "restrictees": []
        },
        {
          "description": "Aligns the content in the .slds-media__body to the middle of the .slds-media__figure",
          "annotations": {
            "selector": ".slds-media_center",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-media_center",
          "restrictees": []
        },
        {
          "description": "Defines the figure area on the other side",
          "annotations": {
            "selector": ".slds-media__figure_reverse",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-media__figure_reverse",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": ".slds-media__figure and .slds-media__body stack on smaller screens",
            "selector": ".slds-media_responsive",
            "modifer": true,
            "restrict": "*"
          },
          "id": ".slds-media_responsive",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "default",
              "label": "Default"
            },
            {
              "id": "center",
              "label": "Centered vertically"
            },
            {
              "id": "reverse",
              "label": "Reverse"
            },
            {
              "id": "reverse-center",
              "label": "Reverse centered vertically"
            },
            {
              "id": "double",
              "label": "Double figures"
            },
            {
              "id": "responsive",
              "label": "Responsive"
            }
          ]
        }
      ]
    },
    "box": {
      "description": "Three padding settings are available. You can also add a [color theme](/components/utilities/themes/#flavor-color) to your box.\n\n content.",
      "annotations": {
        "summary": "A box theme applies spacing, a border, and rounded corners to areas of",
        "utility": true,
        "name": "box",
        "selector": "[class*='slds-box']",
        "support": "dev-ready"
      },
      "id": "box",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Provides 1rem base padding and borders",
            "selector": ".slds-box",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-box",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "default",
              "label": "Size - Default"
            },
            {
              "id": "small",
              "label": "Size - small"
            },
            {
              "id": "x-small",
              "label": "Size - x-xmall"
            },
            {
              "id": "xx-small",
              "label": "Size - xx-small"
            }
          ]
        }
      ]
    },
    "text": {
      "description": "In our framework, all headings (`h1`&ndash;`h6`)\nare reset to the base (body text) size, with margins and padding reset\nto zero. When building an enterprise application, the heading level may vary\ndepending on the context of the component or page. Using the correct\nheading level is important for&nbsp;accessibility.\n\nThe text helper classes help maintain visual hierarchy separately from\nthe structural markup hierarchy.",
      "annotations": {
        "summary": "For consistent typography throughout the application, we created text helper classes for headings and body&nbsp;text.",
        "utility": true,
        "name": "text",
        "selector": "[class*='slds-text-']",
        "support": "dev-ready"
      },
      "id": "text",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Makes links and buttons appear as regular text",
            "selector": ".slds-text-link_reset",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-link_reset",
          "restrictees": []
        },
        {
          "description": "Used in combination with `.slds-text-link--reset`, you can apply the class `.slds-text-link` to a child element to reset its styles back to that of a link.",
          "annotations": {
            "summary": "Makes text inside of .slds-text-link_reset to appear as a link.",
            "selector": ".slds-text-link",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-link",
          "restrictees": []
        },
        {
          "description": "Faux links are used on areas that can't be wrapped in an `a` element, but need to appear to be a link with an underline on hover. An example is in the page header for Object home. The `H1` and `button` that sit next to each other have the `.slds-text-link--faux` class on their parent element.",
          "annotations": {
            "summary": "Creates a faux link with hover interactions",
            "selector": ".slds-text-link_faux",
            "notes": "This is used when an actual anchor element can not be used. For example &mdash; when a heading and button are next to each other and both need the text underline",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-link_faux",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Creates the 13px regular body copy",
            "selector": ".slds-text-body_regular",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-body_regular",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Creates a more pale-colored 12px copy",
            "selector": ".slds-text-body_small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-body_small",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Very large 28px heading",
            "selector": ".slds-text-heading_large",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-heading_large",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Large 20px heading",
            "selector": ".slds-text-heading_medium",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-heading_medium",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Smaller 16px heading",
            "selector": ".slds-text-heading_small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-heading_small",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "12px heading that is not all caps",
            "selector": ".slds-text-title",
            "notes": "Usually labels small content areas like list sections.",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-title",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "All caps 12px heading",
            "selector": ".slds-text-title_caps",
            "notes": "Usually labels small content areas like tabs and page header titles.",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-title_caps",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Default color of text",
            "selector": ".slds-text-color_default",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-color_default",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Weak color of text",
            "selector": ".slds-text-color_weak",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-color_weak",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Error color of text",
            "selector": ".slds-text-color_error",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-color_error",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Default color of text on inversed background",
            "selector": ".slds-text-color_inverse",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-color_inverse",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Weak color of text on inversed background",
            "selector": ".slds-text-color_inverse-weak",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-color_inverse-weak",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Aligns text left",
            "selector": ".slds-text-align_left",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-align_left",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Aligns text center",
            "selector": ".slds-text-align_center",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-align_center",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Aligns text right",
            "selector": ".slds-text-align_right",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-align_right",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Adds default spacing and list styling within a wrapper",
            "selector": ".slds-text-longform",
            "notes": "Our application framework removes default text styling. This adds in margins to large areas",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-text-longform",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "body-default",
              "label": "Body size - default",
              "description": "This default helper sets regular body copy. You usually don&rsquo;t need this class since most components will inherit this globally from the `body` element. However, it exists if you still need to specifically set it."
            },
            {
              "id": "body-small",
              "label": "Body size - Small",
              "description": "This body-small text helper sets smaller, subtler body copy. It is typically used as supportive text."
            },
            {
              "id": "heading-large",
              "label": "Heading size - Large"
            },
            {
              "id": "heading-medium",
              "label": "Heading size - Medium"
            },
            {
              "id": "heading-small",
              "label": "Heading size - Small"
            },
            {
              "id": "heading-title",
              "label": "Title"
            },
            {
              "id": "heading-title--caps",
              "label": "Title uppercase"
            },
            {
              "id": "longform",
              "label": "Longform"
            },
            {
              "id": "align-left",
              "label": "Align left",
              "description": "These helpers align text to the left, right, or center. Note that this is not used for layout and is only for aligning text horizontally."
            },
            {
              "id": "align-right",
              "label": "Align right",
              "description": "These helpers align text to the left, right, or center. Note that this is not used for layout and is only for aligning text horizontally."
            },
            {
              "id": "align-center",
              "label": "Align center",
              "description": "These helpers align text to the left, right, or center. Note that this is not used for layout and is only for aligning text horizontally."
            },
            {
              "id": "text-color-default",
              "label": "Color - Default"
            },
            {
              "id": "text-color-weak",
              "label": "Color - Weak"
            },
            {
              "id": "text-color-error",
              "label": "Color - Error"
            },
            {
              "id": "text-color-inverse",
              "label": "Color - Inverse"
            },
            {
              "id": "text-color-inverse-weak",
              "label": "Color - Inverse - Weak"
            }
          ]
        }
      ]
    },
    "margin": {
      "description": "Spacing indicates `margin` and `padding`. The base unit of all our spacing metrics is **4**.\n\n- Most components already come with spacing included. These utility classes are for added convenience in laying out components.\n- Classes prefixed by `.slds-m-` are used for adding **margins**. Classes prefixed in `.slds-p-` are used for adding **padding**\n- The directions available for the spacing classes are `top`, `right`, `bottom`, and `left`.\n- You can use the `vertical` shortcut for both `top` and `bottom`, `horizontal` for both `right` and `left`, and `around` for all sides.\n- Use the `_xxx-small` through `_xx-large` scale to choose the size needed.\n- Where **vertical centering** is required, check out our [/components/utilities/media-objects/#center](centered media object) instead of applying extra `margin` or `padding`.",
      "annotations": {
        "summary": "Adjust whitespace with horizontal and vertical spacing helpers",
        "utility": true,
        "name": "margin",
        "selector": "[class*='slds-m-']",
        "support": "dev-ready"
      },
      "id": "margin",
      "restrictees": [
        {
          "description": "Adds .125rem margin to the side specified",
          "annotations": {
            "selector": ".slds-m-*_xxx-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*_xxx-small",
          "restrictees": []
        },
        {
          "description": "Adds .25rem margin to the side specified",
          "annotations": {
            "selector": ".slds-m-*_xx-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*_xx-small",
          "restrictees": []
        },
        {
          "description": "Adds .5rem margin to the side specified",
          "annotations": {
            "selector": ".slds-m-*_x-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*_x-small",
          "restrictees": []
        },
        {
          "description": "Adds .75rem margin to the side specified",
          "annotations": {
            "selector": ".slds-m-*_small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*_small",
          "restrictees": []
        },
        {
          "description": "Adds 1rem margin to the side specified",
          "annotations": {
            "selector": ".slds-m-*_medium",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*_medium",
          "restrictees": []
        },
        {
          "description": "Adds 1.5rem margin to the side specified",
          "annotations": {
            "selector": ".slds-m-*_large",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*_large",
          "restrictees": []
        },
        {
          "description": "Adds 2rem margin to the side specified",
          "annotations": {
            "selector": ".slds-m-*_x-large",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*_x-large",
          "restrictees": []
        },
        {
          "description": "Adds 3rem margin to the side specified",
          "annotations": {
            "selector": ".slds-m-*_xx-large",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*_xx-large",
          "restrictees": []
        },
        {
          "description": "Adds the specified margin to both top and bottom",
          "annotations": {
            "selector": ".slds-m-*-vertical_*",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*-vertical_*",
          "restrictees": []
        },
        {
          "description": "Adds the specified margin to both sides",
          "annotations": {
            "selector": ".slds-m-*-horizontal_*",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*-horizontal_*",
          "restrictees": []
        },
        {
          "description": "Adds the specified margin all the way around the element",
          "annotations": {
            "selector": ".slds-m-*-around_*",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-m-*-around_*",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "top",
              "label": "Top"
            },
            {
              "id": "right",
              "label": "Right"
            },
            {
              "id": "bottom",
              "label": "Bottom"
            },
            {
              "id": "left",
              "label": "Left"
            },
            {
              "id": "vertical",
              "label": "Vertical"
            },
            {
              "id": "horizontal",
              "label": "Horizontal"
            },
            {
              "id": "around",
              "label": "Around"
            }
          ]
        }
      ]
    },
    "description-list": {
      "description": "",
      "annotations": {
        "summary": "A description list",
        "utility": true,
        "name": "description-list",
        "selector": "[class*='slds-dl']",
        "support": "dev-ready"
      },
      "id": "description-list",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Causes description list to display horizontally with `dt` followed immediately by the `dd`.",
            "selector": ".slds-dl_inline",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-dl_inline",
          "restrictees": []
        },
        {
          "description": "Marks a term",
          "annotations": {
            "selector": ".slds-dl_inline__label",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-dl_inline__label",
          "restrictees": []
        },
        {
          "description": "Marks a description",
          "annotations": {
            "selector": ".slds-dl_inline__detail",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-dl_inline__detail",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Causes description list to display horizontally with `dt` consuming 33% of the space and the `dd` taking up the rest.",
            "selector": ".slds-dl_horizontal",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-dl_horizontal",
          "restrictees": []
        },
        {
          "description": "Marks a term",
          "annotations": {
            "selector": ".slds-dl_horizontal__label",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-dl_horizontal__label",
          "restrictees": []
        },
        {
          "description": "Marks a description",
          "annotations": {
            "selector": ".slds-dl_horizontal__detail",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-dl_horizontal__detail",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "description-list",
              "label": "Default"
            },
            {
              "id": "description-list-inline",
              "label": "Inline"
            },
            {
              "id": "description-list-horizontal",
              "label": "Horizontal"
            }
          ]
        }
      ]
    },
    "padding": {
      "description": "Spacing indicates `margin` and `padding`. The base unit of all our spacing metrics is **4**.\n\n- Most components already come with spacing included. These utility classes are for added convenience in laying out components.\n- Classes prefixed by `.slds-m-` are used for adding **margins**. Classes prefixed in `.slds-p-` are used for adding **padding**\n- The directions available for the spacing classes are `top`, `right`, `bottom`, and `left`.\n- You can use the `vertical` shortcut for both `top` and `bottom`, `horizontal` for both `right` and `left`, and `around` for all sides.\n- Use the `_xxx-small` through `_xx-large` scale to choose the size needed.\n- Where **vertical centering** is required, check out our [/components/utilities/media-objects/#center](centered media object) instead of applying extra `margin` or `padding`.",
      "annotations": {
        "summary": "Adjust whitespace with horizontal and vertical spacing helpers",
        "utility": true,
        "name": "padding",
        "selector": "[class*='slds-p-']",
        "support": "dev-ready"
      },
      "id": "padding",
      "restrictees": [
        {
          "description": "Adds .125rem padding to the side specified",
          "annotations": {
            "selector": ".slds-p-*_xxx-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*_xxx-small",
          "restrictees": []
        },
        {
          "description": "Adds .25rem padding to the side specified",
          "annotations": {
            "selector": ".slds-p-*_xx-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*_xx-small",
          "restrictees": []
        },
        {
          "description": "Adds .5rem padding to the side specified",
          "annotations": {
            "selector": ".slds-p-*_x-small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*_x-small",
          "restrictees": []
        },
        {
          "description": "Adds .75rem padding to the side specified",
          "annotations": {
            "selector": ".slds-p-*_small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*_small",
          "restrictees": []
        },
        {
          "description": "Adds 1rem padding to the side specified",
          "annotations": {
            "selector": ".slds-p-*_medium",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*_medium",
          "restrictees": []
        },
        {
          "description": "Adds 1.5rem padding to the side specified",
          "annotations": {
            "selector": ".slds-p-*_large",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*_large",
          "restrictees": []
        },
        {
          "description": "Adds 2rem padding to the side specified",
          "annotations": {
            "selector": ".slds-p-*_x-large",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*_x-large",
          "restrictees": []
        },
        {
          "description": "Adds 3rem padding to the side specified",
          "annotations": {
            "selector": ".slds-p-*_xx-large",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*_xx-large",
          "restrictees": []
        },
        {
          "description": "Adds the specified padding to both top and bottom",
          "annotations": {
            "selector": ".slds-p-*-vertical_*",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*-vertical_*",
          "restrictees": []
        },
        {
          "description": "Adds the specified padding to both sides",
          "annotations": {
            "selector": ".slds-p-*-horizontal_*",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*-horizontal_*",
          "restrictees": []
        },
        {
          "description": "Adds the specified padding all the way around the element",
          "annotations": {
            "selector": ".slds-p-*-around_*",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-p-*-around_*",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "top",
              "label": "Top"
            },
            {
              "id": "right",
              "label": "Right"
            },
            {
              "id": "bottom",
              "label": "Bottom"
            },
            {
              "id": "left",
              "label": "Left"
            },
            {
              "id": "vertical",
              "label": "Vertical"
            },
            {
              "id": "horizontal",
              "label": "Horizontal"
            },
            {
              "id": "around",
              "label": "Around"
            }
          ]
        }
      ]
    },
    "visibility": {
      "description": "",
      "annotations": {
        "summary": "You can specify how to show and hide elements.",
        "utility": true,
        "name": "visibility",
        "selector": "[class*='show'], [class*='hide'], [class*='assistive-text']",
        "support": "dev-ready",
        "layout": "responsive"
      },
      "id": "visibility",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Hides an element yet enables a screen reader to read the element that is hidden",
            "selector": ".slds-assistive-text",
            "notes": "This should be used over other methods when you don't want to hide from screenreaders",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-assistive-text",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Hides an element from the page by setting display propery to `none`",
            "selector": ".slds-hide",
            "notes": "An element hidden with this class will take up no space on the page and will not be announced by screenreaders.",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-hide",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Shows the element by setting display property to `block`",
            "selector": ".slds-show",
            "notes": "This is toggled on the element. `.slds-hide` class is removed and `.slds-show` is added.",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-show",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Shows the element by setting display to `inline-block`",
            "selector": ".slds-show_inline-block",
            "notes": "This is toggled on the element. `.slds-hide` class is removed and `.slds-show--inline-block` is added.",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-show_inline-block",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Shows the element by setting display to `inline`",
            "selector": ".slds-show_inline",
            "notes": "This is toggled on the element. `.slds-hide` class is removed and `.slds-show--inline` is added.",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-show_inline",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Hides an element from the page by setting the opacity property set to `0`",
            "selector": ".transition-hide",
            "notes": "This works like the `.slds-hidden` class and reserves the space but allows you to add the `transition` property to transition the speed that it is shown or hidden.",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".transition-hide",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Shows the element using the opacity property set to `1`",
            "selector": ".transition-show",
            "notes": "This is toggled on the element. `.slds-transition-hide` class is removed and `.slds-transition-show` is added.",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".transition-show",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Hides the element when the window is bigger than the specific size. Sizes can be: x-small, small, medium, large, and * x-large.",
            "selector": ".slds-hide_*",
            "notes": "Element will be displayed normally when the window is smaller",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-hide_*",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Shows the element when the window is bigger than the specific size. Sizes can be: x-small, small, medium, large, and * x-large.",
            "selector": ".slds-show_*",
            "notes": "Element will be displayed normally when the window is bigger",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-show_*",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "assistive-text",
              "label": "Assistive Text",
              "description": "Use the `slds-assistive-text` class to enable a screen reader to read text that is hidden. This class is typically used to accompany icons and other UI elements that show an image instead of text."
            },
            {
              "id": "collapsed-expanded",
              "label": "Collapsed / Expanded",
              "description": "The `.slds-is-collapsed` class hides the elements contained inside by controlling the height and overflow properties. Use the `.slds-is-expanded` class to show the elements contained inside in their normal expanded state."
            },
            {
              "id": "hidden-visible",
              "label": "Hidden / Visible",
              "description": "You can hide an element but reserve the space on the page for when the element is made visible again. To hide the element, use the  `slds-hidden` class. To make it visible again, use the `slds-visible` class."
            },
            {
              "id": "hide-show",
              "label": "Hide / Show",
              "description": "To hide an element and have it not take up space on the page, use the  `.slds-hide` class. You can toggle the state with JavaScript to show the element at a later&nbsp;time. To make the element visible again, use `.slds-show`. If you need to make the hidden element visible again in an inline-block state, use  `.slds-show_inline-block`."
            },
            {
              "id": "transition-hide-show",
              "label": "Transition Hide / Show",
              "description": "To slowly transition an element from hiding and showing, use the  `slds-transition-hide` and `slds-transition-show` classes . They toggle the element's opacity and also reserve its space. Note: To control the timing of the transition, add an additional `transition` property to control the opacity change."
            },
            {
              "id": "responsive",
              "label": "Responsive",
              "description": "\nResponsive visibility classes will hide content on specific breakpoints. `slds-show_[breakpoint]` renders `display: none` when the the view port width is smaller than the breakpoint, and does nothing if it is bigger or equal. `slds-hide_[breakpoint]` does the oposite by rendering `display: none` when the the viewport width is bigger or equal than the breakpoint, and does nothing if it is smaller.\n\n|Class Name|Less than 320px|X-Small (>= 320px)|Small (>= 480px)|Medium (>= 768px)|Large (>= 1024px)|X-Large (>= 1280px)|\n|---|---|---|---|---|---|---|\n|`.slds-hide_x-small`|Show|Hide|Hide|Hide|Hide|Hide|\n|`.slds-show_x-small`|Hide|Show|Show|Show|Show|Show|\n|`.slds-hide_small`|Show|Show|Hide|Hide|Hide|Hide|\n|`.slds-show_small`|Hide|Hide|Show|Show|Show|Show|\n|`.slds-hide_medium`|Show|Show|Show|Hide|Hide|Hide|\n|`.slds-show_medium`|Hide|Hide|Hide|Show|Show|Show|\n|`.slds-hide_large`|Show|Show|Show|Show|Hide|Hide|\n|`.slds-show_large`|Hide|Hide|Hide|Hide|Show|Show|\n|`.slds-hide_x-large`|Show|Show|Show|Show|Show|Hide|\n|`.slds-show_x-large`|Hide|Hide|Hide|Hide|Hide|Show|\n    "
            }
          ]
        }
      ]
    },
    "vertical-list": {
      "description": "",
      "annotations": {
        "summary": "A vertical list",
        "utility": true,
        "name": "vertical-list",
        "selector": "[class*='slds-list_vertical']",
        "support": "dev-ready"
      },
      "id": "vertical-list",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Marks a vertical list with .5rem spacing around",
            "selector": ".slds-list_vertical-space",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-list_vertical-space",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Marks a vertical list with 1rem spacing around",
            "selector": ".slds-list_vertical-space-medium",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-list_vertical-space-medium",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "vertical-list",
              "label": "Default"
            },
            {
              "id": "unordered-list-decimal",
              "label": "Dotted"
            },
            {
              "id": "ordered-list-decimal",
              "label": "Decimal"
            },
            {
              "id": "vertical-list-links",
              "label": "Links"
            },
            {
              "id": "vertical-list-block-links",
              "label": "Block links"
            },
            {
              "id": "vertical-list-block-links-space",
              "label": "Block links with space"
            },
            {
              "id": "vertical-list-inline-block-links",
              "label": "Inline block links"
            },
            {
              "id": "vertical-list-inline-block-links-space",
              "label": "Inline block links with space"
            },
            {
              "id": "vertical-list-nested",
              "label": "Nested vertical lists"
            },
            {
              "id": "vertical-dividers-top",
              "label": "Top"
            },
            {
              "id": "vertical-dividers-top-space",
              "label": "Top with space"
            },
            {
              "id": "vertical-dividers-link-top",
              "label": "Top with link"
            },
            {
              "id": "vertical-dividers-link-top-space",
              "label": "Top with link and space"
            },
            {
              "id": "vertical-dividers-bottom",
              "label": "Bottom"
            },
            {
              "id": "vertical-dividers-bottom-space",
              "label": "Bottom with space"
            },
            {
              "id": "vertical-dividers-link-bottom",
              "label": "Bottom with link"
            },
            {
              "id": "vertical-dividers-link-bottom-space",
              "label": "Bottom with link and space"
            },
            {
              "id": "vertical-dividers-around",
              "label": "Around"
            },
            {
              "id": "vertical-dividers-around-space",
              "label": "Around with space"
            },
            {
              "id": "vertical-dividers-link-around",
              "label": "Around with link"
            },
            {
              "id": "vertical-dividers-link-around-space",
              "label": "Around with link and space"
            }
          ]
        }
      ]
    },
    "floats": {
      "description": "To float an element on the left, add the `.slds-float_left` class to the element. To float it on the right, add the `.slds-float_right` class.\n\nNote: The floated element must be first in the document flow, even if it renders on the right.\n\nIf you want the parent of the floated element to contain the floats, add the `.slds-clearfix` class to the parent.",
      "annotations": {
        "summary": "Use a float to pull an element out of the document’s normal flow and to align it with the left or right side of the container.",
        "utility": true,
        "name": "floats",
        "selector": "[class*='slds-float_']",
        "support": "dev-ready"
      },
      "id": "floats",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Pulls element from document flow and floats left. Text and other elements wrap around it.",
            "name": "float-left",
            "selector": ".slds-float_left",
            "modifier": true,
            "restrict": "*"
          },
          "id": "float-left",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Removes float from an element that has attribute already",
            "name": "float-none",
            "selector": ".slds-float_none",
            "modifier": true,
            "restrict": "*"
          },
          "id": "float-none",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Pulls element from document flow and floats right. Text and other elements wrap around it.",
            "name": "float-right",
            "selector": ".slds-float_right",
            "modifier": true,
            "restrict": "*"
          },
          "id": "float-right",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "left",
              "label": "Left"
            },
            {
              "id": "right",
              "label": "Right"
            },
            {
              "id": "none",
              "label": "None"
            },
            {
              "id": "clearfix",
              "label": "Clearfix"
            }
          ]
        },
        {
          "title": "default",
          "items": [
            {
              "id": "default"
            }
          ]
        }
      ]
    },
    "name-value-list": {
      "description": "",
      "annotations": {
        "summary": "An unordered list that describes a name/value pairing",
        "utility": true,
        "name": "name-value-list",
        "selector": "[class*='slds-item_']",
        "support": "dev-ready"
      },
      "id": "name-value-list",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "summary": "Label of the name-value pair variant. Layout is modified by its parent class.",
            "selector": ".slds-item_label",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-item_label",
          "restrictees": []
        },
        {
          "description": "",
          "annotations": {
            "summary": "Label of the name-value pair variant. Layout is modified by its parent class.",
            "selector": ".slds-item_detail",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-item_detail",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "name-value-pair-horizontal",
              "label": "Horizontal"
            },
            {
              "id": "name-value-pair-inline",
              "label": "Inline"
            },
            {
              "id": "name-value-pair-stacked",
              "label": "Stacked"
            }
          ]
        }
      ]
    },
    "sizing": {
      "description": "Our sizing class names are set up in a human-readable format, e.g. `.slds-size_1-of-2`. This equates to a width of 50%.\n\nBy default, a group of sizing helpers are created based on standard grid column spans of &ndash; 2, 3, 4, 5, 6, 7, 8 and 12. For example, if you need 3 cards to horizontally align along the same x-axis, you would use the class `.slds-size_1-of-3` on each element. This will make each card take up 33.333% of containing section.\n\nOur sizing helpers have the option to be responsive. By pre-pending a breakpoint name to a sizing helper, e.g. `.slds-medium-size_1-of-3` you will output a width at the specified breakpoint name.\n\nAbsolute sizing helpers are also available (where widths are declared in `rem` units): `xx-small`, `x-small`, `medium`, `large`, `x-large` and `xx-large` as defined in the <a href=\"/design-tokens/#category-sizing\">sizing category of the Design Tokens</a>. e.g. `.slds-size_large`.\n\nIn some uncommon cases, you may need a sizing helper that is up to a certain breakpoint. For these, use the classes prefixed with `max-` to achieve this result.\n\nHere is an overview of our available breakpoint names:\n\n| Breakpoint Name | Breakpoint Width         |\n| --------------- | ------------------------ |\n| `small-`        | 30em / 480px and higher  |\n| `medium-`       | 48em / 768px and higher  |\n| `large-`        | 64em / 1024px and higher |\n| `max-small-`    | up to 29.9375em / 479px  |\n| `max-medium-`   | up to 47.9375em / 767px  |\n| `max-large-`    | up to 63.9375em / 1023px |\n\nOur responsive sizing helpers are built upon a mobile first approach. To achieve the desired outcome of this approach, you will need to append responsive sizing helpers to an element that overrides the previous breakpoint. A default sizing helper is **required** and responsive sizing helpers are additive. The following example demonstrates the class name position for each breakpoint:\n\n`&lt;div class=\"[default] [small size override] [medium size override] [large size override]\"&gt;`\n\nA real world example would look like this:\n\n`&lt;div class=\"slds-size_1-of-2 slds-small-size_1-of-3 slds-medium-size_1-of-4 slds-large-size_1-of-3\"&gt;`\n\nThis will equate to the following width output for your element:\n\n```SCSS\n.foo {\nwidth: 50%;\n  width: 33.3333%;\n}\n  width: 25%;\n}\n  width: 33.3333%;\n}\n}\n```",
      "annotations": {
        "media": "only screen and (min-width: 64em) {",
        "summary": "Sizing utilities allow for easy width sizing on an element.",
        "utility": true,
        "name": "sizing",
        "selector": "[class*='slds-size_']",
        "support": "dev-ready"
      },
      "id": "sizing",
      "restrictees": [
        {
          "description": "",
          "annotations": {
            "selector": ".slds-size_small",
            "modifier": true,
            "restrict": "*"
          },
          "id": ".slds-size_small",
          "restrictees": []
        }
      ],
      "showcase": [
        {
          "title": "examples",
          "items": [
            {
              "id": "two-column",
              "label": "2 Column Span"
            },
            {
              "id": "three-column",
              "label": "3 Column Span"
            },
            {
              "id": "four-column",
              "label": "4 Column Span"
            },
            {
              "id": "five-column",
              "label": "5 Column Span"
            },
            {
              "id": "six-column",
              "label": "6 Column Span"
            },
            {
              "id": "7-column",
              "label": "7 Column Span"
            },
            {
              "id": "8-column",
              "label": "8 Column Span"
            },
            {
              "id": "12-column",
              "label": "12 Column Span"
            }
          ]
        }
      ]
    }
  }
}